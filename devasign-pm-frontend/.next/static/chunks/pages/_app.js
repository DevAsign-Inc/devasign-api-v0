/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "(pages-dir-browser)/./node_modules/@stellar/freighter-api/build/index.min.js":
/*!****************************************************************!*\
  !*** ./node_modules/@stellar/freighter-api/build/index.min.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("!function(r,e){ true?module.exports=e():0}(this,(()=>(()=>{\"use strict\";var r,e,s={d:(r,e)=>{for(var t in e)s.o(e,t)&&!s.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:e[t]})},o:(r,e)=>Object.prototype.hasOwnProperty.call(r,e),r:r=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(r,\"__esModule\",{value:!0})}},t={};s.r(t),s.d(t,{WatchWalletChanges:()=>w,addToken:()=>i,default:()=>u,getAddress:()=>a,getNetwork:()=>N,getNetworkDetails:()=>l,isAllowed:()=>C,isBrowser:()=>I,isConnected:()=>c,requestAccess:()=>R,setAllowed:()=>O,signAuthEntry:()=>d,signMessage:()=>S,signTransaction:()=>_}),function(r){r.CREATE_ACCOUNT=\"CREATE_ACCOUNT\",r.FUND_ACCOUNT=\"FUND_ACCOUNT\",r.ADD_ACCOUNT=\"ADD_ACCOUNT\",r.IMPORT_ACCOUNT=\"IMPORT_ACCOUNT\",r.IMPORT_HARDWARE_WALLET=\"IMPORT_HARDWARE_WALLET\",r.LOAD_ACCOUNT=\"LOAD_ACCOUNT\",r.MAKE_ACCOUNT_ACTIVE=\"MAKE_ACCOUNT_ACTIVE\",r.UPDATE_ACCOUNT_NAME=\"UPDATE_ACCOUNT_NAME\",r.GET_MNEMONIC_PHRASE=\"GET_MNEMONIC_PHRASE\",r.CONFIRM_MNEMONIC_PHRASE=\"CONFIRM_MNEMONIC_PHRASE\",r.CONFIRM_MIGRATED_MNEMONIC_PHRASE=\"CONFIRM_MIGRATED_MNEMONIC_PHRASE\",r.RECOVER_ACCOUNT=\"RECOVER_ACCOUNT\",r.CONFIRM_PASSWORD=\"CONFIRM_PASSWORD\",r.REJECT_ACCESS=\"REJECT_ACCESS\",r.GRANT_ACCESS=\"GRANT_ACCESS\",r.ADD_TOKEN=\"ADD_TOKEN\",r.SIGN_TRANSACTION=\"SIGN_TRANSACTION\",r.SIGN_BLOB=\"SIGN_BLOB\",r.SIGN_AUTH_ENTRY=\"SIGN_AUTH_ENTRY\",r.HANDLE_SIGNED_HW_PAYLOAD=\"HANDLE_SIGNED_HW_PAYLOAD\",r.REJECT_TRANSACTION=\"REJECT_TRANSACTION\",r.SIGN_FREIGHTER_TRANSACTION=\"SIGN_FREIGHTER_TRANSACTION\",r.SIGN_FREIGHTER_SOROBAN_TRANSACTION=\"SIGN_FREIGHTER_SOROBAN_TRANSACTION\",r.ADD_RECENT_ADDRESS=\"ADD_RECENT_ADDRESS\",r.LOAD_RECENT_ADDRESSES=\"LOAD_RECENT_ADDRESSES\",r.LOAD_LAST_USED_ACCOUNT=\"LOAD_LAST_USED_ACCOUNT\",r.SIGN_OUT=\"SIGN_OUT\",r.SHOW_BACKUP_PHRASE=\"SHOW_BACKUP_PHRASE\",r.SAVE_ALLOWLIST=\"SAVE_ALLOWLIST\",r.SAVE_SETTINGS=\"SAVE_SETTINGS\",r.SAVE_EXPERIMENTAL_FEATURES=\"SAVE_EXPERIMENTAL_FEATURES\",r.LOAD_SETTINGS=\"LOAD_SETTINGS\",r.GET_CACHED_ASSET_ICON=\"GET_CACHED_ASSET_ICON\",r.CACHE_ASSET_ICON=\"CACHE_ASSET_ICON\",r.GET_CACHED_ASSET_DOMAIN=\"GET_CACHED_ASSET_DOMAIN\",r.CACHE_ASSET_DOMAIN=\"CACHE_ASSET_DOMAIN\",r.GET_MEMO_REQUIRED_ACCOUNTS=\"GET_MEMO_REQUIRED_ACCOUNTS\",r.ADD_CUSTOM_NETWORK=\"ADD_CUSTOM_NETWORK\",r.CHANGE_NETWORK=\"CHANGE_NETWORK\",r.REMOVE_CUSTOM_NETWORK=\"REMOVE_CUSTOM_NETWORK\",r.EDIT_CUSTOM_NETWORK=\"EDIT_CUSTOM_NETWORK\",r.RESET_EXP_DATA=\"RESET_EXP_DATA\",r.ADD_TOKEN_ID=\"ADD_TOKEN_ID\",r.GET_TOKEN_IDS=\"GET_TOKEN_IDS\",r.REMOVE_TOKEN_ID=\"REMOVE_TOKEN_ID\",r.GET_MIGRATABLE_ACCOUNTS=\"GET_MIGRATABLE_ACCOUNTS\",r.GET_MIGRATED_MNEMONIC_PHRASE=\"GET_MIGRATED_MNEMONIC_PHRASE\",r.MIGRATE_ACCOUNTS=\"MIGRATE_ACCOUNTS\",r.ADD_ASSETS_LIST=\"ADD_ASSETS_LIST\",r.MODIFY_ASSETS_LIST=\"MODIFY_ASSETS_LIST\"}(r||(r={})),function(r){r.REQUEST_ACCESS=\"REQUEST_ACCESS\",r.REQUEST_PUBLIC_KEY=\"REQUEST_PUBLIC_KEY\",r.SUBMIT_TOKEN=\"SUBMIT_TOKEN\",r.SUBMIT_TRANSACTION=\"SUBMIT_TRANSACTION\",r.SUBMIT_BLOB=\"SUBMIT_BLOB\",r.SUBMIT_AUTH_ENTRY=\"SUBMIT_AUTH_ENTRY\",r.REQUEST_NETWORK=\"REQUEST_NETWORK\",r.REQUEST_NETWORK_DETAILS=\"REQUEST_NETWORK_DETAILS\",r.REQUEST_CONNECTION_STATUS=\"REQUEST_CONNECTION_STATUS\",r.REQUEST_ALLOWED_STATUS=\"REQUEST_ALLOWED_STATUS\",r.SET_ALLOWED_STATUS=\"SET_ALLOWED_STATUS\",r.REQUEST_USER_INFO=\"REQUEST_USER_INFO\"}(e||(e={}));const n=r=>{const s=Date.now()+Math.random();return window.postMessage({source:\"FREIGHTER_EXTERNAL_MSG_REQUEST\",messageId:s,...r},window.location.origin),new Promise((t=>{let n=0;r.type!==e.REQUEST_CONNECTION_STATUS&&r.type!==e.REQUEST_PUBLIC_KEY||(n=setTimeout((()=>{t({isConnected:!1,publicKey:\"\"}),window.removeEventListener(\"message\",o)}),2e3));const o=r=>{var e,E;r.source===window&&\"FREIGHTER_EXTERNAL_MSG_RESPONSE\"===(null===(e=null==r?void 0:r.data)||void 0===e?void 0:e.source)&&(null===(E=null==r?void 0:r.data)||void 0===E?void 0:E.messagedId)===s&&(t(r.data),window.removeEventListener(\"message\",o),clearTimeout(n))};window.addEventListener(\"message\",o,!1)}))},o={code:-1,message:\"Node environment is not supported\"},E={code:-1,message:\"The wallet encountered an internal error. Please try again or contact the wallet if the problem persists.\"},T=async()=>{let r;try{r=await n({type:e.REQUEST_PUBLIC_KEY})}catch(r){console.error(r)}return{publicKey:(null==r?void 0:r.publicKey)||\"\",error:null==r?void 0:r.apiError}},A=async()=>{let r;try{r=await n({type:e.REQUEST_NETWORK_DETAILS})}catch(r){console.error(r)}const{networkDetails:s,apiError:t}=r||{networkDetails:{network:\"\",networkName:\"\",networkUrl:\"\",networkPassphrase:\"\",sorobanRpcUrl:void 0,apiError:\"\"}},{network:o,networkUrl:E,networkPassphrase:T,sorobanRpcUrl:A}=s;return{network:o,networkUrl:E,networkPassphrase:T,sorobanRpcUrl:A,error:t}},a=async()=>{let r=\"\";if(I){const e=await T();return r=e.publicKey,e.error?{address:r,error:e.error}:{address:r}}return{address:r,error:o}},i=async r=>{if(I){const s=await(async r=>{let s;try{s=await n({contractId:r.contractId,networkPassphrase:r.networkPassphrase,type:e.SUBMIT_TOKEN})}catch(r){return{error:E}}return{contractId:s.contractId,error:null==s?void 0:s.apiError}})(r);return s.error?{contractId:\"\",error:s.error}:{contractId:s.contractId||\"\"}}return{contractId:\"\",error:o}},_=async(r,s)=>{if(I){const t=await(async(r,s)=>{let t,o,T,A;\"object\"==typeof s?(o=s.accountToSign,T=s.networkPassphrase):(t=s,o=void 0);try{A=await n({transactionXdr:r,network:t,networkPassphrase:T,accountToSign:o,type:e.SUBMIT_TRANSACTION})}catch(r){return{signedTransaction:\"\",signerAddress:\"\",error:E}}const{signedTransaction:a,signerAddress:i}=A;return{signedTransaction:a,signerAddress:i,error:null==A?void 0:A.apiError}})(r,s);return t.error?{signedTxXdr:\"\",signerAddress:\"\",error:t.error}:{signedTxXdr:t.signedTransaction,signerAddress:t.signerAddress}}return{signedTxXdr:\"\",signerAddress:\"\",error:o}},S=async(r,s)=>{if(I){const t=await(async(r,s,t)=>{let o;const T=(t||{}).address;try{o=await n({blob:r,accountToSign:T,apiVersion:s,type:e.SUBMIT_BLOB})}catch(r){return{signedMessage:null,signerAddress:\"\",error:E}}const{signedBlob:A,signerAddress:a}=o;return{signedMessage:A||null,signerAddress:a,error:null==o?void 0:o.apiError}})(r,\"3.1.0\",s);return t.error?{signedMessage:null,signerAddress:\"\",error:t.error}:{signedMessage:t.signedMessage,signerAddress:t.signerAddress}}return{signedMessage:null,signerAddress:\"\",error:o}},d=async(r,s)=>{if(I){const t=await(async(r,s)=>{const t=(s||{}).address;let o;try{o=await n({entryXdr:r,accountToSign:t,networkPassphrase:null==s?void 0:s.networkPassphrase,type:e.SUBMIT_AUTH_ENTRY})}catch(r){return console.error(r),{signedAuthEntry:null,signerAddress:\"\",error:E}}const{signedAuthEntry:T,signerAddress:A}=o;return{signedAuthEntry:T||null,signerAddress:A,error:null==o?void 0:o.apiError}})(r,s);return t.error?{signedAuthEntry:null,signerAddress:\"\",error:t.error}:{signedAuthEntry:t.signedAuthEntry,signerAddress:t.signerAddress}}return{signedAuthEntry:null,signerAddress:\"\",error:o}},c=async()=>I?window.freighter?Promise.resolve({isConnected:window.freighter}):(async()=>{let r={isConnected:!1};try{r=await n({type:e.REQUEST_CONNECTION_STATUS})}catch(r){console.error(r)}return{isConnected:r.isConnected}})():{isConnected:!1,error:o},N=async()=>{if(I){const r=await(async()=>{let r;try{r=await n({type:e.REQUEST_NETWORK_DETAILS})}catch(r){console.error(r)}const{networkDetails:s}=r||{networkDetails:{network:\"\",networkPassphrase:\"\"}};return{network:null==s?void 0:s.network,networkPassphrase:null==s?void 0:s.networkPassphrase,error:null==r?void 0:r.apiError}})();return r.error?{network:\"\",networkPassphrase:\"\",error:r.error}:{network:r.network,networkPassphrase:r.networkPassphrase}}return{network:\"\",networkPassphrase:\"\",error:o}},l=async()=>{if(I){const r=await A();return r.error?{network:\"\",networkUrl:\"\",networkPassphrase:\"\",error:r.error}:{network:r.network,networkUrl:r.networkUrl,networkPassphrase:r.networkPassphrase,sorobanRpcUrl:r.sorobanRpcUrl}}return{network:\"\",networkUrl:\"\",networkPassphrase:\"\",error:o}},C=async()=>{let r=!1;if(I){const s=await(async()=>{let r;try{r=await n({type:e.REQUEST_ALLOWED_STATUS})}catch(r){console.error(r)}const{isAllowed:s}=r||{isAllowed:!1};return{isAllowed:s,error:null==r?void 0:r.apiError}})();return r=s.isAllowed,s.error?{isAllowed:r,error:s.error}:{isAllowed:r}}return{isAllowed:r,error:o}},O=async()=>{let r=!1;if(I){const s=await(async()=>{let r;try{r=await n({type:e.SET_ALLOWED_STATUS})}catch(r){console.error(r)}const{isAllowed:s}=r||{isAllowed:!1};return{isAllowed:s,error:null==r?void 0:r.apiError}})();return r=s.isAllowed,s.error?{isAllowed:r,error:s.error}:{isAllowed:r}}return{isAllowed:r,error:o}},R=async()=>{let r=\"\";if(I){const s=await(async()=>{let r;try{r=await n({type:e.REQUEST_ACCESS})}catch(r){console.error(r)}const{publicKey:s}=r||{publicKey:\"\"};return{publicKey:s,error:null==r?void 0:r.apiError}})();return r=s.publicKey,s.error?{address:r,error:s.error}:{address:r}}return{address:r,error:o}};class w{constructor(r=3e3){this.fetchInfo=async r=>{if(!this.isRunning)return;const e=await T(),s=await A();(e.error||s.error)&&r({address:\"\",network:\"\",networkPassphrase:\"\",error:e.error||s.error}),this.currentAddress===e.publicKey&&this.currentNetwork===s.network&&this.currentNetworkPassphrase===s.networkPassphrase||(this.currentAddress=e.publicKey,this.currentNetwork=s.network,this.currentNetworkPassphrase=s.networkPassphrase,r({address:e.publicKey,network:s.network,networkPassphrase:s.networkPassphrase})),setTimeout((()=>this.fetchInfo(r)),this.timeout)},this.timeout=r,this.currentAddress=\"\",this.currentNetwork=\"\",this.currentNetworkPassphrase=\"\",this.isRunning=!1}watch(r){return I?(this.isRunning=!0,this.fetchInfo(r),{}):{error:o}}stop(){this.isRunning=!1}}const I=\"undefined\"!=typeof window,u={getAddress:a,addToken:i,signTransaction:_,signMessage:S,signAuthEntry:d,isConnected:c,getNetwork:N,getNetworkDetails:l,isAllowed:C,setAllowed:O,requestAccess:R,WatchWalletChanges:w};return t})()));\n//# sourceMappingURL=index.min.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/@stellar/freighter-api/build/index.min.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/@stellar/stellar-sdk/dist/stellar-sdk.min.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@stellar/stellar-sdk/dist/stellar-sdk.min.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n/*! For license information please see stellar-sdk.min.js.LICENSE.txt */\n!function(e,t){ true?module.exports=t():0}(self,(()=>(()=>{var e={3740:function(e){var t;t=()=>(()=>{var e={616:(e,t,r)=>{\"use strict\";r.d(t,{A:()=>o});var n=r(287);n.hp.alloc(1).subarray(0,1)instanceof n.hp||(n.hp.prototype.subarray=function(e,t){const r=Uint8Array.prototype.subarray.call(this,e,t);return Object.setPrototypeOf(r,n.hp.prototype),r});const o=n.hp},281:(e,t,r)=>{const n=r(164);e.exports=n},164:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{Array:()=>F,Bool:()=>I,Double:()=>j,Enum:()=>H,Float:()=>R,Hyper:()=>O,Int:()=>E,LargeInt:()=>T,Opaque:()=>U,Option:()=>q,Quadruple:()=>C,Reference:()=>z,String:()=>B,Struct:()=>X,Union:()=>W,UnsignedHyper:()=>P,UnsignedInt:()=>A,VarArray:()=>V,VarOpaque:()=>D,Void:()=>K,XdrReader:()=>u,XdrWriter:()=>f,config:()=>ne});class n extends TypeError{constructor(e){super(`XDR Write Error: ${e}`)}}class o extends TypeError{constructor(e){super(`XDR Read Error: ${e}`)}}class i extends TypeError{constructor(e){super(`XDR Type Definition Error: ${e}`)}}class a extends i{constructor(){super(\"method not implemented, it should be overloaded in the descendant class.\")}}var s=r(616).A;class u{constructor(e){if(!s.isBuffer(e)){if(!(e instanceof Array||Array.isArray(e)||ArrayBuffer.isView(e)))throw new o(`source invalid: ${e}`);e=s.from(e)}this._buffer=e,this._length=e.length,this._index=0}_buffer;_length;_index;get eof(){return this._index===this._length}advance(e){const t=this._index;if(this._index+=e,this._length<this._index)throw new o(\"attempt to read outside the boundary of the buffer\");const r=4-(e%4||4);if(r>0){for(let e=0;e<r;e++)if(0!==this._buffer[this._index+e])throw new o(\"invalid padding\");this._index+=r}return t}rewind(){this._index=0}read(e){const t=this.advance(e);return this._buffer.subarray(t,t+e)}readInt32BE(){return this._buffer.readInt32BE(this.advance(4))}readUInt32BE(){return this._buffer.readUInt32BE(this.advance(4))}readBigInt64BE(){return this._buffer.readBigInt64BE(this.advance(8))}readBigUInt64BE(){return this._buffer.readBigUInt64BE(this.advance(8))}readFloatBE(){return this._buffer.readFloatBE(this.advance(4))}readDoubleBE(){return this._buffer.readDoubleBE(this.advance(8))}ensureInputConsumed(){if(this._index!==this._length)throw new o(\"invalid XDR contract typecast - source buffer not entirely consumed\")}}var c=r(616).A;const l=8192;class f{constructor(e){\"number\"==typeof e?e=c.allocUnsafe(e):e instanceof c||(e=c.allocUnsafe(l)),this._buffer=e,this._length=e.length}_buffer;_length;_index=0;alloc(e){const t=this._index;return this._index+=e,this._length<this._index&&this.resize(this._index),t}resize(e){const t=Math.ceil(e/l)*l,r=c.allocUnsafe(t);this._buffer.copy(r,0,0,this._length),this._buffer=r,this._length=t}finalize(){return this._buffer.subarray(0,this._index)}toArray(){return[...this.finalize()]}write(e,t){if(\"string\"==typeof e){const r=this.alloc(t);this._buffer.write(e,r,\"utf8\")}else{e instanceof c||(e=c.from(e));const r=this.alloc(t);e.copy(this._buffer,r,0,t)}const r=4-(t%4||4);if(r>0){const e=this.alloc(r);this._buffer.fill(0,e,this._index)}}writeInt32BE(e){const t=this.alloc(4);this._buffer.writeInt32BE(e,t)}writeUInt32BE(e){const t=this.alloc(4);this._buffer.writeUInt32BE(e,t)}writeBigInt64BE(e){const t=this.alloc(8);this._buffer.writeBigInt64BE(e,t)}writeBigUInt64BE(e){const t=this.alloc(8);this._buffer.writeBigUInt64BE(e,t)}writeFloatBE(e){const t=this.alloc(4);this._buffer.writeFloatBE(e,t)}writeDoubleBE(e){const t=this.alloc(8);this._buffer.writeDoubleBE(e,t)}static bufferChunkSize=l}var p=r(616).A;class d{toXDR(e=\"raw\"){if(!this.write)return this.constructor.toXDR(this,e);const t=new f;return this.write(this,t),v(t.finalize(),e)}fromXDR(e,t=\"raw\"){if(!this.read)return this.constructor.fromXDR(e,t);const r=new u(g(e,t)),n=this.read(r);return r.ensureInputConsumed(),n}validateXDR(e,t=\"raw\"){try{return this.fromXDR(e,t),!0}catch(e){return!1}}static toXDR(e,t=\"raw\"){const r=new f;return this.write(e,r),v(r.finalize(),t)}static fromXDR(e,t=\"raw\"){const r=new u(g(e,t)),n=this.read(r);return r.ensureInputConsumed(),n}static validateXDR(e,t=\"raw\"){try{return this.fromXDR(e,t),!0}catch(e){return!1}}}class h extends d{static read(e){throw new a}static write(e,t){throw new a}static isValid(e){return!1}}class y extends d{isValid(e){return!1}}class m extends TypeError{constructor(e){super(`Invalid format ${e}, must be one of \"raw\", \"hex\", \"base64\"`)}}function v(e,t){switch(t){case\"raw\":return e;case\"hex\":return e.toString(\"hex\");case\"base64\":return e.toString(\"base64\");default:throw new m(t)}}function g(e,t){switch(t){case\"raw\":return e;case\"hex\":return p.from(e,\"hex\");case\"base64\":return p.from(e,\"base64\");default:throw new m(t)}}function b(e,t){return null!=e&&(e instanceof t||w(e,t)&&\"function\"==typeof e.constructor.read&&\"function\"==typeof e.constructor.write&&w(e,\"XdrType\"))}function w(e,t){do{if(e.constructor.name===t)return!0}while(e=Object.getPrototypeOf(e));return!1}const S=2147483647;class E extends h{static read(e){return e.readInt32BE()}static write(e,t){if(\"number\"!=typeof e)throw new n(\"not a number\");if((0|e)!==e)throw new n(\"invalid i32 value\");t.writeInt32BE(e)}static isValid(e){return\"number\"==typeof e&&(0|e)===e&&e>=-2147483648&&e<=S}}function _(e,t,r){if(\"bigint\"!=typeof e)throw new TypeError(\"Expected bigint 'value', got \"+typeof e);const n=t/r;if(1===n)return[e];if(r<32||r>128||2!==n&&4!==n&&8!==n)throw new TypeError(`invalid bigint (${e}) and slice size (${t} -> ${r}) combination`);const o=BigInt(r),i=new Array(n);for(let t=0;t<n;t++)i[t]=BigInt.asIntN(r,e),e>>=o;return i}function k(e,t){if(t)return[0n,(1n<<BigInt(e))-1n];const r=1n<<BigInt(e-1);return[0n-r,r-1n]}E.MAX_VALUE=S,E.MIN_VALUE=2147483648;class T extends h{constructor(e){super(),this._value=function(e,t,r){e instanceof Array?e.length&&e[0]instanceof Array&&(e=e[0]):e=[e];const n=t/e.length;switch(n){case 32:case 64:case 128:case 256:break;default:throw new RangeError(`expected slices to fit in 32/64/128/256 bits, got ${e}`)}try{for(let t=0;t<e.length;t++)\"bigint\"!=typeof e[t]&&(e[t]=BigInt(e[t].valueOf()))}catch(t){throw new TypeError(`expected bigint-like values, got: ${e} (${t})`)}if(r&&1===e.length&&e[0]<0n)throw new RangeError(`expected a positive value, got: ${e}`);let o=BigInt.asUintN(n,e[0]);for(let t=1;t<e.length;t++)o|=BigInt.asUintN(n,e[t])<<BigInt(t*n);r||(o=BigInt.asIntN(t,o));const[i,a]=k(t,r);if(o>=i&&o<=a)return o;throw new TypeError(`bigint values [${e}] for ${function(e,t){return`${t?\"u\":\"i\"}${e}`}(t,r)} out of range [${i}, ${a}]: ${o}`)}(e,this.size,this.unsigned)}get unsigned(){throw new a}get size(){throw new a}slice(e){return _(this._value,this.size,e)}toString(){return this._value.toString()}toJSON(){return{_value:this._value.toString()}}toBigInt(){return BigInt(this._value)}static read(e){const{size:t}=this.prototype;return 64===t?new this(e.readBigUInt64BE()):new this(...Array.from({length:t/64},(()=>e.readBigUInt64BE())).reverse())}static write(e,t){if(e instanceof this)e=e._value;else if(\"bigint\"!=typeof e||e>this.MAX_VALUE||e<this.MIN_VALUE)throw new n(`${e} is not a ${this.name}`);const{unsigned:r,size:o}=this.prototype;if(64===o)r?t.writeBigUInt64BE(e):t.writeBigInt64BE(e);else for(const n of _(e,o,64).reverse())r?t.writeBigUInt64BE(n):t.writeBigInt64BE(n)}static isValid(e){return\"bigint\"==typeof e||e instanceof this}static fromString(e){return new this(e)}static MAX_VALUE=0n;static MIN_VALUE=0n;static defineIntBoundaries(){const[e,t]=k(this.prototype.size,this.prototype.unsigned);this.MIN_VALUE=e,this.MAX_VALUE=t}}class O extends T{constructor(...e){super(e)}get low(){return 0|Number(0xffffffffn&this._value)}get high(){return 0|Number(this._value>>32n)}get size(){return 64}get unsigned(){return!1}static fromBits(e,t){return new this(e,t)}}O.defineIntBoundaries();const x=4294967295;class A extends h{static read(e){return e.readUInt32BE()}static write(e,t){if(\"number\"!=typeof e||!(e>=0&&e<=x)||e%1!=0)throw new n(\"invalid u32 value\");t.writeUInt32BE(e)}static isValid(e){return\"number\"==typeof e&&e%1==0&&e>=0&&e<=x}}A.MAX_VALUE=x,A.MIN_VALUE=0;class P extends T{constructor(...e){super(e)}get low(){return 0|Number(0xffffffffn&this._value)}get high(){return 0|Number(this._value>>32n)}get size(){return 64}get unsigned(){return!0}static fromBits(e,t){return new this(e,t)}}P.defineIntBoundaries();class R extends h{static read(e){return e.readFloatBE()}static write(e,t){if(\"number\"!=typeof e)throw new n(\"not a number\");t.writeFloatBE(e)}static isValid(e){return\"number\"==typeof e}}class j extends h{static read(e){return e.readDoubleBE()}static write(e,t){if(\"number\"!=typeof e)throw new n(\"not a number\");t.writeDoubleBE(e)}static isValid(e){return\"number\"==typeof e}}class C extends h{static read(){throw new i(\"quadruple not supported\")}static write(){throw new i(\"quadruple not supported\")}static isValid(){return!1}}class I extends h{static read(e){const t=E.read(e);switch(t){case 0:return!1;case 1:return!0;default:throw new o(`got ${t} when trying to read a bool`)}}static write(e,t){const r=e?1:0;E.write(r,t)}static isValid(e){return\"boolean\"==typeof e}}var L=r(616).A;class B extends y{constructor(e=A.MAX_VALUE){super(),this._maxLength=e}read(e){const t=A.read(e);if(t>this._maxLength)throw new o(`saw ${t} length String, max allowed is ${this._maxLength}`);return e.read(t)}readString(e){return this.read(e).toString(\"utf8\")}write(e,t){const r=\"string\"==typeof e?L.byteLength(e,\"utf8\"):e.length;if(r>this._maxLength)throw new n(`got ${e.length} bytes, max allowed is ${this._maxLength}`);A.write(r,t),t.write(e,r)}isValid(e){return\"string\"==typeof e?L.byteLength(e,\"utf8\")<=this._maxLength:!!(e instanceof Array||L.isBuffer(e))&&e.length<=this._maxLength}}var N=r(616).A;class U extends y{constructor(e){super(),this._length=e}read(e){return e.read(this._length)}write(e,t){const{length:r}=e;if(r!==this._length)throw new n(`got ${e.length} bytes, expected ${this._length}`);t.write(e,r)}isValid(e){return N.isBuffer(e)&&e.length===this._length}}var M=r(616).A;class D extends y{constructor(e=A.MAX_VALUE){super(),this._maxLength=e}read(e){const t=A.read(e);if(t>this._maxLength)throw new o(`saw ${t} length VarOpaque, max allowed is ${this._maxLength}`);return e.read(t)}write(e,t){const{length:r}=e;if(e.length>this._maxLength)throw new n(`got ${e.length} bytes, max allowed is ${this._maxLength}`);A.write(r,t),t.write(e,r)}isValid(e){return M.isBuffer(e)&&e.length<=this._maxLength}}class F extends y{constructor(e,t){super(),this._childType=e,this._length=t}read(e){const t=new r.g.Array(this._length);for(let r=0;r<this._length;r++)t[r]=this._childType.read(e);return t}write(e,t){if(!r.g.Array.isArray(e))throw new n(\"value is not array\");if(e.length!==this._length)throw new n(`got array of size ${e.length}, expected ${this._length}`);for(const r of e)this._childType.write(r,t)}isValid(e){if(!(e instanceof r.g.Array)||e.length!==this._length)return!1;for(const t of e)if(!this._childType.isValid(t))return!1;return!0}}class V extends y{constructor(e,t=A.MAX_VALUE){super(),this._childType=e,this._maxLength=t}read(e){const t=A.read(e);if(t>this._maxLength)throw new o(`saw ${t} length VarArray, max allowed is ${this._maxLength}`);const r=new Array(t);for(let n=0;n<t;n++)r[n]=this._childType.read(e);return r}write(e,t){if(!(e instanceof Array))throw new n(\"value is not array\");if(e.length>this._maxLength)throw new n(`got array of size ${e.length}, max allowed is ${this._maxLength}`);A.write(e.length,t);for(const r of e)this._childType.write(r,t)}isValid(e){if(!(e instanceof Array)||e.length>this._maxLength)return!1;for(const t of e)if(!this._childType.isValid(t))return!1;return!0}}class q extends h{constructor(e){super(),this._childType=e}read(e){if(I.read(e))return this._childType.read(e)}write(e,t){const r=null!=e;I.write(r,t),r&&this._childType.write(e,t)}isValid(e){return null==e||this._childType.isValid(e)}}class K extends h{static read(){}static write(e){if(void 0!==e)throw new n(\"trying to write value to a void slot\")}static isValid(e){return void 0===e}}class H extends h{constructor(e,t){super(),this.name=e,this.value=t}static read(e){const t=E.read(e),r=this._byValue[t];if(void 0===r)throw new o(`unknown ${this.enumName} member for value ${t}`);return r}static write(e,t){if(!this.isValid(e))throw new n(`${e} has enum name ${e?.enumName}, not ${this.enumName}: ${JSON.stringify(e)}`);E.write(e.value,t)}static isValid(e){return e?.constructor?.enumName===this.enumName||b(e,this)}static members(){return this._members}static values(){return Object.values(this._members)}static fromName(e){const t=this._members[e];if(!t)throw new TypeError(`${e} is not a member of ${this.enumName}`);return t}static fromValue(e){const t=this._byValue[e];if(void 0===t)throw new TypeError(`${e} is not a value of any member of ${this.enumName}`);return t}static create(e,t,r){const n=class extends H{};n.enumName=t,e.results[t]=n,n._members={},n._byValue={};for(const[e,t]of Object.entries(r)){const r=new n(e,t);n._members[e]=r,n._byValue[t]=r,n[e]=()=>r}return n}}class z extends h{resolve(){throw new i('\"resolve\" method should be implemented in the descendant class')}}class X extends y{constructor(e){super(),this._attributes=e||{}}static read(e){const t={};for(const[r,n]of this._fields)t[r]=n.read(e);return new this(t)}static write(e,t){if(!this.isValid(e))throw new n(`${e} has struct name ${e?.constructor?.structName}, not ${this.structName}: ${JSON.stringify(e)}`);for(const[r,n]of this._fields){const o=e._attributes[r];n.write(o,t)}}static isValid(e){return e?.constructor?.structName===this.structName||b(e,this)}static create(e,t,r){const n=class extends X{};n.structName=t,e.results[t]=n;const o=new Array(r.length);for(let t=0;t<r.length;t++){const i=r[t],a=i[0];let s=i[1];s instanceof z&&(s=s.resolve(e)),o[t]=[a,s],n.prototype[a]=G(a)}return n._fields=o,n}}function G(e){return function(t){return void 0!==t&&(this._attributes[e]=t),this._attributes[e]}}class W extends y{constructor(e,t){super(),this.set(e,t)}set(e,t){\"string\"==typeof e&&(e=this.constructor._switchOn.fromName(e)),this._switch=e;const r=this.constructor.armForSwitch(this._switch);this._arm=r,this._armType=r===K?K:this.constructor._arms[r],this._value=t}get(e=this._arm){if(this._arm!==K&&this._arm!==e)throw new TypeError(`${e} not set`);return this._value}switch(){return this._switch}arm(){return this._arm}armType(){return this._armType}value(){return this._value}static armForSwitch(e){const t=this._switches.get(e);if(void 0!==t)return t;if(this._defaultArm)return this._defaultArm;throw new TypeError(`Bad union switch: ${e}`)}static armTypeForArm(e){return e===K?K:this._arms[e]}static read(e){const t=this._switchOn.read(e),r=this.armForSwitch(t),n=r===K?K:this._arms[r];let o;return o=void 0!==n?n.read(e):r.read(e),new this(t,o)}static write(e,t){if(!this.isValid(e))throw new n(`${e} has union name ${e?.unionName}, not ${this.unionName}: ${JSON.stringify(e)}`);this._switchOn.write(e.switch(),t),e.armType().write(e.value(),t)}static isValid(e){return e?.constructor?.unionName===this.unionName||b(e,this)}static create(e,t,r){const n=class extends W{};n.unionName=t,e.results[t]=n,r.switchOn instanceof z?n._switchOn=r.switchOn.resolve(e):n._switchOn=r.switchOn,n._switches=new Map,n._arms={};let o=r.defaultArm;o instanceof z&&(o=o.resolve(e)),n._defaultArm=o;for(const[e,t]of r.switches){const r=\"string\"==typeof e?n._switchOn.fromName(e):e;n._switches.set(r,t)}if(void 0!==n._switchOn.values)for(const e of n._switchOn.values())n[e.name]=function(t){return new n(e,t)},n.prototype[e.name]=function(t){return this.set(e,t)};if(r.arms)for(const[t,o]of Object.entries(r.arms))n._arms[t]=o instanceof z?o.resolve(e):o,o!==K&&(n.prototype[t]=function(){return this.get(t)});return n}}class $ extends z{constructor(e){super(),this.name=e}resolve(e){return e.definitions[this.name].resolve(e)}}class Q extends z{constructor(e,t,r=!1){super(),this.childReference=e,this.length=t,this.variable=r}resolve(e){let t=this.childReference,r=this.length;return t instanceof z&&(t=t.resolve(e)),r instanceof z&&(r=r.resolve(e)),this.variable?new V(t,r):new F(t,r)}}class Y extends z{constructor(e){super(),this.childReference=e,this.name=e.name}resolve(e){let t=this.childReference;return t instanceof z&&(t=t.resolve(e)),new q(t)}}class J extends z{constructor(e,t){super(),this.sizedType=e,this.length=t}resolve(e){let t=this.length;return t instanceof z&&(t=t.resolve(e)),new this.sizedType(t)}}class Z{constructor(e,t,r){this.constructor=e,this.name=t,this.config=r}resolve(e){return this.name in e.results?e.results[this.name]:this.constructor(e,this.name,this.config)}}function ee(e,t,r){return r instanceof z&&(r=r.resolve(e)),e.results[t]=r,r}function te(e,t,r){return e.results[t]=r,r}class re{constructor(e){this._destination=e,this._definitions={}}enum(e,t){const r=new Z(H.create,e,t);this.define(e,r)}struct(e,t){const r=new Z(X.create,e,t);this.define(e,r)}union(e,t){const r=new Z(W.create,e,t);this.define(e,r)}typedef(e,t){const r=new Z(ee,e,t);this.define(e,r)}const(e,t){const r=new Z(te,e,t);this.define(e,r)}void(){return K}bool(){return I}int(){return E}hyper(){return O}uint(){return A}uhyper(){return P}float(){return R}double(){return j}quadruple(){return C}string(e){return new J(B,e)}opaque(e){return new J(U,e)}varOpaque(e){return new J(D,e)}array(e,t){return new Q(e,t)}varArray(e,t){return new Q(e,t,!0)}option(e){return new Y(e)}define(e,t){if(void 0!==this._destination[e])throw new i(`${e} is already defined`);this._definitions[e]=t}lookup(e){return new $(e)}resolve(){for(const e of Object.values(this._definitions))e.resolve({definitions:this._definitions,results:this._destination})}}function ne(e,t={}){if(e){const r=new re(t);e(r),r.resolve()}return t}},526:(e,t)=>{\"use strict\";t.byteLength=function(e){var t=s(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,i=s(e),a=i[0],u=i[1],c=new o(function(e,t,r){return 3*(t+r)/4-r}(0,a,u)),l=0,f=u>0?a-4:a;for(r=0;r<f;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],c[l++]=t>>16&255,c[l++]=t>>8&255,c[l++]=255&t;return 2===u&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,c[l++]=255&t),1===u&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,c[l++]=t>>8&255,c[l++]=255&t),c},t.fromByteArray=function(e){for(var t,n=e.length,o=n%3,i=[],a=16383,s=0,c=n-o;s<c;s+=a)i.push(u(e,s,s+a>c?c:s+a));return 1===o?(t=e[n-1],i.push(r[t>>2]+r[t<<4&63]+\"==\")):2===o&&(t=(e[n-2]<<8)+e[n-1],i.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+\"=\")),i.join(\"\")};for(var r=[],n=[],o=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",a=0;a<64;++a)r[a]=i[a],n[i.charCodeAt(a)]=a;function s(e){var t=e.length;if(t%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=e.indexOf(\"=\");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function u(e,t,n){for(var o,i,a=[],s=t;s<n;s+=3)o=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(r[(i=o)>>18&63]+r[i>>12&63]+r[i>>6&63]+r[63&i]);return a.join(\"\")}n[\"-\".charCodeAt(0)]=62,n[\"_\".charCodeAt(0)]=63},287:(e,t,r)=>{\"use strict\";const n=r(526),o=r(251),i=\"function\"==typeof Symbol&&\"function\"==typeof Symbol.for?Symbol.for(\"nodejs.util.inspect.custom\"):null;t.hp=u,t.IS=50;const a=2147483647;function s(e){if(e>a)throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,u.prototype),t}function u(e,t,r){if(\"number\"==typeof e){if(\"string\"==typeof t)throw new TypeError('The \"string\" argument must be of type string. Received type number');return f(e)}return c(e,t,r)}function c(e,t,r){if(\"string\"==typeof e)return function(e,t){if(\"string\"==typeof t&&\"\"!==t||(t=\"utf8\"),!u.isEncoding(t))throw new TypeError(\"Unknown encoding: \"+t);const r=0|y(e,t);let n=s(r);const o=n.write(e,t);return o!==r&&(n=n.slice(0,o)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if($(e,Uint8Array)){const t=new Uint8Array(e);return d(t.buffer,t.byteOffset,t.byteLength)}return p(e)}(e);if(null==e)throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof e);if($(e,ArrayBuffer)||e&&$(e.buffer,ArrayBuffer))return d(e,t,r);if(\"undefined\"!=typeof SharedArrayBuffer&&($(e,SharedArrayBuffer)||e&&$(e.buffer,SharedArrayBuffer)))return d(e,t,r);if(\"number\"==typeof e)throw new TypeError('The \"value\" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return u.from(n,t,r);const o=function(e){if(u.isBuffer(e)){const t=0|h(e.length),r=s(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?\"number\"!=typeof e.length||Q(e.length)?s(0):p(e):\"Buffer\"===e.type&&Array.isArray(e.data)?p(e.data):void 0}(e);if(o)return o;if(\"undefined\"!=typeof Symbol&&null!=Symbol.toPrimitive&&\"function\"==typeof e[Symbol.toPrimitive])return u.from(e[Symbol.toPrimitive](\"string\"),t,r);throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof e)}function l(e){if(\"number\"!=typeof e)throw new TypeError('\"size\" argument must be of type number');if(e<0)throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}function f(e){return l(e),s(e<0?0:0|h(e))}function p(e){const t=e.length<0?0:0|h(e.length),r=s(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function d(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('\"offset\" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('\"length\" is outside of buffer bounds');let n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,u.prototype),n}function h(e){if(e>=a)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+a.toString(16)+\" bytes\");return 0|e}function y(e,t){if(u.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||$(e,ArrayBuffer))return e.byteLength;if(\"string\"!=typeof e)throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let o=!1;for(;;)switch(t){case\"ascii\":case\"latin1\":case\"binary\":return r;case\"utf8\":case\"utf-8\":return X(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*r;case\"hex\":return r>>>1;case\"base64\":return G(e).length;default:if(o)return n?-1:X(e).length;t=(\"\"+t).toLowerCase(),o=!0}}function m(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return\"\";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return\"\";if((r>>>=0)<=(t>>>=0))return\"\";for(e||(e=\"utf8\");;)switch(e){case\"hex\":return R(this,t,r);case\"utf8\":case\"utf-8\":return O(this,t,r);case\"ascii\":return A(this,t,r);case\"latin1\":case\"binary\":return P(this,t,r);case\"base64\":return T(this,t,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return j(this,t,r);default:if(n)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase(),n=!0}}function v(e,t,r){const n=e[t];e[t]=e[r],e[r]=n}function g(e,t,r,n,o){if(0===e.length)return-1;if(\"string\"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),Q(r=+r)&&(r=o?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(o)return-1;r=e.length-1}else if(r<0){if(!o)return-1;r=0}if(\"string\"==typeof t&&(t=u.from(t,n)),u.isBuffer(t))return 0===t.length?-1:b(e,t,r,n,o);if(\"number\"==typeof t)return t&=255,\"function\"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):b(e,[t],r,n,o);throw new TypeError(\"val must be string, number or Buffer\")}function b(e,t,r,n,o){let i,a=1,s=e.length,u=t.length;if(void 0!==n&&(\"ucs2\"===(n=String(n).toLowerCase())||\"ucs-2\"===n||\"utf16le\"===n||\"utf-16le\"===n)){if(e.length<2||t.length<2)return-1;a=2,s/=2,u/=2,r/=2}function c(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(o){let n=-1;for(i=r;i<s;i++)if(c(e,i)===c(t,-1===n?0:i-n)){if(-1===n&&(n=i),i-n+1===u)return n*a}else-1!==n&&(i-=i-n),n=-1}else for(r+u>s&&(r=s-u),i=r;i>=0;i--){let r=!0;for(let n=0;n<u;n++)if(c(e,i+n)!==c(t,n)){r=!1;break}if(r)return i}return-1}function w(e,t,r,n){r=Number(r)||0;const o=e.length-r;n?(n=Number(n))>o&&(n=o):n=o;const i=t.length;let a;for(n>i/2&&(n=i/2),a=0;a<n;++a){const n=parseInt(t.substr(2*a,2),16);if(Q(n))return a;e[r+a]=n}return a}function S(e,t,r,n){return W(X(t,e.length-r),e,r,n)}function E(e,t,r,n){return W(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function _(e,t,r,n){return W(G(t),e,r,n)}function k(e,t,r,n){return W(function(e,t){let r,n,o;const i=[];for(let a=0;a<e.length&&!((t-=2)<0);++a)r=e.charCodeAt(a),n=r>>8,o=r%256,i.push(o),i.push(n);return i}(t,e.length-r),e,r,n)}function T(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function O(e,t,r){r=Math.min(e.length,r);const n=[];let o=t;for(;o<r;){const t=e[o];let i=null,a=t>239?4:t>223?3:t>191?2:1;if(o+a<=r){let r,n,s,u;switch(a){case 1:t<128&&(i=t);break;case 2:r=e[o+1],128==(192&r)&&(u=(31&t)<<6|63&r,u>127&&(i=u));break;case 3:r=e[o+1],n=e[o+2],128==(192&r)&&128==(192&n)&&(u=(15&t)<<12|(63&r)<<6|63&n,u>2047&&(u<55296||u>57343)&&(i=u));break;case 4:r=e[o+1],n=e[o+2],s=e[o+3],128==(192&r)&&128==(192&n)&&128==(192&s)&&(u=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&s,u>65535&&u<1114112&&(i=u))}}null===i?(i=65533,a=1):i>65535&&(i-=65536,n.push(i>>>10&1023|55296),i=56320|1023&i),n.push(i),o+=a}return function(e){const t=e.length;if(t<=x)return String.fromCharCode.apply(String,e);let r=\"\",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=x));return r}(n)}u.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),u.TYPED_ARRAY_SUPPORT||\"undefined\"==typeof console||\"function\"!=typeof console.error||console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"),Object.defineProperty(u.prototype,\"parent\",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,\"offset\",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}}),u.poolSize=8192,u.from=function(e,t,r){return c(e,t,r)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array),u.alloc=function(e,t,r){return function(e,t,r){return l(e),e<=0?s(e):void 0!==t?\"string\"==typeof r?s(e).fill(t,r):s(e).fill(t):s(e)}(e,t,r)},u.allocUnsafe=function(e){return f(e)},u.allocUnsafeSlow=function(e){return f(e)},u.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==u.prototype},u.compare=function(e,t){if($(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),$(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let o=0,i=Math.min(r,n);o<i;++o)if(e[o]!==t[o]){r=e[o],n=t[o];break}return r<n?-1:n<r?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},u.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const n=u.allocUnsafe(t);let o=0;for(r=0;r<e.length;++r){let t=e[r];if($(t,Uint8Array))o+t.length>n.length?(u.isBuffer(t)||(t=u.from(t)),t.copy(n,o)):Uint8Array.prototype.set.call(n,t,o);else{if(!u.isBuffer(t))throw new TypeError('\"list\" argument must be an Array of Buffers');t.copy(n,o)}o+=t.length}return n},u.byteLength=y,u.prototype._isBuffer=!0,u.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(let t=0;t<e;t+=2)v(this,t,t+1);return this},u.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(let t=0;t<e;t+=4)v(this,t,t+3),v(this,t+1,t+2);return this},u.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(let t=0;t<e;t+=8)v(this,t,t+7),v(this,t+1,t+6),v(this,t+2,t+5),v(this,t+3,t+4);return this},u.prototype.toString=function(){const e=this.length;return 0===e?\"\":0===arguments.length?O(this,0,e):m.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){let e=\"\";const r=t.IS;return e=this.toString(\"hex\",0,r).replace(/(.{2})/g,\"$1 \").trim(),this.length>r&&(e+=\" ... \"),\"<Buffer \"+e+\">\"},i&&(u.prototype[i]=u.prototype.inspect),u.prototype.compare=function(e,t,r,n,o){if($(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),!u.isBuffer(e))throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===o&&(o=this.length),t<0||r>e.length||n<0||o>this.length)throw new RangeError(\"out of range index\");if(n>=o&&t>=r)return 0;if(n>=o)return-1;if(t>=r)return 1;if(this===e)return 0;let i=(o>>>=0)-(n>>>=0),a=(r>>>=0)-(t>>>=0);const s=Math.min(i,a),c=this.slice(n,o),l=e.slice(t,r);for(let e=0;e<s;++e)if(c[e]!==l[e]){i=c[e],a=l[e];break}return i<a?-1:a<i?1:0},u.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},u.prototype.indexOf=function(e,t,r){return g(this,e,t,r,!0)},u.prototype.lastIndexOf=function(e,t,r){return g(this,e,t,r,!1)},u.prototype.write=function(e,t,r,n){if(void 0===t)n=\"utf8\",r=this.length,t=0;else if(void 0===r&&\"string\"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n=\"utf8\")):(n=r,r=void 0)}const o=this.length-t;if((void 0===r||r>o)&&(r=o),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");n||(n=\"utf8\");let i=!1;for(;;)switch(n){case\"hex\":return w(this,e,t,r);case\"utf8\":case\"utf-8\":return S(this,e,t,r);case\"ascii\":case\"latin1\":case\"binary\":return E(this,e,t,r);case\"base64\":return _(this,e,t,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return k(this,e,t,r);default:if(i)throw new TypeError(\"Unknown encoding: \"+n);n=(\"\"+n).toLowerCase(),i=!0}},u.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};const x=4096;function A(e,t,r){let n=\"\";r=Math.min(e.length,r);for(let o=t;o<r;++o)n+=String.fromCharCode(127&e[o]);return n}function P(e,t,r){let n=\"\";r=Math.min(e.length,r);for(let o=t;o<r;++o)n+=String.fromCharCode(e[o]);return n}function R(e,t,r){const n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let o=\"\";for(let n=t;n<r;++n)o+=Y[e[n]];return o}function j(e,t,r){const n=e.slice(t,r);let o=\"\";for(let e=0;e<n.length-1;e+=2)o+=String.fromCharCode(n[e]+256*n[e+1]);return o}function C(e,t,r){if(e%1!=0||e<0)throw new RangeError(\"offset is not uint\");if(e+t>r)throw new RangeError(\"Trying to access beyond buffer length\")}function I(e,t,r,n,o,i){if(!u.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(t>o||t<i)throw new RangeError('\"value\" argument is out of bounds');if(r+n>e.length)throw new RangeError(\"Index out of range\")}function L(e,t,r,n,o){q(t,n,o,e,r,7);let i=Number(t&BigInt(4294967295));e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=a,a>>=8,e[r++]=a,a>>=8,e[r++]=a,a>>=8,e[r++]=a,r}function B(e,t,r,n,o){q(t,n,o,e,r,7);let i=Number(t&BigInt(4294967295));e[r+7]=i,i>>=8,e[r+6]=i,i>>=8,e[r+5]=i,i>>=8,e[r+4]=i;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=a,a>>=8,e[r+2]=a,a>>=8,e[r+1]=a,a>>=8,e[r]=a,r+8}function N(e,t,r,n,o,i){if(r+n>e.length)throw new RangeError(\"Index out of range\");if(r<0)throw new RangeError(\"Index out of range\")}function U(e,t,r,n,i){return t=+t,r>>>=0,i||N(e,0,r,4),o.write(e,t,r,n,23,4),r+4}function M(e,t,r,n,i){return t=+t,r>>>=0,i||N(e,0,r,8),o.write(e,t,r,n,52,8),r+8}u.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,u.prototype),n},u.prototype.readUintLE=u.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e],o=1,i=0;for(;++i<t&&(o*=256);)n+=this[e+i]*o;return n},u.prototype.readUintBE=u.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e+--t],o=1;for(;t>0&&(o*=256);)n+=this[e+--t]*o;return n},u.prototype.readUint8=u.prototype.readUInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),this[e]},u.prototype.readUint16LE=u.prototype.readUInt16LE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUint16BE=u.prototype.readUInt16BE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUint32LE=u.prototype.readUInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUint32BE=u.prototype.readUInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readBigUInt64LE=J((function(e){K(e>>>=0,\"offset\");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||H(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,o=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(n)+(BigInt(o)<<BigInt(32))})),u.prototype.readBigUInt64BE=J((function(e){K(e>>>=0,\"offset\");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||H(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],o=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(o)})),u.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e],o=1,i=0;for(;++i<t&&(o*=256);)n+=this[e+i]*o;return o*=128,n>=o&&(n-=Math.pow(2,8*t)),n},u.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=t,o=1,i=this[e+--n];for(;n>0&&(o*=256);)i+=this[e+--n]*o;return o*=128,i>=o&&(i-=Math.pow(2,8*t)),i},u.prototype.readInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){e>>>=0,t||C(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt16BE=function(e,t){e>>>=0,t||C(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readBigInt64LE=J((function(e){K(e>>>=0,\"offset\");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||H(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),u.prototype.readBigInt64BE=J((function(e){K(e>>>=0,\"offset\");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||H(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)})),u.prototype.readFloatLE=function(e,t){return e>>>=0,t||C(e,4,this.length),o.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return e>>>=0,t||C(e,4,this.length),o.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return e>>>=0,t||C(e,8,this.length),o.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return e>>>=0,t||C(e,8,this.length),o.read(this,e,!1,52,8)},u.prototype.writeUintLE=u.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||I(this,e,t,r,Math.pow(2,8*r)-1,0);let o=1,i=0;for(this[t]=255&e;++i<r&&(o*=256);)this[t+i]=e/o&255;return t+r},u.prototype.writeUintBE=u.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||I(this,e,t,r,Math.pow(2,8*r)-1,0);let o=r-1,i=1;for(this[t+o]=255&e;--o>=0&&(i*=256);)this[t+o]=e/i&255;return t+r},u.prototype.writeUint8=u.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,1,255,0),this[t]=255&e,t+1},u.prototype.writeUint16LE=u.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},u.prototype.writeUint16BE=u.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},u.prototype.writeUint32LE=u.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},u.prototype.writeUint32BE=u.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},u.prototype.writeBigUInt64LE=J((function(e,t=0){return L(this,e,t,BigInt(0),BigInt(\"0xffffffffffffffff\"))})),u.prototype.writeBigUInt64BE=J((function(e,t=0){return B(this,e,t,BigInt(0),BigInt(\"0xffffffffffffffff\"))})),u.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);I(this,e,t,r,n-1,-n)}let o=0,i=1,a=0;for(this[t]=255&e;++o<r&&(i*=256);)e<0&&0===a&&0!==this[t+o-1]&&(a=1),this[t+o]=(e/i|0)-a&255;return t+r},u.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);I(this,e,t,r,n-1,-n)}let o=r-1,i=1,a=0;for(this[t+o]=255&e;--o>=0&&(i*=256);)e<0&&0===a&&0!==this[t+o+1]&&(a=1),this[t+o]=(e/i|0)-a&255;return t+r},u.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},u.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},u.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},u.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},u.prototype.writeBigInt64LE=J((function(e,t=0){return L(this,e,t,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))})),u.prototype.writeBigInt64BE=J((function(e,t=0){return B(this,e,t,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))})),u.prototype.writeFloatLE=function(e,t,r){return U(this,e,t,!0,r)},u.prototype.writeFloatBE=function(e,t,r){return U(this,e,t,!1,r)},u.prototype.writeDoubleLE=function(e,t,r){return M(this,e,t,!0,r)},u.prototype.writeDoubleBE=function(e,t,r){return M(this,e,t,!1,r)},u.prototype.copy=function(e,t,r,n){if(!u.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError(\"targetStart out of bounds\");if(r<0||r>=this.length)throw new RangeError(\"Index out of range\");if(n<0)throw new RangeError(\"sourceEnd out of bounds\");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);const o=n-r;return this===e&&\"function\"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),o},u.prototype.fill=function(e,t,r,n){if(\"string\"==typeof e){if(\"string\"==typeof t?(n=t,t=0,r=this.length):\"string\"==typeof r&&(n=r,r=this.length),void 0!==n&&\"string\"!=typeof n)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof n&&!u.isEncoding(n))throw new TypeError(\"Unknown encoding: \"+n);if(1===e.length){const t=e.charCodeAt(0);(\"utf8\"===n&&t<128||\"latin1\"===n)&&(e=t)}}else\"number\"==typeof e?e&=255:\"boolean\"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError(\"Out of range index\");if(r<=t)return this;let o;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),\"number\"==typeof e)for(o=t;o<r;++o)this[o]=e;else{const i=u.isBuffer(e)?e:u.from(e,n),a=i.length;if(0===a)throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"');for(o=0;o<r-t;++o)this[o+t]=i[o%a]}return this};const D={};function F(e,t,r){D[e]=class extends r{constructor(){super(),Object.defineProperty(this,\"message\",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,\"code\",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function V(e){let t=\"\",r=e.length;const n=\"-\"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function q(e,t,r,n,o,i){if(e>r||e<t){const n=\"bigint\"==typeof t?\"n\":\"\";let o;throw o=i>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(i+1)}${n}`:`>= -(2${n} ** ${8*(i+1)-1}${n}) and < 2 ** ${8*(i+1)-1}${n}`:`>= ${t}${n} and <= ${r}${n}`,new D.ERR_OUT_OF_RANGE(\"value\",o,e)}!function(e,t,r){K(t,\"offset\"),void 0!==e[t]&&void 0!==e[t+r]||H(t,e.length-(r+1))}(n,o,i)}function K(e,t){if(\"number\"!=typeof e)throw new D.ERR_INVALID_ARG_TYPE(t,\"number\",e)}function H(e,t,r){if(Math.floor(e)!==e)throw K(e,r),new D.ERR_OUT_OF_RANGE(r||\"offset\",\"an integer\",e);if(t<0)throw new D.ERR_BUFFER_OUT_OF_BOUNDS;throw new D.ERR_OUT_OF_RANGE(r||\"offset\",`>= ${r?1:0} and <= ${t}`,e)}F(\"ERR_BUFFER_OUT_OF_BOUNDS\",(function(e){return e?`${e} is outside of buffer bounds`:\"Attempt to access memory outside buffer bounds\"}),RangeError),F(\"ERR_INVALID_ARG_TYPE\",(function(e,t){return`The \"${e}\" argument must be of type number. Received type ${typeof t}`}),TypeError),F(\"ERR_OUT_OF_RANGE\",(function(e,t,r){let n=`The value of \"${e}\" is out of range.`,o=r;return Number.isInteger(r)&&Math.abs(r)>2**32?o=V(String(r)):\"bigint\"==typeof r&&(o=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(o=V(o)),o+=\"n\"),n+=` It must be ${t}. Received ${o}`,n}),RangeError);const z=/[^+/0-9A-Za-z-_]/g;function X(e,t){let r;t=t||1/0;const n=e.length;let o=null;const i=[];for(let a=0;a<n;++a){if(r=e.charCodeAt(a),r>55295&&r<57344){if(!o){if(r>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(a+1===n){(t-=3)>-1&&i.push(239,191,189);continue}o=r;continue}if(r<56320){(t-=3)>-1&&i.push(239,191,189),o=r;continue}r=65536+(o-55296<<10|r-56320)}else o&&(t-=3)>-1&&i.push(239,191,189);if(o=null,r<128){if((t-=1)<0)break;i.push(r)}else if(r<2048){if((t-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error(\"Invalid code point\");if((t-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function G(e){return n.toByteArray(function(e){if((e=(e=e.split(\"=\")[0]).trim().replace(z,\"\")).length<2)return\"\";for(;e.length%4!=0;)e+=\"=\";return e}(e))}function W(e,t,r,n){let o;for(o=0;o<n&&!(o+r>=t.length||o>=e.length);++o)t[o+r]=e[o];return o}function $(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Q(e){return e!=e}const Y=function(){const e=\"0123456789abcdef\",t=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let o=0;o<16;++o)t[n+o]=e[r]+e[o]}return t}();function J(e){return\"undefined\"==typeof BigInt?Z:e}function Z(){throw new Error(\"BigInt not supported\")}},251:(e,t)=>{t.read=function(e,t,r,n,o){var i,a,s=8*o-n-1,u=(1<<s)-1,c=u>>1,l=-7,f=r?o-1:0,p=r?-1:1,d=e[t+f];for(f+=p,i=d&(1<<-l)-1,d>>=-l,l+=s;l>0;i=256*i+e[t+f],f+=p,l-=8);for(a=i&(1<<-l)-1,i>>=-l,l+=n;l>0;a=256*a+e[t+f],f+=p,l-=8);if(0===i)i=1-c;else{if(i===u)return a?NaN:1/0*(d?-1:1);a+=Math.pow(2,n),i-=c}return(d?-1:1)*a*Math.pow(2,i-n)},t.write=function(e,t,r,n,o,i){var a,s,u,c=8*i-o-1,l=(1<<c)-1,f=l>>1,p=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:i-1,h=n?1:-1,y=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=l):(a=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-a))<1&&(a--,u*=2),(t+=a+f>=1?p/u:p*Math.pow(2,1-f))*u>=2&&(a++,u/=2),a+f>=l?(s=0,a=l):a+f>=1?(s=(t*u-1)*Math.pow(2,o),a+=f):(s=t*Math.pow(2,f-1)*Math.pow(2,o),a=0));o>=8;e[r+d]=255&s,d+=h,s/=256,o-=8);for(a=a<<o|s,c+=o;c>0;e[r+d]=255&a,d+=h,a/=256,c-=8);e[r+d-h]|=128*y}}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,r),i.exports}return r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(e){if(\"object\"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r(281)})(),e.exports=t()},2135:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Account=void 0;var n,o=(n=r(1242))&&n.__esModule?n:{default:n},i=r(7120);function a(e){return a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},a(e)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,u(n.key),n)}}function u(e){var t=function(e,t){if(\"object\"!=a(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=a(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==a(t)?t:t+\"\"}t.Account=function(){return function(e,t,r){return t&&s(e.prototype,t),r&&s(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}((function e(t,r){if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),i.StrKey.isValidMed25519PublicKey(t))throw new Error(\"accountId is an M-address; use MuxedAccount instead\");if(!i.StrKey.isValidEd25519PublicKey(t))throw new Error(\"accountId is invalid\");if(\"string\"!=typeof r)throw new Error(\"sequence must be of type string\");this._accountId=t,this.sequence=new o.default(r)}),[{key:\"accountId\",value:function(){return this._accountId}},{key:\"sequenceNumber\",value:function(){return this.sequence.toString()}},{key:\"incrementSequenceNumber\",value:function(){this.sequence=this.sequence.plus(1)}}])}()},1180:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Address=void 0;var n,o=r(7120),i=(n=r(1918))&&n.__esModule?n:{default:n};function a(e){return a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},a(e)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,u(n.key),n)}}function u(e){var t=function(e,t){if(\"object\"!=a(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=a(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==a(t)?t:t+\"\"}t.Address=function(){function e(t){if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),o.StrKey.isValidEd25519PublicKey(t))this._type=\"account\",this._key=o.StrKey.decodeEd25519PublicKey(t);else{if(!o.StrKey.isValidContract(t))throw new Error(\"Unsupported address type: \".concat(t));this._type=\"contract\",this._key=o.StrKey.decodeContract(t)}}return function(e,t,r){return t&&s(e.prototype,t),r&&s(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(e,[{key:\"toString\",value:function(){switch(this._type){case\"account\":return o.StrKey.encodeEd25519PublicKey(this._key);case\"contract\":return o.StrKey.encodeContract(this._key);default:throw new Error(\"Unsupported address type\")}}},{key:\"toScVal\",value:function(){return i.default.ScVal.scvAddress(this.toScAddress())}},{key:\"toScAddress\",value:function(){switch(this._type){case\"account\":return i.default.ScAddress.scAddressTypeAccount(i.default.PublicKey.publicKeyTypeEd25519(this._key));case\"contract\":return i.default.ScAddress.scAddressTypeContract(this._key);default:throw new Error(\"Unsupported address type\")}}},{key:\"toBuffer\",value:function(){return this._key}}],[{key:\"fromString\",value:function(t){return new e(t)}},{key:\"account\",value:function(t){return new e(o.StrKey.encodeEd25519PublicKey(t))}},{key:\"contract\",value:function(t){return new e(o.StrKey.encodeContract(t))}},{key:\"fromScVal\",value:function(t){return e.fromScAddress(t.address())}},{key:\"fromScAddress\",value:function(t){switch(t.switch()){case i.default.ScAddressType.scAddressTypeAccount():return e.account(t.accountId().ed25519());case i.default.ScAddressType.scAddressTypeContract():return e.contract(t.contractId());default:throw new Error(\"Unsupported address type\")}}}])}()},1764:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.Asset=void 0;var o,i=r(645),a=(o=r(1918))&&o.__esModule?o:{default:o},s=r(6691),u=r(7120),c=r(9152);function l(e){return l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},l(e)}function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,p(n.key),n)}}function p(e){var t=function(e,t){if(\"object\"!=l(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=l(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==l(t)?t:t+\"\"}t.Asset=function(){function e(t,r){if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),!/^[a-zA-Z0-9]{1,12}$/.test(t))throw new Error(\"Asset code is invalid (maximum alphanumeric, 12 characters at max)\");if(\"xlm\"!==String(t).toLowerCase()&&!r)throw new Error(\"Issuer cannot be null\");if(r&&!u.StrKey.isValidEd25519PublicKey(r))throw new Error(\"Issuer is invalid\");\"xlm\"===String(t).toLowerCase()?this.code=\"XLM\":this.code=t,this.issuer=r}return function(e,t,r){return t&&f(e.prototype,t),r&&f(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(e,[{key:\"toXDRObject\",value:function(){return this._toXDRObject(a.default.Asset)}},{key:\"toChangeTrustXDRObject\",value:function(){return this._toXDRObject(a.default.ChangeTrustAsset)}},{key:\"toTrustLineXDRObject\",value:function(){return this._toXDRObject(a.default.TrustLineAsset)}},{key:\"contractId\",value:function(e){var t=(0,c.hash)(n.from(e)),r=a.default.HashIdPreimage.envelopeTypeContractId(new a.default.HashIdPreimageContractId({networkId:t,contractIdPreimage:a.default.ContractIdPreimage.contractIdPreimageFromAsset(this.toXDRObject())}));return u.StrKey.encodeContract((0,c.hash)(r.toXDR()))}},{key:\"_toXDRObject\",value:function(){var e,t,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a.default.Asset;if(this.isNative())return r.assetTypeNative();this.code.length<=4?(e=a.default.AlphaNum4,t=\"assetTypeCreditAlphanum4\"):(e=a.default.AlphaNum12,t=\"assetTypeCreditAlphanum12\");var n=this.code.length<=4?4:12;return new r(t,new e({assetCode:this.code.padEnd(n,\"\\0\"),issuer:s.Keypair.fromPublicKey(this.issuer).xdrAccountId()}))}},{key:\"getCode\",value:function(){if(void 0!==this.code)return String(this.code)}},{key:\"getIssuer\",value:function(){if(void 0!==this.issuer)return String(this.issuer)}},{key:\"getAssetType\",value:function(){switch(this.getRawAssetType().value){case a.default.AssetType.assetTypeNative().value:return\"native\";case a.default.AssetType.assetTypeCreditAlphanum4().value:return\"credit_alphanum4\";case a.default.AssetType.assetTypeCreditAlphanum12().value:return\"credit_alphanum12\";default:return\"unknown\"}}},{key:\"getRawAssetType\",value:function(){return this.isNative()?a.default.AssetType.assetTypeNative():this.code.length<=4?a.default.AssetType.assetTypeCreditAlphanum4():a.default.AssetType.assetTypeCreditAlphanum12()}},{key:\"isNative\",value:function(){return!this.issuer}},{key:\"equals\",value:function(e){return this.code===e.getCode()&&this.issuer===e.getIssuer()}},{key:\"toString\",value:function(){return this.isNative()?\"native\":\"\".concat(this.getCode(),\":\").concat(this.getIssuer())}}],[{key:\"native\",value:function(){return new e(\"XLM\")}},{key:\"fromOperation\",value:function(e){var t,r;switch(e.switch()){case a.default.AssetType.assetTypeNative():return this.native();case a.default.AssetType.assetTypeCreditAlphanum4():t=e.alphaNum4();case a.default.AssetType.assetTypeCreditAlphanum12():return t=t||e.alphaNum12(),r=u.StrKey.encodeEd25519PublicKey(t.issuer().ed25519()),new this((0,i.trimEnd)(t.assetCode(),\"\\0\"),r);default:throw new Error(\"Invalid asset type: \".concat(e.switch().name))}}},{key:\"compare\",value:function(t,r){if(!(t&&t instanceof e))throw new Error(\"assetA is invalid\");if(!(r&&r instanceof e))throw new Error(\"assetB is invalid\");if(t.equals(r))return 0;var n=t.getRawAssetType().value,o=r.getRawAssetType().value;if(n!==o)return n<o?-1:1;var i=d(t.getCode(),r.getCode());return 0!==i?i:d(t.getIssuer(),r.getIssuer())}}])}();function d(e,t){return n.compare(n.from(e,\"ascii\"),n.from(t,\"ascii\"))}},5328:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.authorizeEntry=y,t.authorizeInvocation=function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"\",o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:u.Networks.FUTURENET,s=a.Keypair.random().rawPublicKey(),c=new i.default.Int64((p=s,p.subarray(0,8).reduce((function(e,t){return e<<8|t}),0))),f=n||e.publicKey();var p;if(!f)throw new Error(\"authorizeInvocation requires publicKey parameter\");return y(new i.default.SorobanAuthorizationEntry({rootInvocation:r,credentials:i.default.SorobanCredentials.sorobanCredentialsAddress(new i.default.SorobanAddressCredentials({address:new l.Address(f).toScAddress(),nonce:c,signatureExpirationLedger:0,signature:i.default.ScVal.scvVec([])}))}),e,t,o)};var o,i=(o=r(1918))&&o.__esModule?o:{default:o},a=r(6691),s=r(7120),u=r(6202),c=r(9152),l=r(1180),f=r(7177);function p(e){return p=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},p(e)}function d(){d=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(e,t,r){e[t]=r.value},i=\"function\"==typeof Symbol?Symbol:{},a=i.iterator||\"@@iterator\",s=i.asyncIterator||\"@@asyncIterator\",u=i.toStringTag||\"@@toStringTag\";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},\"\")}catch(e){c=function(e,t,r){return e[t]=r}}function l(e,t,r,n){var i=t&&t.prototype instanceof b?t:b,a=Object.create(i.prototype),s=new C(n||[]);return o(a,\"_invoke\",{value:A(e,r,s)}),a}function f(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}t.wrap=l;var h=\"suspendedStart\",y=\"suspendedYield\",m=\"executing\",v=\"completed\",g={};function b(){}function w(){}function S(){}var E={};c(E,a,(function(){return this}));var _=Object.getPrototypeOf,k=_&&_(_(I([])));k&&k!==r&&n.call(k,a)&&(E=k);var T=S.prototype=b.prototype=Object.create(E);function O(e){[\"next\",\"throw\",\"return\"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){function r(o,i,a,s){var u=f(e[o],e,i);if(\"throw\"!==u.type){var c=u.arg,l=c.value;return l&&\"object\"==p(l)&&n.call(l,\"__await\")?t.resolve(l.__await).then((function(e){r(\"next\",e,a,s)}),(function(e){r(\"throw\",e,a,s)})):t.resolve(l).then((function(e){c.value=e,a(c)}),(function(e){return r(\"throw\",e,a,s)}))}s(u.arg)}var i;o(this,\"_invoke\",{value:function(e,n){function o(){return new t((function(t,o){r(e,n,t,o)}))}return i=i?i.then(o,o):o()}})}function A(t,r,n){var o=h;return function(i,a){if(o===m)throw Error(\"Generator is already running\");if(o===v){if(\"throw\"===i)throw a;return{value:e,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var u=P(s,n);if(u){if(u===g)continue;return u}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===h)throw o=v,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=m;var c=f(t,r,n);if(\"normal\"===c.type){if(o=n.done?v:y,c.arg===g)continue;return{value:c.arg,done:n.done}}\"throw\"===c.type&&(o=v,n.method=\"throw\",n.arg=c.arg)}}}function P(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,\"throw\"===n&&t.iterator.return&&(r.method=\"return\",r.arg=e,P(t,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),g;var i=f(o,t.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,g;var a=i.arg;return a?a.done?(r[t.resultName]=a.value,r.next=t.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=e),r.delegate=null,g):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,g)}function R(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function j(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(R,this),this.reset(!0)}function I(t){if(t||\"\"===t){var r=t[a];if(r)return r.call(t);if(\"function\"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,i=function r(){for(;++o<t.length;)if(n.call(t,o))return r.value=t[o],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(p(t)+\" is not iterable\")}return w.prototype=S,o(T,\"constructor\",{value:S,configurable:!0}),o(S,\"constructor\",{value:w,configurable:!0}),w.displayName=c(S,u,\"GeneratorFunction\"),t.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===w||\"GeneratorFunction\"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,S):(e.__proto__=S,c(e,u,\"GeneratorFunction\")),e.prototype=Object.create(T),e},t.awrap=function(e){return{__await:e}},O(x.prototype),c(x.prototype,s,(function(){return this})),t.AsyncIterator=x,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new x(l(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},O(T),c(T,u,\"Generator\"),c(T,a,(function(){return this})),c(T,\"toString\",(function(){return\"[object Generator]\"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=I,C.prototype={constructor:C,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=e,this.tryEntries.forEach(j),!t)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function o(n,o){return s.type=\"throw\",s.arg=t,r.next=n,o&&(r.method=\"next\",r.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if(\"root\"===a.tryLoc)return o(\"end\");if(a.tryLoc<=this.prev){var u=n.call(a,\"catchLoc\"),c=n.call(a,\"finallyLoc\");if(u&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw Error(\"try statement without catch or finally\");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var i=o;break}}i&&(\"break\"===e||\"continue\"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method=\"next\",this.next=i.finallyLoc,g):this.complete(a)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),j(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;j(r)}return o}}throw Error(\"illegal catch attempt\")},delegateYield:function(t,r,n){return this.delegate={iterator:I(t),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=e),g}},t}function h(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function y(e,t,r){return m.apply(this,arguments)}function m(){var e;return e=d().mark((function e(t,r,o){var p,h,y,m,v,g,b,w,S,E=arguments;return d().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(p=E.length>3&&void 0!==E[3]?E[3]:u.Networks.FUTURENET,t.credentials().switch().value===i.default.SorobanCredentialsType.sorobanCredentialsAddress().value){e.next=3;break}return e.abrupt(\"return\",t);case 3:if(h=i.default.SorobanAuthorizationEntry.fromXDR(t.toXDR()),(y=h.credentials().address()).signatureExpirationLedger(o),m=(0,c.hash)(n.from(p)),v=i.default.HashIdPreimage.envelopeTypeSorobanAuthorization(new i.default.HashIdPreimageSorobanAuthorization({networkId:m,nonce:y.nonce(),invocation:h.rootInvocation(),signatureExpirationLedger:y.signatureExpirationLedger()})),g=(0,c.hash)(v.toXDR()),\"function\"!=typeof r){e.next=18;break}return e.t0=n,e.next=13,r(v);case 13:e.t1=e.sent,b=e.t0.from.call(e.t0,e.t1),w=l.Address.fromScAddress(y.address()).toString(),e.next=20;break;case 18:b=n.from(r.sign(g)),w=r.publicKey();case 20:if(a.Keypair.fromPublicKey(w).verify(g,b)){e.next=22;break}throw new Error(\"signature doesn't match payload\");case 22:return S=(0,f.nativeToScVal)({public_key:s.StrKey.decodeEd25519PublicKey(w),signature:b},{type:{public_key:[\"symbol\",null],signature:[\"symbol\",null]}}),y.signature(i.default.ScVal.scvVec([S])),e.abrupt(\"return\",h);case 25:case\"end\":return e.stop()}}),e)})),m=function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){h(i,n,o,a,s,\"next\",e)}function s(e){h(i,n,o,a,s,\"throw\",e)}a(void 0)}))},m.apply(this,arguments)}},1387:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Claimant=void 0;var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(6691),a=r(7120);function s(e){return s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},s(e)}function u(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,c(n.key),n)}}function c(e){var t=function(e,t){if(\"object\"!=s(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=s(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==s(t)?t:t+\"\"}t.Claimant=function(){return function(e,t,r){return t&&u(e.prototype,t),r&&u(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}((function e(t,r){if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),t&&!a.StrKey.isValidEd25519PublicKey(t))throw new Error(\"Destination is invalid\");if(this._destination=t,r){if(!(r instanceof o.default.ClaimPredicate))throw new Error(\"Predicate should be an xdr.ClaimPredicate\");this._predicate=r}else this._predicate=o.default.ClaimPredicate.claimPredicateUnconditional()}),[{key:\"toXDRObject\",value:function(){var e=new o.default.ClaimantV0({destination:i.Keypair.fromPublicKey(this._destination).xdrAccountId(),predicate:this._predicate});return o.default.Claimant.claimantTypeV0(e)}},{key:\"destination\",get:function(){return this._destination},set:function(e){throw new Error(\"Claimant is immutable\")}},{key:\"predicate\",get:function(){return this._predicate},set:function(e){throw new Error(\"Claimant is immutable\")}}],[{key:\"predicateUnconditional\",value:function(){return o.default.ClaimPredicate.claimPredicateUnconditional()}},{key:\"predicateAnd\",value:function(e,t){if(!(e instanceof o.default.ClaimPredicate))throw new Error(\"left Predicate should be an xdr.ClaimPredicate\");if(!(t instanceof o.default.ClaimPredicate))throw new Error(\"right Predicate should be an xdr.ClaimPredicate\");return o.default.ClaimPredicate.claimPredicateAnd([e,t])}},{key:\"predicateOr\",value:function(e,t){if(!(e instanceof o.default.ClaimPredicate))throw new Error(\"left Predicate should be an xdr.ClaimPredicate\");if(!(t instanceof o.default.ClaimPredicate))throw new Error(\"right Predicate should be an xdr.ClaimPredicate\");return o.default.ClaimPredicate.claimPredicateOr([e,t])}},{key:\"predicateNot\",value:function(e){if(!(e instanceof o.default.ClaimPredicate))throw new Error(\"right Predicate should be an xdr.ClaimPredicate\");return o.default.ClaimPredicate.claimPredicateNot(e)}},{key:\"predicateBeforeAbsoluteTime\",value:function(e){return o.default.ClaimPredicate.claimPredicateBeforeAbsoluteTime(o.default.Int64.fromString(e))}},{key:\"predicateBeforeRelativeTime\",value:function(e){return o.default.ClaimPredicate.claimPredicateBeforeRelativeTime(o.default.Int64.fromString(e))}},{key:\"fromXDR\",value:function(e){var t;if(e.switch()===o.default.ClaimantType.claimantTypeV0())return t=e.v0(),new this(a.StrKey.encodeEd25519PublicKey(t.destination().ed25519()),t.predicate());throw new Error(\"Invalid claimant type: \".concat(e.switch().name))}}])}()},7452:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Contract=void 0;var n,o=r(1180),i=r(7237),a=(n=r(1918))&&n.__esModule?n:{default:n},s=r(7120);function u(e){return u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},u(e)}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,l(n.key),n)}}function l(e){var t=function(e,t){if(\"object\"!=u(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=u(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==u(t)?t:t+\"\"}t.Contract=function(){return function(e,t,r){return t&&c(e.prototype,t),r&&c(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}((function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e);try{this._id=s.StrKey.decodeContract(t)}catch(e){throw new Error(\"Invalid contract ID: \".concat(t))}}),[{key:\"contractId\",value:function(){return s.StrKey.encodeContract(this._id)}},{key:\"toString\",value:function(){return this.contractId()}},{key:\"address\",value:function(){return o.Address.contract(this._id)}},{key:\"call\",value:function(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];return i.Operation.invokeContractFunction({contract:this.address().toString(),function:e,args:r})}},{key:\"getFootprint\",value:function(){return a.default.LedgerKey.contractData(new a.default.LedgerKeyContractData({contract:this.address().toScAddress(),key:a.default.ScVal.scvLedgerKeyContractInstance(),durability:a.default.ContractDataDurability.persistent()}))}}])}()},3919:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.humanizeEvents=function(e){return e.map((function(e){return e.inSuccessfulContractCall?c(e.event()):c(e)}))};var n=r(7120),o=r(7177);function i(e){return i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i(e)}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){u(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t,r){return(t=function(e){var t=function(e,t){if(\"object\"!=i(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=i(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==i(t)?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e){return s(s({},\"function\"==typeof e.contractId&&null!=e.contractId()&&{contractId:n.StrKey.encodeContract(e.contractId())}),{},{type:e.type().name,topics:e.body().value().topics().map((function(e){return(0,o.scValToNative)(e)})),data:(0,o.scValToNative)(e.body().value().data())})}},9260:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;function o(e){return o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},o(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.FeeBumpTransaction=void 0;var i,a=(i=r(1918))&&i.__esModule?i:{default:i},s=r(9152),u=r(380),c=r(3758),l=r(6160);function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,p(n.key),n)}}function p(e){var t=function(e,t){if(\"object\"!=o(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=o(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==o(t)?t:t+\"\"}function d(e,t,r){return t=y(t),function(e,t){if(t&&(\"object\"==o(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,h()?Reflect.construct(t,r||[],y(e).constructor):t.apply(e,r))}function h(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(h=function(){return!!e})()}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}t.FeeBumpTransaction=function(e){function t(e,r){var o;if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),\"string\"==typeof e){var i=n.from(e,\"base64\");e=a.default.TransactionEnvelope.fromXDR(i)}var s=e.switch();if(s!==a.default.EnvelopeType.envelopeTypeTxFeeBump())throw new Error(\"Invalid TransactionEnvelope: expected an envelopeTypeTxFeeBump but received an \".concat(s.name,\".\"));var c=e.value(),f=c.tx(),p=f.fee().toString();o=d(this,t,[f,(c.signatures()||[]).slice(),p,r]);var h=a.default.TransactionEnvelope.envelopeTypeTx(f.innerTx().v1());return o._feeSource=(0,l.encodeMuxedAccountToAddress)(o.tx.feeSource()),o._innerTransaction=new u.Transaction(h,r),o}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&m(e,t)}(t,e),function(e,t,r){return t&&f(e.prototype,t),r&&f(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"innerTransaction\",get:function(){return this._innerTransaction}},{key:\"operations\",get:function(){return this._innerTransaction.operations}},{key:\"feeSource\",get:function(){return this._feeSource}},{key:\"signatureBase\",value:function(){var e=new a.default.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTxFeeBump(this.tx);return new a.default.TransactionSignaturePayload({networkId:a.default.Hash.fromXDR((0,s.hash)(this.networkPassphrase)),taggedTransaction:e}).toXDR()}},{key:\"toEnvelope\",value:function(){var e=new a.default.FeeBumpTransactionEnvelope({tx:a.default.FeeBumpTransaction.fromXDR(this.tx.toXDR()),signatures:this.signatures.slice()});return new a.default.TransactionEnvelope.envelopeTypeTxFeeBump(e)}}])}(c.TransactionBase)},7938:(e,t,r)=>{\"use strict\";function n(e){return n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n(e)}function o(e){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(o=function(e){return e?r:t})(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var i=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||\"object\"!=n(e)&&\"function\"!=typeof e)return{default:e};var r=o(t);if(r&&r.has(e))return r.get(e);var i={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if(\"default\"!==s&&{}.hasOwnProperty.call(e,s)){var u=a?Object.getOwnPropertyDescriptor(e,s):null;u&&(u.get||u.set)?Object.defineProperty(i,s,u):i[s]=e[s]}return i.default=e,r&&r.set(e,i),i}(r(3740)).config((function(e){var t=1024;e.typedef(\"Value\",e.varOpaque()),e.struct(\"ScpBallot\",[[\"counter\",e.lookup(\"Uint32\")],[\"value\",e.lookup(\"Value\")]]),e.enum(\"ScpStatementType\",{scpStPrepare:0,scpStConfirm:1,scpStExternalize:2,scpStNominate:3}),e.struct(\"ScpNomination\",[[\"quorumSetHash\",e.lookup(\"Hash\")],[\"votes\",e.varArray(e.lookup(\"Value\"),2147483647)],[\"accepted\",e.varArray(e.lookup(\"Value\"),2147483647)]]),e.struct(\"ScpStatementPrepare\",[[\"quorumSetHash\",e.lookup(\"Hash\")],[\"ballot\",e.lookup(\"ScpBallot\")],[\"prepared\",e.option(e.lookup(\"ScpBallot\"))],[\"preparedPrime\",e.option(e.lookup(\"ScpBallot\"))],[\"nC\",e.lookup(\"Uint32\")],[\"nH\",e.lookup(\"Uint32\")]]),e.struct(\"ScpStatementConfirm\",[[\"ballot\",e.lookup(\"ScpBallot\")],[\"nPrepared\",e.lookup(\"Uint32\")],[\"nCommit\",e.lookup(\"Uint32\")],[\"nH\",e.lookup(\"Uint32\")],[\"quorumSetHash\",e.lookup(\"Hash\")]]),e.struct(\"ScpStatementExternalize\",[[\"commit\",e.lookup(\"ScpBallot\")],[\"nH\",e.lookup(\"Uint32\")],[\"commitQuorumSetHash\",e.lookup(\"Hash\")]]),e.union(\"ScpStatementPledges\",{switchOn:e.lookup(\"ScpStatementType\"),switchName:\"type\",switches:[[\"scpStPrepare\",\"prepare\"],[\"scpStConfirm\",\"confirm\"],[\"scpStExternalize\",\"externalize\"],[\"scpStNominate\",\"nominate\"]],arms:{prepare:e.lookup(\"ScpStatementPrepare\"),confirm:e.lookup(\"ScpStatementConfirm\"),externalize:e.lookup(\"ScpStatementExternalize\"),nominate:e.lookup(\"ScpNomination\")}}),e.struct(\"ScpStatement\",[[\"nodeId\",e.lookup(\"NodeId\")],[\"slotIndex\",e.lookup(\"Uint64\")],[\"pledges\",e.lookup(\"ScpStatementPledges\")]]),e.struct(\"ScpEnvelope\",[[\"statement\",e.lookup(\"ScpStatement\")],[\"signature\",e.lookup(\"Signature\")]]),e.struct(\"ScpQuorumSet\",[[\"threshold\",e.lookup(\"Uint32\")],[\"validators\",e.varArray(e.lookup(\"NodeId\"),2147483647)],[\"innerSets\",e.varArray(e.lookup(\"ScpQuorumSet\"),2147483647)]]),e.typedef(\"Thresholds\",e.opaque(4)),e.typedef(\"String32\",e.string(32)),e.typedef(\"String64\",e.string(64)),e.typedef(\"SequenceNumber\",e.lookup(\"Int64\")),e.typedef(\"DataValue\",e.varOpaque(64)),e.typedef(\"PoolId\",e.lookup(\"Hash\")),e.typedef(\"AssetCode4\",e.opaque(4)),e.typedef(\"AssetCode12\",e.opaque(12)),e.enum(\"AssetType\",{assetTypeNative:0,assetTypeCreditAlphanum4:1,assetTypeCreditAlphanum12:2,assetTypePoolShare:3}),e.union(\"AssetCode\",{switchOn:e.lookup(\"AssetType\"),switchName:\"type\",switches:[[\"assetTypeCreditAlphanum4\",\"assetCode4\"],[\"assetTypeCreditAlphanum12\",\"assetCode12\"]],arms:{assetCode4:e.lookup(\"AssetCode4\"),assetCode12:e.lookup(\"AssetCode12\")}}),e.struct(\"AlphaNum4\",[[\"assetCode\",e.lookup(\"AssetCode4\")],[\"issuer\",e.lookup(\"AccountId\")]]),e.struct(\"AlphaNum12\",[[\"assetCode\",e.lookup(\"AssetCode12\")],[\"issuer\",e.lookup(\"AccountId\")]]),e.union(\"Asset\",{switchOn:e.lookup(\"AssetType\"),switchName:\"type\",switches:[[\"assetTypeNative\",e.void()],[\"assetTypeCreditAlphanum4\",\"alphaNum4\"],[\"assetTypeCreditAlphanum12\",\"alphaNum12\"]],arms:{alphaNum4:e.lookup(\"AlphaNum4\"),alphaNum12:e.lookup(\"AlphaNum12\")}}),e.struct(\"Price\",[[\"n\",e.lookup(\"Int32\")],[\"d\",e.lookup(\"Int32\")]]),e.struct(\"Liabilities\",[[\"buying\",e.lookup(\"Int64\")],[\"selling\",e.lookup(\"Int64\")]]),e.enum(\"ThresholdIndices\",{thresholdMasterWeight:0,thresholdLow:1,thresholdMed:2,thresholdHigh:3}),e.enum(\"LedgerEntryType\",{account:0,trustline:1,offer:2,data:3,claimableBalance:4,liquidityPool:5,contractData:6,contractCode:7,configSetting:8,ttl:9}),e.struct(\"Signer\",[[\"key\",e.lookup(\"SignerKey\")],[\"weight\",e.lookup(\"Uint32\")]]),e.enum(\"AccountFlags\",{authRequiredFlag:1,authRevocableFlag:2,authImmutableFlag:4,authClawbackEnabledFlag:8}),e.const(\"MASK_ACCOUNT_FLAGS\",7),e.const(\"MASK_ACCOUNT_FLAGS_V17\",15),e.const(\"MAX_SIGNERS\",20),e.typedef(\"SponsorshipDescriptor\",e.option(e.lookup(\"AccountId\"))),e.struct(\"AccountEntryExtensionV3\",[[\"ext\",e.lookup(\"ExtensionPoint\")],[\"seqLedger\",e.lookup(\"Uint32\")],[\"seqTime\",e.lookup(\"TimePoint\")]]),e.union(\"AccountEntryExtensionV2Ext\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()],[3,\"v3\"]],arms:{v3:e.lookup(\"AccountEntryExtensionV3\")}}),e.struct(\"AccountEntryExtensionV2\",[[\"numSponsored\",e.lookup(\"Uint32\")],[\"numSponsoring\",e.lookup(\"Uint32\")],[\"signerSponsoringIDs\",e.varArray(e.lookup(\"SponsorshipDescriptor\"),e.lookup(\"MAX_SIGNERS\"))],[\"ext\",e.lookup(\"AccountEntryExtensionV2Ext\")]]),e.union(\"AccountEntryExtensionV1Ext\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()],[2,\"v2\"]],arms:{v2:e.lookup(\"AccountEntryExtensionV2\")}}),e.struct(\"AccountEntryExtensionV1\",[[\"liabilities\",e.lookup(\"Liabilities\")],[\"ext\",e.lookup(\"AccountEntryExtensionV1Ext\")]]),e.union(\"AccountEntryExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()],[1,\"v1\"]],arms:{v1:e.lookup(\"AccountEntryExtensionV1\")}}),e.struct(\"AccountEntry\",[[\"accountId\",e.lookup(\"AccountId\")],[\"balance\",e.lookup(\"Int64\")],[\"seqNum\",e.lookup(\"SequenceNumber\")],[\"numSubEntries\",e.lookup(\"Uint32\")],[\"inflationDest\",e.option(e.lookup(\"AccountId\"))],[\"flags\",e.lookup(\"Uint32\")],[\"homeDomain\",e.lookup(\"String32\")],[\"thresholds\",e.lookup(\"Thresholds\")],[\"signers\",e.varArray(e.lookup(\"Signer\"),e.lookup(\"MAX_SIGNERS\"))],[\"ext\",e.lookup(\"AccountEntryExt\")]]),e.enum(\"TrustLineFlags\",{authorizedFlag:1,authorizedToMaintainLiabilitiesFlag:2,trustlineClawbackEnabledFlag:4}),e.const(\"MASK_TRUSTLINE_FLAGS\",1),e.const(\"MASK_TRUSTLINE_FLAGS_V13\",3),e.const(\"MASK_TRUSTLINE_FLAGS_V17\",7),e.enum(\"LiquidityPoolType\",{liquidityPoolConstantProduct:0}),e.union(\"TrustLineAsset\",{switchOn:e.lookup(\"AssetType\"),switchName:\"type\",switches:[[\"assetTypeNative\",e.void()],[\"assetTypeCreditAlphanum4\",\"alphaNum4\"],[\"assetTypeCreditAlphanum12\",\"alphaNum12\"],[\"assetTypePoolShare\",\"liquidityPoolId\"]],arms:{alphaNum4:e.lookup(\"AlphaNum4\"),alphaNum12:e.lookup(\"AlphaNum12\"),liquidityPoolId:e.lookup(\"PoolId\")}}),e.union(\"TrustLineEntryExtensionV2Ext\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()]],arms:{}}),e.struct(\"TrustLineEntryExtensionV2\",[[\"liquidityPoolUseCount\",e.lookup(\"Int32\")],[\"ext\",e.lookup(\"TrustLineEntryExtensionV2Ext\")]]),e.union(\"TrustLineEntryV1Ext\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()],[2,\"v2\"]],arms:{v2:e.lookup(\"TrustLineEntryExtensionV2\")}}),e.struct(\"TrustLineEntryV1\",[[\"liabilities\",e.lookup(\"Liabilities\")],[\"ext\",e.lookup(\"TrustLineEntryV1Ext\")]]),e.union(\"TrustLineEntryExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()],[1,\"v1\"]],arms:{v1:e.lookup(\"TrustLineEntryV1\")}}),e.struct(\"TrustLineEntry\",[[\"accountId\",e.lookup(\"AccountId\")],[\"asset\",e.lookup(\"TrustLineAsset\")],[\"balance\",e.lookup(\"Int64\")],[\"limit\",e.lookup(\"Int64\")],[\"flags\",e.lookup(\"Uint32\")],[\"ext\",e.lookup(\"TrustLineEntryExt\")]]),e.enum(\"OfferEntryFlags\",{passiveFlag:1}),e.const(\"MASK_OFFERENTRY_FLAGS\",1),e.union(\"OfferEntryExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()]],arms:{}}),e.struct(\"OfferEntry\",[[\"sellerId\",e.lookup(\"AccountId\")],[\"offerId\",e.lookup(\"Int64\")],[\"selling\",e.lookup(\"Asset\")],[\"buying\",e.lookup(\"Asset\")],[\"amount\",e.lookup(\"Int64\")],[\"price\",e.lookup(\"Price\")],[\"flags\",e.lookup(\"Uint32\")],[\"ext\",e.lookup(\"OfferEntryExt\")]]),e.union(\"DataEntryExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()]],arms:{}}),e.struct(\"DataEntry\",[[\"accountId\",e.lookup(\"AccountId\")],[\"dataName\",e.lookup(\"String64\")],[\"dataValue\",e.lookup(\"DataValue\")],[\"ext\",e.lookup(\"DataEntryExt\")]]),e.enum(\"ClaimPredicateType\",{claimPredicateUnconditional:0,claimPredicateAnd:1,claimPredicateOr:2,claimPredicateNot:3,claimPredicateBeforeAbsoluteTime:4,claimPredicateBeforeRelativeTime:5}),e.union(\"ClaimPredicate\",{switchOn:e.lookup(\"ClaimPredicateType\"),switchName:\"type\",switches:[[\"claimPredicateUnconditional\",e.void()],[\"claimPredicateAnd\",\"andPredicates\"],[\"claimPredicateOr\",\"orPredicates\"],[\"claimPredicateNot\",\"notPredicate\"],[\"claimPredicateBeforeAbsoluteTime\",\"absBefore\"],[\"claimPredicateBeforeRelativeTime\",\"relBefore\"]],arms:{andPredicates:e.varArray(e.lookup(\"ClaimPredicate\"),2),orPredicates:e.varArray(e.lookup(\"ClaimPredicate\"),2),notPredicate:e.option(e.lookup(\"ClaimPredicate\")),absBefore:e.lookup(\"Int64\"),relBefore:e.lookup(\"Int64\")}}),e.enum(\"ClaimantType\",{claimantTypeV0:0}),e.struct(\"ClaimantV0\",[[\"destination\",e.lookup(\"AccountId\")],[\"predicate\",e.lookup(\"ClaimPredicate\")]]),e.union(\"Claimant\",{switchOn:e.lookup(\"ClaimantType\"),switchName:\"type\",switches:[[\"claimantTypeV0\",\"v0\"]],arms:{v0:e.lookup(\"ClaimantV0\")}}),e.enum(\"ClaimableBalanceIdType\",{claimableBalanceIdTypeV0:0}),e.union(\"ClaimableBalanceId\",{switchOn:e.lookup(\"ClaimableBalanceIdType\"),switchName:\"type\",switches:[[\"claimableBalanceIdTypeV0\",\"v0\"]],arms:{v0:e.lookup(\"Hash\")}}),e.enum(\"ClaimableBalanceFlags\",{claimableBalanceClawbackEnabledFlag:1}),e.const(\"MASK_CLAIMABLE_BALANCE_FLAGS\",1),e.union(\"ClaimableBalanceEntryExtensionV1Ext\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()]],arms:{}}),e.struct(\"ClaimableBalanceEntryExtensionV1\",[[\"ext\",e.lookup(\"ClaimableBalanceEntryExtensionV1Ext\")],[\"flags\",e.lookup(\"Uint32\")]]),e.union(\"ClaimableBalanceEntryExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()],[1,\"v1\"]],arms:{v1:e.lookup(\"ClaimableBalanceEntryExtensionV1\")}}),e.struct(\"ClaimableBalanceEntry\",[[\"balanceId\",e.lookup(\"ClaimableBalanceId\")],[\"claimants\",e.varArray(e.lookup(\"Claimant\"),10)],[\"asset\",e.lookup(\"Asset\")],[\"amount\",e.lookup(\"Int64\")],[\"ext\",e.lookup(\"ClaimableBalanceEntryExt\")]]),e.struct(\"LiquidityPoolConstantProductParameters\",[[\"assetA\",e.lookup(\"Asset\")],[\"assetB\",e.lookup(\"Asset\")],[\"fee\",e.lookup(\"Int32\")]]),e.struct(\"LiquidityPoolEntryConstantProduct\",[[\"params\",e.lookup(\"LiquidityPoolConstantProductParameters\")],[\"reserveA\",e.lookup(\"Int64\")],[\"reserveB\",e.lookup(\"Int64\")],[\"totalPoolShares\",e.lookup(\"Int64\")],[\"poolSharesTrustLineCount\",e.lookup(\"Int64\")]]),e.union(\"LiquidityPoolEntryBody\",{switchOn:e.lookup(\"LiquidityPoolType\"),switchName:\"type\",switches:[[\"liquidityPoolConstantProduct\",\"constantProduct\"]],arms:{constantProduct:e.lookup(\"LiquidityPoolEntryConstantProduct\")}}),e.struct(\"LiquidityPoolEntry\",[[\"liquidityPoolId\",e.lookup(\"PoolId\")],[\"body\",e.lookup(\"LiquidityPoolEntryBody\")]]),e.enum(\"ContractDataDurability\",{temporary:0,persistent:1}),e.struct(\"ContractDataEntry\",[[\"ext\",e.lookup(\"ExtensionPoint\")],[\"contract\",e.lookup(\"ScAddress\")],[\"key\",e.lookup(\"ScVal\")],[\"durability\",e.lookup(\"ContractDataDurability\")],[\"val\",e.lookup(\"ScVal\")]]),e.struct(\"ContractCodeCostInputs\",[[\"ext\",e.lookup(\"ExtensionPoint\")],[\"nInstructions\",e.lookup(\"Uint32\")],[\"nFunctions\",e.lookup(\"Uint32\")],[\"nGlobals\",e.lookup(\"Uint32\")],[\"nTableEntries\",e.lookup(\"Uint32\")],[\"nTypes\",e.lookup(\"Uint32\")],[\"nDataSegments\",e.lookup(\"Uint32\")],[\"nElemSegments\",e.lookup(\"Uint32\")],[\"nImports\",e.lookup(\"Uint32\")],[\"nExports\",e.lookup(\"Uint32\")],[\"nDataSegmentBytes\",e.lookup(\"Uint32\")]]),e.struct(\"ContractCodeEntryV1\",[[\"ext\",e.lookup(\"ExtensionPoint\")],[\"costInputs\",e.lookup(\"ContractCodeCostInputs\")]]),e.union(\"ContractCodeEntryExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()],[1,\"v1\"]],arms:{v1:e.lookup(\"ContractCodeEntryV1\")}}),e.struct(\"ContractCodeEntry\",[[\"ext\",e.lookup(\"ContractCodeEntryExt\")],[\"hash\",e.lookup(\"Hash\")],[\"code\",e.varOpaque()]]),e.struct(\"TtlEntry\",[[\"keyHash\",e.lookup(\"Hash\")],[\"liveUntilLedgerSeq\",e.lookup(\"Uint32\")]]),e.union(\"LedgerEntryExtensionV1Ext\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()]],arms:{}}),e.struct(\"LedgerEntryExtensionV1\",[[\"sponsoringId\",e.lookup(\"SponsorshipDescriptor\")],[\"ext\",e.lookup(\"LedgerEntryExtensionV1Ext\")]]),e.union(\"LedgerEntryData\",{switchOn:e.lookup(\"LedgerEntryType\"),switchName:\"type\",switches:[[\"account\",\"account\"],[\"trustline\",\"trustLine\"],[\"offer\",\"offer\"],[\"data\",\"data\"],[\"claimableBalance\",\"claimableBalance\"],[\"liquidityPool\",\"liquidityPool\"],[\"contractData\",\"contractData\"],[\"contractCode\",\"contractCode\"],[\"configSetting\",\"configSetting\"],[\"ttl\",\"ttl\"]],arms:{account:e.lookup(\"AccountEntry\"),trustLine:e.lookup(\"TrustLineEntry\"),offer:e.lookup(\"OfferEntry\"),data:e.lookup(\"DataEntry\"),claimableBalance:e.lookup(\"ClaimableBalanceEntry\"),liquidityPool:e.lookup(\"LiquidityPoolEntry\"),contractData:e.lookup(\"ContractDataEntry\"),contractCode:e.lookup(\"ContractCodeEntry\"),configSetting:e.lookup(\"ConfigSettingEntry\"),ttl:e.lookup(\"TtlEntry\")}}),e.union(\"LedgerEntryExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()],[1,\"v1\"]],arms:{v1:e.lookup(\"LedgerEntryExtensionV1\")}}),e.struct(\"LedgerEntry\",[[\"lastModifiedLedgerSeq\",e.lookup(\"Uint32\")],[\"data\",e.lookup(\"LedgerEntryData\")],[\"ext\",e.lookup(\"LedgerEntryExt\")]]),e.struct(\"LedgerKeyAccount\",[[\"accountId\",e.lookup(\"AccountId\")]]),e.struct(\"LedgerKeyTrustLine\",[[\"accountId\",e.lookup(\"AccountId\")],[\"asset\",e.lookup(\"TrustLineAsset\")]]),e.struct(\"LedgerKeyOffer\",[[\"sellerId\",e.lookup(\"AccountId\")],[\"offerId\",e.lookup(\"Int64\")]]),e.struct(\"LedgerKeyData\",[[\"accountId\",e.lookup(\"AccountId\")],[\"dataName\",e.lookup(\"String64\")]]),e.struct(\"LedgerKeyClaimableBalance\",[[\"balanceId\",e.lookup(\"ClaimableBalanceId\")]]),e.struct(\"LedgerKeyLiquidityPool\",[[\"liquidityPoolId\",e.lookup(\"PoolId\")]]),e.struct(\"LedgerKeyContractData\",[[\"contract\",e.lookup(\"ScAddress\")],[\"key\",e.lookup(\"ScVal\")],[\"durability\",e.lookup(\"ContractDataDurability\")]]),e.struct(\"LedgerKeyContractCode\",[[\"hash\",e.lookup(\"Hash\")]]),e.struct(\"LedgerKeyConfigSetting\",[[\"configSettingId\",e.lookup(\"ConfigSettingId\")]]),e.struct(\"LedgerKeyTtl\",[[\"keyHash\",e.lookup(\"Hash\")]]),e.union(\"LedgerKey\",{switchOn:e.lookup(\"LedgerEntryType\"),switchName:\"type\",switches:[[\"account\",\"account\"],[\"trustline\",\"trustLine\"],[\"offer\",\"offer\"],[\"data\",\"data\"],[\"claimableBalance\",\"claimableBalance\"],[\"liquidityPool\",\"liquidityPool\"],[\"contractData\",\"contractData\"],[\"contractCode\",\"contractCode\"],[\"configSetting\",\"configSetting\"],[\"ttl\",\"ttl\"]],arms:{account:e.lookup(\"LedgerKeyAccount\"),trustLine:e.lookup(\"LedgerKeyTrustLine\"),offer:e.lookup(\"LedgerKeyOffer\"),data:e.lookup(\"LedgerKeyData\"),claimableBalance:e.lookup(\"LedgerKeyClaimableBalance\"),liquidityPool:e.lookup(\"LedgerKeyLiquidityPool\"),contractData:e.lookup(\"LedgerKeyContractData\"),contractCode:e.lookup(\"LedgerKeyContractCode\"),configSetting:e.lookup(\"LedgerKeyConfigSetting\"),ttl:e.lookup(\"LedgerKeyTtl\")}}),e.enum(\"EnvelopeType\",{envelopeTypeTxV0:0,envelopeTypeScp:1,envelopeTypeTx:2,envelopeTypeAuth:3,envelopeTypeScpvalue:4,envelopeTypeTxFeeBump:5,envelopeTypeOpId:6,envelopeTypePoolRevokeOpId:7,envelopeTypeContractId:8,envelopeTypeSorobanAuthorization:9}),e.enum(\"BucketListType\",{live:0,hotArchive:1,coldArchive:2}),e.enum(\"BucketEntryType\",{metaentry:-1,liveentry:0,deadentry:1,initentry:2}),e.enum(\"HotArchiveBucketEntryType\",{hotArchiveMetaentry:-1,hotArchiveArchived:0,hotArchiveLive:1,hotArchiveDeleted:2}),e.enum(\"ColdArchiveBucketEntryType\",{coldArchiveMetaentry:-1,coldArchiveArchivedLeaf:0,coldArchiveDeletedLeaf:1,coldArchiveBoundaryLeaf:2,coldArchiveHash:3}),e.union(\"BucketMetadataExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()],[1,\"bucketListType\"]],arms:{bucketListType:e.lookup(\"BucketListType\")}}),e.struct(\"BucketMetadata\",[[\"ledgerVersion\",e.lookup(\"Uint32\")],[\"ext\",e.lookup(\"BucketMetadataExt\")]]),e.union(\"BucketEntry\",{switchOn:e.lookup(\"BucketEntryType\"),switchName:\"type\",switches:[[\"liveentry\",\"liveEntry\"],[\"initentry\",\"liveEntry\"],[\"deadentry\",\"deadEntry\"],[\"metaentry\",\"metaEntry\"]],arms:{liveEntry:e.lookup(\"LedgerEntry\"),deadEntry:e.lookup(\"LedgerKey\"),metaEntry:e.lookup(\"BucketMetadata\")}}),e.union(\"HotArchiveBucketEntry\",{switchOn:e.lookup(\"HotArchiveBucketEntryType\"),switchName:\"type\",switches:[[\"hotArchiveArchived\",\"archivedEntry\"],[\"hotArchiveLive\",\"key\"],[\"hotArchiveDeleted\",\"key\"],[\"hotArchiveMetaentry\",\"metaEntry\"]],arms:{archivedEntry:e.lookup(\"LedgerEntry\"),key:e.lookup(\"LedgerKey\"),metaEntry:e.lookup(\"BucketMetadata\")}}),e.struct(\"ColdArchiveArchivedLeaf\",[[\"index\",e.lookup(\"Uint32\")],[\"archivedEntry\",e.lookup(\"LedgerEntry\")]]),e.struct(\"ColdArchiveDeletedLeaf\",[[\"index\",e.lookup(\"Uint32\")],[\"deletedKey\",e.lookup(\"LedgerKey\")]]),e.struct(\"ColdArchiveBoundaryLeaf\",[[\"index\",e.lookup(\"Uint32\")],[\"isLowerBound\",e.bool()]]),e.struct(\"ColdArchiveHashEntry\",[[\"index\",e.lookup(\"Uint32\")],[\"level\",e.lookup(\"Uint32\")],[\"hash\",e.lookup(\"Hash\")]]),e.union(\"ColdArchiveBucketEntry\",{switchOn:e.lookup(\"ColdArchiveBucketEntryType\"),switchName:\"type\",switches:[[\"coldArchiveMetaentry\",\"metaEntry\"],[\"coldArchiveArchivedLeaf\",\"archivedLeaf\"],[\"coldArchiveDeletedLeaf\",\"deletedLeaf\"],[\"coldArchiveBoundaryLeaf\",\"boundaryLeaf\"],[\"coldArchiveHash\",\"hashEntry\"]],arms:{metaEntry:e.lookup(\"BucketMetadata\"),archivedLeaf:e.lookup(\"ColdArchiveArchivedLeaf\"),deletedLeaf:e.lookup(\"ColdArchiveDeletedLeaf\"),boundaryLeaf:e.lookup(\"ColdArchiveBoundaryLeaf\"),hashEntry:e.lookup(\"ColdArchiveHashEntry\")}}),e.typedef(\"UpgradeType\",e.varOpaque(128)),e.enum(\"StellarValueType\",{stellarValueBasic:0,stellarValueSigned:1}),e.struct(\"LedgerCloseValueSignature\",[[\"nodeId\",e.lookup(\"NodeId\")],[\"signature\",e.lookup(\"Signature\")]]),e.union(\"StellarValueExt\",{switchOn:e.lookup(\"StellarValueType\"),switchName:\"v\",switches:[[\"stellarValueBasic\",e.void()],[\"stellarValueSigned\",\"lcValueSignature\"]],arms:{lcValueSignature:e.lookup(\"LedgerCloseValueSignature\")}}),e.struct(\"StellarValue\",[[\"txSetHash\",e.lookup(\"Hash\")],[\"closeTime\",e.lookup(\"TimePoint\")],[\"upgrades\",e.varArray(e.lookup(\"UpgradeType\"),6)],[\"ext\",e.lookup(\"StellarValueExt\")]]),e.const(\"MASK_LEDGER_HEADER_FLAGS\",7),e.enum(\"LedgerHeaderFlags\",{disableLiquidityPoolTradingFlag:1,disableLiquidityPoolDepositFlag:2,disableLiquidityPoolWithdrawalFlag:4}),e.union(\"LedgerHeaderExtensionV1Ext\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()]],arms:{}}),e.struct(\"LedgerHeaderExtensionV1\",[[\"flags\",e.lookup(\"Uint32\")],[\"ext\",e.lookup(\"LedgerHeaderExtensionV1Ext\")]]),e.union(\"LedgerHeaderExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()],[1,\"v1\"]],arms:{v1:e.lookup(\"LedgerHeaderExtensionV1\")}}),e.struct(\"LedgerHeader\",[[\"ledgerVersion\",e.lookup(\"Uint32\")],[\"previousLedgerHash\",e.lookup(\"Hash\")],[\"scpValue\",e.lookup(\"StellarValue\")],[\"txSetResultHash\",e.lookup(\"Hash\")],[\"bucketListHash\",e.lookup(\"Hash\")],[\"ledgerSeq\",e.lookup(\"Uint32\")],[\"totalCoins\",e.lookup(\"Int64\")],[\"feePool\",e.lookup(\"Int64\")],[\"inflationSeq\",e.lookup(\"Uint32\")],[\"idPool\",e.lookup(\"Uint64\")],[\"baseFee\",e.lookup(\"Uint32\")],[\"baseReserve\",e.lookup(\"Uint32\")],[\"maxTxSetSize\",e.lookup(\"Uint32\")],[\"skipList\",e.array(e.lookup(\"Hash\"),4)],[\"ext\",e.lookup(\"LedgerHeaderExt\")]]),e.enum(\"LedgerUpgradeType\",{ledgerUpgradeVersion:1,ledgerUpgradeBaseFee:2,ledgerUpgradeMaxTxSetSize:3,ledgerUpgradeBaseReserve:4,ledgerUpgradeFlags:5,ledgerUpgradeConfig:6,ledgerUpgradeMaxSorobanTxSetSize:7}),e.struct(\"ConfigUpgradeSetKey\",[[\"contractId\",e.lookup(\"Hash\")],[\"contentHash\",e.lookup(\"Hash\")]]),e.union(\"LedgerUpgrade\",{switchOn:e.lookup(\"LedgerUpgradeType\"),switchName:\"type\",switches:[[\"ledgerUpgradeVersion\",\"newLedgerVersion\"],[\"ledgerUpgradeBaseFee\",\"newBaseFee\"],[\"ledgerUpgradeMaxTxSetSize\",\"newMaxTxSetSize\"],[\"ledgerUpgradeBaseReserve\",\"newBaseReserve\"],[\"ledgerUpgradeFlags\",\"newFlags\"],[\"ledgerUpgradeConfig\",\"newConfig\"],[\"ledgerUpgradeMaxSorobanTxSetSize\",\"newMaxSorobanTxSetSize\"]],arms:{newLedgerVersion:e.lookup(\"Uint32\"),newBaseFee:e.lookup(\"Uint32\"),newMaxTxSetSize:e.lookup(\"Uint32\"),newBaseReserve:e.lookup(\"Uint32\"),newFlags:e.lookup(\"Uint32\"),newConfig:e.lookup(\"ConfigUpgradeSetKey\"),newMaxSorobanTxSetSize:e.lookup(\"Uint32\")}}),e.struct(\"ConfigUpgradeSet\",[[\"updatedEntry\",e.varArray(e.lookup(\"ConfigSettingEntry\"),2147483647)]]),e.enum(\"TxSetComponentType\",{txsetCompTxsMaybeDiscountedFee:0}),e.struct(\"TxSetComponentTxsMaybeDiscountedFee\",[[\"baseFee\",e.option(e.lookup(\"Int64\"))],[\"txes\",e.varArray(e.lookup(\"TransactionEnvelope\"),2147483647)]]),e.union(\"TxSetComponent\",{switchOn:e.lookup(\"TxSetComponentType\"),switchName:\"type\",switches:[[\"txsetCompTxsMaybeDiscountedFee\",\"txsMaybeDiscountedFee\"]],arms:{txsMaybeDiscountedFee:e.lookup(\"TxSetComponentTxsMaybeDiscountedFee\")}}),e.union(\"TransactionPhase\",{switchOn:e.int(),switchName:\"v\",switches:[[0,\"v0Components\"]],arms:{v0Components:e.varArray(e.lookup(\"TxSetComponent\"),2147483647)}}),e.struct(\"TransactionSet\",[[\"previousLedgerHash\",e.lookup(\"Hash\")],[\"txes\",e.varArray(e.lookup(\"TransactionEnvelope\"),2147483647)]]),e.struct(\"TransactionSetV1\",[[\"previousLedgerHash\",e.lookup(\"Hash\")],[\"phases\",e.varArray(e.lookup(\"TransactionPhase\"),2147483647)]]),e.union(\"GeneralizedTransactionSet\",{switchOn:e.int(),switchName:\"v\",switches:[[1,\"v1TxSet\"]],arms:{v1TxSet:e.lookup(\"TransactionSetV1\")}}),e.struct(\"TransactionResultPair\",[[\"transactionHash\",e.lookup(\"Hash\")],[\"result\",e.lookup(\"TransactionResult\")]]),e.struct(\"TransactionResultSet\",[[\"results\",e.varArray(e.lookup(\"TransactionResultPair\"),2147483647)]]),e.union(\"TransactionHistoryEntryExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()],[1,\"generalizedTxSet\"]],arms:{generalizedTxSet:e.lookup(\"GeneralizedTransactionSet\")}}),e.struct(\"TransactionHistoryEntry\",[[\"ledgerSeq\",e.lookup(\"Uint32\")],[\"txSet\",e.lookup(\"TransactionSet\")],[\"ext\",e.lookup(\"TransactionHistoryEntryExt\")]]),e.union(\"TransactionHistoryResultEntryExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()]],arms:{}}),e.struct(\"TransactionHistoryResultEntry\",[[\"ledgerSeq\",e.lookup(\"Uint32\")],[\"txResultSet\",e.lookup(\"TransactionResultSet\")],[\"ext\",e.lookup(\"TransactionHistoryResultEntryExt\")]]),e.union(\"LedgerHeaderHistoryEntryExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()]],arms:{}}),e.struct(\"LedgerHeaderHistoryEntry\",[[\"hash\",e.lookup(\"Hash\")],[\"header\",e.lookup(\"LedgerHeader\")],[\"ext\",e.lookup(\"LedgerHeaderHistoryEntryExt\")]]),e.struct(\"LedgerScpMessages\",[[\"ledgerSeq\",e.lookup(\"Uint32\")],[\"messages\",e.varArray(e.lookup(\"ScpEnvelope\"),2147483647)]]),e.struct(\"ScpHistoryEntryV0\",[[\"quorumSets\",e.varArray(e.lookup(\"ScpQuorumSet\"),2147483647)],[\"ledgerMessages\",e.lookup(\"LedgerScpMessages\")]]),e.union(\"ScpHistoryEntry\",{switchOn:e.int(),switchName:\"v\",switches:[[0,\"v0\"]],arms:{v0:e.lookup(\"ScpHistoryEntryV0\")}}),e.enum(\"LedgerEntryChangeType\",{ledgerEntryCreated:0,ledgerEntryUpdated:1,ledgerEntryRemoved:2,ledgerEntryState:3}),e.union(\"LedgerEntryChange\",{switchOn:e.lookup(\"LedgerEntryChangeType\"),switchName:\"type\",switches:[[\"ledgerEntryCreated\",\"created\"],[\"ledgerEntryUpdated\",\"updated\"],[\"ledgerEntryRemoved\",\"removed\"],[\"ledgerEntryState\",\"state\"]],arms:{created:e.lookup(\"LedgerEntry\"),updated:e.lookup(\"LedgerEntry\"),removed:e.lookup(\"LedgerKey\"),state:e.lookup(\"LedgerEntry\")}}),e.typedef(\"LedgerEntryChanges\",e.varArray(e.lookup(\"LedgerEntryChange\"),2147483647)),e.struct(\"OperationMeta\",[[\"changes\",e.lookup(\"LedgerEntryChanges\")]]),e.struct(\"TransactionMetaV1\",[[\"txChanges\",e.lookup(\"LedgerEntryChanges\")],[\"operations\",e.varArray(e.lookup(\"OperationMeta\"),2147483647)]]),e.struct(\"TransactionMetaV2\",[[\"txChangesBefore\",e.lookup(\"LedgerEntryChanges\")],[\"operations\",e.varArray(e.lookup(\"OperationMeta\"),2147483647)],[\"txChangesAfter\",e.lookup(\"LedgerEntryChanges\")]]),e.enum(\"ContractEventType\",{system:0,contract:1,diagnostic:2}),e.struct(\"ContractEventV0\",[[\"topics\",e.varArray(e.lookup(\"ScVal\"),2147483647)],[\"data\",e.lookup(\"ScVal\")]]),e.union(\"ContractEventBody\",{switchOn:e.int(),switchName:\"v\",switches:[[0,\"v0\"]],arms:{v0:e.lookup(\"ContractEventV0\")}}),e.struct(\"ContractEvent\",[[\"ext\",e.lookup(\"ExtensionPoint\")],[\"contractId\",e.option(e.lookup(\"Hash\"))],[\"type\",e.lookup(\"ContractEventType\")],[\"body\",e.lookup(\"ContractEventBody\")]]),e.struct(\"DiagnosticEvent\",[[\"inSuccessfulContractCall\",e.bool()],[\"event\",e.lookup(\"ContractEvent\")]]),e.typedef(\"DiagnosticEvents\",e.varArray(e.lookup(\"DiagnosticEvent\"),2147483647)),e.struct(\"SorobanTransactionMetaExtV1\",[[\"ext\",e.lookup(\"ExtensionPoint\")],[\"totalNonRefundableResourceFeeCharged\",e.lookup(\"Int64\")],[\"totalRefundableResourceFeeCharged\",e.lookup(\"Int64\")],[\"rentFeeCharged\",e.lookup(\"Int64\")]]),e.union(\"SorobanTransactionMetaExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()],[1,\"v1\"]],arms:{v1:e.lookup(\"SorobanTransactionMetaExtV1\")}}),e.struct(\"SorobanTransactionMeta\",[[\"ext\",e.lookup(\"SorobanTransactionMetaExt\")],[\"events\",e.varArray(e.lookup(\"ContractEvent\"),2147483647)],[\"returnValue\",e.lookup(\"ScVal\")],[\"diagnosticEvents\",e.varArray(e.lookup(\"DiagnosticEvent\"),2147483647)]]),e.struct(\"TransactionMetaV3\",[[\"ext\",e.lookup(\"ExtensionPoint\")],[\"txChangesBefore\",e.lookup(\"LedgerEntryChanges\")],[\"operations\",e.varArray(e.lookup(\"OperationMeta\"),2147483647)],[\"txChangesAfter\",e.lookup(\"LedgerEntryChanges\")],[\"sorobanMeta\",e.option(e.lookup(\"SorobanTransactionMeta\"))]]),e.struct(\"InvokeHostFunctionSuccessPreImage\",[[\"returnValue\",e.lookup(\"ScVal\")],[\"events\",e.varArray(e.lookup(\"ContractEvent\"),2147483647)]]),e.union(\"TransactionMeta\",{switchOn:e.int(),switchName:\"v\",switches:[[0,\"operations\"],[1,\"v1\"],[2,\"v2\"],[3,\"v3\"]],arms:{operations:e.varArray(e.lookup(\"OperationMeta\"),2147483647),v1:e.lookup(\"TransactionMetaV1\"),v2:e.lookup(\"TransactionMetaV2\"),v3:e.lookup(\"TransactionMetaV3\")}}),e.struct(\"TransactionResultMeta\",[[\"result\",e.lookup(\"TransactionResultPair\")],[\"feeProcessing\",e.lookup(\"LedgerEntryChanges\")],[\"txApplyProcessing\",e.lookup(\"TransactionMeta\")]]),e.struct(\"UpgradeEntryMeta\",[[\"upgrade\",e.lookup(\"LedgerUpgrade\")],[\"changes\",e.lookup(\"LedgerEntryChanges\")]]),e.struct(\"LedgerCloseMetaV0\",[[\"ledgerHeader\",e.lookup(\"LedgerHeaderHistoryEntry\")],[\"txSet\",e.lookup(\"TransactionSet\")],[\"txProcessing\",e.varArray(e.lookup(\"TransactionResultMeta\"),2147483647)],[\"upgradesProcessing\",e.varArray(e.lookup(\"UpgradeEntryMeta\"),2147483647)],[\"scpInfo\",e.varArray(e.lookup(\"ScpHistoryEntry\"),2147483647)]]),e.struct(\"LedgerCloseMetaExtV1\",[[\"ext\",e.lookup(\"ExtensionPoint\")],[\"sorobanFeeWrite1Kb\",e.lookup(\"Int64\")]]),e.union(\"LedgerCloseMetaExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()],[1,\"v1\"]],arms:{v1:e.lookup(\"LedgerCloseMetaExtV1\")}}),e.struct(\"LedgerCloseMetaV1\",[[\"ext\",e.lookup(\"LedgerCloseMetaExt\")],[\"ledgerHeader\",e.lookup(\"LedgerHeaderHistoryEntry\")],[\"txSet\",e.lookup(\"GeneralizedTransactionSet\")],[\"txProcessing\",e.varArray(e.lookup(\"TransactionResultMeta\"),2147483647)],[\"upgradesProcessing\",e.varArray(e.lookup(\"UpgradeEntryMeta\"),2147483647)],[\"scpInfo\",e.varArray(e.lookup(\"ScpHistoryEntry\"),2147483647)],[\"totalByteSizeOfBucketList\",e.lookup(\"Uint64\")],[\"evictedTemporaryLedgerKeys\",e.varArray(e.lookup(\"LedgerKey\"),2147483647)],[\"evictedPersistentLedgerEntries\",e.varArray(e.lookup(\"LedgerEntry\"),2147483647)]]),e.union(\"LedgerCloseMeta\",{switchOn:e.int(),switchName:\"v\",switches:[[0,\"v0\"],[1,\"v1\"]],arms:{v0:e.lookup(\"LedgerCloseMetaV0\"),v1:e.lookup(\"LedgerCloseMetaV1\")}}),e.enum(\"ErrorCode\",{errMisc:0,errData:1,errConf:2,errAuth:3,errLoad:4}),e.struct(\"Error\",[[\"code\",e.lookup(\"ErrorCode\")],[\"msg\",e.string(100)]]),e.struct(\"SendMore\",[[\"numMessages\",e.lookup(\"Uint32\")]]),e.struct(\"SendMoreExtended\",[[\"numMessages\",e.lookup(\"Uint32\")],[\"numBytes\",e.lookup(\"Uint32\")]]),e.struct(\"AuthCert\",[[\"pubkey\",e.lookup(\"Curve25519Public\")],[\"expiration\",e.lookup(\"Uint64\")],[\"sig\",e.lookup(\"Signature\")]]),e.struct(\"Hello\",[[\"ledgerVersion\",e.lookup(\"Uint32\")],[\"overlayVersion\",e.lookup(\"Uint32\")],[\"overlayMinVersion\",e.lookup(\"Uint32\")],[\"networkId\",e.lookup(\"Hash\")],[\"versionStr\",e.string(100)],[\"listeningPort\",e.int()],[\"peerId\",e.lookup(\"NodeId\")],[\"cert\",e.lookup(\"AuthCert\")],[\"nonce\",e.lookup(\"Uint256\")]]),e.const(\"AUTH_MSG_FLAG_FLOW_CONTROL_BYTES_REQUESTED\",200),e.struct(\"Auth\",[[\"flags\",e.int()]]),e.enum(\"IpAddrType\",{iPv4:0,iPv6:1}),e.union(\"PeerAddressIp\",{switchOn:e.lookup(\"IpAddrType\"),switchName:\"type\",switches:[[\"iPv4\",\"ipv4\"],[\"iPv6\",\"ipv6\"]],arms:{ipv4:e.opaque(4),ipv6:e.opaque(16)}}),e.struct(\"PeerAddress\",[[\"ip\",e.lookup(\"PeerAddressIp\")],[\"port\",e.lookup(\"Uint32\")],[\"numFailures\",e.lookup(\"Uint32\")]]),e.enum(\"MessageType\",{errorMsg:0,auth:2,dontHave:3,getPeers:4,peers:5,getTxSet:6,txSet:7,generalizedTxSet:17,transaction:8,getScpQuorumset:9,scpQuorumset:10,scpMessage:11,getScpState:12,hello:13,surveyRequest:14,surveyResponse:15,sendMore:16,sendMoreExtended:20,floodAdvert:18,floodDemand:19,timeSlicedSurveyRequest:21,timeSlicedSurveyResponse:22,timeSlicedSurveyStartCollecting:23,timeSlicedSurveyStopCollecting:24}),e.struct(\"DontHave\",[[\"type\",e.lookup(\"MessageType\")],[\"reqHash\",e.lookup(\"Uint256\")]]),e.enum(\"SurveyMessageCommandType\",{surveyTopology:0,timeSlicedSurveyTopology:1}),e.enum(\"SurveyMessageResponseType\",{surveyTopologyResponseV0:0,surveyTopologyResponseV1:1,surveyTopologyResponseV2:2}),e.struct(\"TimeSlicedSurveyStartCollectingMessage\",[[\"surveyorId\",e.lookup(\"NodeId\")],[\"nonce\",e.lookup(\"Uint32\")],[\"ledgerNum\",e.lookup(\"Uint32\")]]),e.struct(\"SignedTimeSlicedSurveyStartCollectingMessage\",[[\"signature\",e.lookup(\"Signature\")],[\"startCollecting\",e.lookup(\"TimeSlicedSurveyStartCollectingMessage\")]]),e.struct(\"TimeSlicedSurveyStopCollectingMessage\",[[\"surveyorId\",e.lookup(\"NodeId\")],[\"nonce\",e.lookup(\"Uint32\")],[\"ledgerNum\",e.lookup(\"Uint32\")]]),e.struct(\"SignedTimeSlicedSurveyStopCollectingMessage\",[[\"signature\",e.lookup(\"Signature\")],[\"stopCollecting\",e.lookup(\"TimeSlicedSurveyStopCollectingMessage\")]]),e.struct(\"SurveyRequestMessage\",[[\"surveyorPeerId\",e.lookup(\"NodeId\")],[\"surveyedPeerId\",e.lookup(\"NodeId\")],[\"ledgerNum\",e.lookup(\"Uint32\")],[\"encryptionKey\",e.lookup(\"Curve25519Public\")],[\"commandType\",e.lookup(\"SurveyMessageCommandType\")]]),e.struct(\"TimeSlicedSurveyRequestMessage\",[[\"request\",e.lookup(\"SurveyRequestMessage\")],[\"nonce\",e.lookup(\"Uint32\")],[\"inboundPeersIndex\",e.lookup(\"Uint32\")],[\"outboundPeersIndex\",e.lookup(\"Uint32\")]]),e.struct(\"SignedSurveyRequestMessage\",[[\"requestSignature\",e.lookup(\"Signature\")],[\"request\",e.lookup(\"SurveyRequestMessage\")]]),e.struct(\"SignedTimeSlicedSurveyRequestMessage\",[[\"requestSignature\",e.lookup(\"Signature\")],[\"request\",e.lookup(\"TimeSlicedSurveyRequestMessage\")]]),e.typedef(\"EncryptedBody\",e.varOpaque(64e3)),e.struct(\"SurveyResponseMessage\",[[\"surveyorPeerId\",e.lookup(\"NodeId\")],[\"surveyedPeerId\",e.lookup(\"NodeId\")],[\"ledgerNum\",e.lookup(\"Uint32\")],[\"commandType\",e.lookup(\"SurveyMessageCommandType\")],[\"encryptedBody\",e.lookup(\"EncryptedBody\")]]),e.struct(\"TimeSlicedSurveyResponseMessage\",[[\"response\",e.lookup(\"SurveyResponseMessage\")],[\"nonce\",e.lookup(\"Uint32\")]]),e.struct(\"SignedSurveyResponseMessage\",[[\"responseSignature\",e.lookup(\"Signature\")],[\"response\",e.lookup(\"SurveyResponseMessage\")]]),e.struct(\"SignedTimeSlicedSurveyResponseMessage\",[[\"responseSignature\",e.lookup(\"Signature\")],[\"response\",e.lookup(\"TimeSlicedSurveyResponseMessage\")]]),e.struct(\"PeerStats\",[[\"id\",e.lookup(\"NodeId\")],[\"versionStr\",e.string(100)],[\"messagesRead\",e.lookup(\"Uint64\")],[\"messagesWritten\",e.lookup(\"Uint64\")],[\"bytesRead\",e.lookup(\"Uint64\")],[\"bytesWritten\",e.lookup(\"Uint64\")],[\"secondsConnected\",e.lookup(\"Uint64\")],[\"uniqueFloodBytesRecv\",e.lookup(\"Uint64\")],[\"duplicateFloodBytesRecv\",e.lookup(\"Uint64\")],[\"uniqueFetchBytesRecv\",e.lookup(\"Uint64\")],[\"duplicateFetchBytesRecv\",e.lookup(\"Uint64\")],[\"uniqueFloodMessageRecv\",e.lookup(\"Uint64\")],[\"duplicateFloodMessageRecv\",e.lookup(\"Uint64\")],[\"uniqueFetchMessageRecv\",e.lookup(\"Uint64\")],[\"duplicateFetchMessageRecv\",e.lookup(\"Uint64\")]]),e.typedef(\"PeerStatList\",e.varArray(e.lookup(\"PeerStats\"),25)),e.struct(\"TimeSlicedNodeData\",[[\"addedAuthenticatedPeers\",e.lookup(\"Uint32\")],[\"droppedAuthenticatedPeers\",e.lookup(\"Uint32\")],[\"totalInboundPeerCount\",e.lookup(\"Uint32\")],[\"totalOutboundPeerCount\",e.lookup(\"Uint32\")],[\"p75ScpFirstToSelfLatencyMs\",e.lookup(\"Uint32\")],[\"p75ScpSelfToOtherLatencyMs\",e.lookup(\"Uint32\")],[\"lostSyncCount\",e.lookup(\"Uint32\")],[\"isValidator\",e.bool()],[\"maxInboundPeerCount\",e.lookup(\"Uint32\")],[\"maxOutboundPeerCount\",e.lookup(\"Uint32\")]]),e.struct(\"TimeSlicedPeerData\",[[\"peerStats\",e.lookup(\"PeerStats\")],[\"averageLatencyMs\",e.lookup(\"Uint32\")]]),e.typedef(\"TimeSlicedPeerDataList\",e.varArray(e.lookup(\"TimeSlicedPeerData\"),25)),e.struct(\"TopologyResponseBodyV0\",[[\"inboundPeers\",e.lookup(\"PeerStatList\")],[\"outboundPeers\",e.lookup(\"PeerStatList\")],[\"totalInboundPeerCount\",e.lookup(\"Uint32\")],[\"totalOutboundPeerCount\",e.lookup(\"Uint32\")]]),e.struct(\"TopologyResponseBodyV1\",[[\"inboundPeers\",e.lookup(\"PeerStatList\")],[\"outboundPeers\",e.lookup(\"PeerStatList\")],[\"totalInboundPeerCount\",e.lookup(\"Uint32\")],[\"totalOutboundPeerCount\",e.lookup(\"Uint32\")],[\"maxInboundPeerCount\",e.lookup(\"Uint32\")],[\"maxOutboundPeerCount\",e.lookup(\"Uint32\")]]),e.struct(\"TopologyResponseBodyV2\",[[\"inboundPeers\",e.lookup(\"TimeSlicedPeerDataList\")],[\"outboundPeers\",e.lookup(\"TimeSlicedPeerDataList\")],[\"nodeData\",e.lookup(\"TimeSlicedNodeData\")]]),e.union(\"SurveyResponseBody\",{switchOn:e.lookup(\"SurveyMessageResponseType\"),switchName:\"type\",switches:[[\"surveyTopologyResponseV0\",\"topologyResponseBodyV0\"],[\"surveyTopologyResponseV1\",\"topologyResponseBodyV1\"],[\"surveyTopologyResponseV2\",\"topologyResponseBodyV2\"]],arms:{topologyResponseBodyV0:e.lookup(\"TopologyResponseBodyV0\"),topologyResponseBodyV1:e.lookup(\"TopologyResponseBodyV1\"),topologyResponseBodyV2:e.lookup(\"TopologyResponseBodyV2\")}}),e.const(\"TX_ADVERT_VECTOR_MAX_SIZE\",1e3),e.typedef(\"TxAdvertVector\",e.varArray(e.lookup(\"Hash\"),e.lookup(\"TX_ADVERT_VECTOR_MAX_SIZE\"))),e.struct(\"FloodAdvert\",[[\"txHashes\",e.lookup(\"TxAdvertVector\")]]),e.const(\"TX_DEMAND_VECTOR_MAX_SIZE\",1e3),e.typedef(\"TxDemandVector\",e.varArray(e.lookup(\"Hash\"),e.lookup(\"TX_DEMAND_VECTOR_MAX_SIZE\"))),e.struct(\"FloodDemand\",[[\"txHashes\",e.lookup(\"TxDemandVector\")]]),e.union(\"StellarMessage\",{switchOn:e.lookup(\"MessageType\"),switchName:\"type\",switches:[[\"errorMsg\",\"error\"],[\"hello\",\"hello\"],[\"auth\",\"auth\"],[\"dontHave\",\"dontHave\"],[\"getPeers\",e.void()],[\"peers\",\"peers\"],[\"getTxSet\",\"txSetHash\"],[\"txSet\",\"txSet\"],[\"generalizedTxSet\",\"generalizedTxSet\"],[\"transaction\",\"transaction\"],[\"surveyRequest\",\"signedSurveyRequestMessage\"],[\"surveyResponse\",\"signedSurveyResponseMessage\"],[\"timeSlicedSurveyRequest\",\"signedTimeSlicedSurveyRequestMessage\"],[\"timeSlicedSurveyResponse\",\"signedTimeSlicedSurveyResponseMessage\"],[\"timeSlicedSurveyStartCollecting\",\"signedTimeSlicedSurveyStartCollectingMessage\"],[\"timeSlicedSurveyStopCollecting\",\"signedTimeSlicedSurveyStopCollectingMessage\"],[\"getScpQuorumset\",\"qSetHash\"],[\"scpQuorumset\",\"qSet\"],[\"scpMessage\",\"envelope\"],[\"getScpState\",\"getScpLedgerSeq\"],[\"sendMore\",\"sendMoreMessage\"],[\"sendMoreExtended\",\"sendMoreExtendedMessage\"],[\"floodAdvert\",\"floodAdvert\"],[\"floodDemand\",\"floodDemand\"]],arms:{error:e.lookup(\"Error\"),hello:e.lookup(\"Hello\"),auth:e.lookup(\"Auth\"),dontHave:e.lookup(\"DontHave\"),peers:e.varArray(e.lookup(\"PeerAddress\"),100),txSetHash:e.lookup(\"Uint256\"),txSet:e.lookup(\"TransactionSet\"),generalizedTxSet:e.lookup(\"GeneralizedTransactionSet\"),transaction:e.lookup(\"TransactionEnvelope\"),signedSurveyRequestMessage:e.lookup(\"SignedSurveyRequestMessage\"),signedSurveyResponseMessage:e.lookup(\"SignedSurveyResponseMessage\"),signedTimeSlicedSurveyRequestMessage:e.lookup(\"SignedTimeSlicedSurveyRequestMessage\"),signedTimeSlicedSurveyResponseMessage:e.lookup(\"SignedTimeSlicedSurveyResponseMessage\"),signedTimeSlicedSurveyStartCollectingMessage:e.lookup(\"SignedTimeSlicedSurveyStartCollectingMessage\"),signedTimeSlicedSurveyStopCollectingMessage:e.lookup(\"SignedTimeSlicedSurveyStopCollectingMessage\"),qSetHash:e.lookup(\"Uint256\"),qSet:e.lookup(\"ScpQuorumSet\"),envelope:e.lookup(\"ScpEnvelope\"),getScpLedgerSeq:e.lookup(\"Uint32\"),sendMoreMessage:e.lookup(\"SendMore\"),sendMoreExtendedMessage:e.lookup(\"SendMoreExtended\"),floodAdvert:e.lookup(\"FloodAdvert\"),floodDemand:e.lookup(\"FloodDemand\")}}),e.struct(\"AuthenticatedMessageV0\",[[\"sequence\",e.lookup(\"Uint64\")],[\"message\",e.lookup(\"StellarMessage\")],[\"mac\",e.lookup(\"HmacSha256Mac\")]]),e.union(\"AuthenticatedMessage\",{switchOn:e.lookup(\"Uint32\"),switchName:\"v\",switches:[[0,\"v0\"]],arms:{v0:e.lookup(\"AuthenticatedMessageV0\")}}),e.const(\"MAX_OPS_PER_TX\",100),e.union(\"LiquidityPoolParameters\",{switchOn:e.lookup(\"LiquidityPoolType\"),switchName:\"type\",switches:[[\"liquidityPoolConstantProduct\",\"constantProduct\"]],arms:{constantProduct:e.lookup(\"LiquidityPoolConstantProductParameters\")}}),e.struct(\"MuxedAccountMed25519\",[[\"id\",e.lookup(\"Uint64\")],[\"ed25519\",e.lookup(\"Uint256\")]]),e.union(\"MuxedAccount\",{switchOn:e.lookup(\"CryptoKeyType\"),switchName:\"type\",switches:[[\"keyTypeEd25519\",\"ed25519\"],[\"keyTypeMuxedEd25519\",\"med25519\"]],arms:{ed25519:e.lookup(\"Uint256\"),med25519:e.lookup(\"MuxedAccountMed25519\")}}),e.struct(\"DecoratedSignature\",[[\"hint\",e.lookup(\"SignatureHint\")],[\"signature\",e.lookup(\"Signature\")]]),e.enum(\"OperationType\",{createAccount:0,payment:1,pathPaymentStrictReceive:2,manageSellOffer:3,createPassiveSellOffer:4,setOptions:5,changeTrust:6,allowTrust:7,accountMerge:8,inflation:9,manageData:10,bumpSequence:11,manageBuyOffer:12,pathPaymentStrictSend:13,createClaimableBalance:14,claimClaimableBalance:15,beginSponsoringFutureReserves:16,endSponsoringFutureReserves:17,revokeSponsorship:18,clawback:19,clawbackClaimableBalance:20,setTrustLineFlags:21,liquidityPoolDeposit:22,liquidityPoolWithdraw:23,invokeHostFunction:24,extendFootprintTtl:25,restoreFootprint:26}),e.struct(\"CreateAccountOp\",[[\"destination\",e.lookup(\"AccountId\")],[\"startingBalance\",e.lookup(\"Int64\")]]),e.struct(\"PaymentOp\",[[\"destination\",e.lookup(\"MuxedAccount\")],[\"asset\",e.lookup(\"Asset\")],[\"amount\",e.lookup(\"Int64\")]]),e.struct(\"PathPaymentStrictReceiveOp\",[[\"sendAsset\",e.lookup(\"Asset\")],[\"sendMax\",e.lookup(\"Int64\")],[\"destination\",e.lookup(\"MuxedAccount\")],[\"destAsset\",e.lookup(\"Asset\")],[\"destAmount\",e.lookup(\"Int64\")],[\"path\",e.varArray(e.lookup(\"Asset\"),5)]]),e.struct(\"PathPaymentStrictSendOp\",[[\"sendAsset\",e.lookup(\"Asset\")],[\"sendAmount\",e.lookup(\"Int64\")],[\"destination\",e.lookup(\"MuxedAccount\")],[\"destAsset\",e.lookup(\"Asset\")],[\"destMin\",e.lookup(\"Int64\")],[\"path\",e.varArray(e.lookup(\"Asset\"),5)]]),e.struct(\"ManageSellOfferOp\",[[\"selling\",e.lookup(\"Asset\")],[\"buying\",e.lookup(\"Asset\")],[\"amount\",e.lookup(\"Int64\")],[\"price\",e.lookup(\"Price\")],[\"offerId\",e.lookup(\"Int64\")]]),e.struct(\"ManageBuyOfferOp\",[[\"selling\",e.lookup(\"Asset\")],[\"buying\",e.lookup(\"Asset\")],[\"buyAmount\",e.lookup(\"Int64\")],[\"price\",e.lookup(\"Price\")],[\"offerId\",e.lookup(\"Int64\")]]),e.struct(\"CreatePassiveSellOfferOp\",[[\"selling\",e.lookup(\"Asset\")],[\"buying\",e.lookup(\"Asset\")],[\"amount\",e.lookup(\"Int64\")],[\"price\",e.lookup(\"Price\")]]),e.struct(\"SetOptionsOp\",[[\"inflationDest\",e.option(e.lookup(\"AccountId\"))],[\"clearFlags\",e.option(e.lookup(\"Uint32\"))],[\"setFlags\",e.option(e.lookup(\"Uint32\"))],[\"masterWeight\",e.option(e.lookup(\"Uint32\"))],[\"lowThreshold\",e.option(e.lookup(\"Uint32\"))],[\"medThreshold\",e.option(e.lookup(\"Uint32\"))],[\"highThreshold\",e.option(e.lookup(\"Uint32\"))],[\"homeDomain\",e.option(e.lookup(\"String32\"))],[\"signer\",e.option(e.lookup(\"Signer\"))]]),e.union(\"ChangeTrustAsset\",{switchOn:e.lookup(\"AssetType\"),switchName:\"type\",switches:[[\"assetTypeNative\",e.void()],[\"assetTypeCreditAlphanum4\",\"alphaNum4\"],[\"assetTypeCreditAlphanum12\",\"alphaNum12\"],[\"assetTypePoolShare\",\"liquidityPool\"]],arms:{alphaNum4:e.lookup(\"AlphaNum4\"),alphaNum12:e.lookup(\"AlphaNum12\"),liquidityPool:e.lookup(\"LiquidityPoolParameters\")}}),e.struct(\"ChangeTrustOp\",[[\"line\",e.lookup(\"ChangeTrustAsset\")],[\"limit\",e.lookup(\"Int64\")]]),e.struct(\"AllowTrustOp\",[[\"trustor\",e.lookup(\"AccountId\")],[\"asset\",e.lookup(\"AssetCode\")],[\"authorize\",e.lookup(\"Uint32\")]]),e.struct(\"ManageDataOp\",[[\"dataName\",e.lookup(\"String64\")],[\"dataValue\",e.option(e.lookup(\"DataValue\"))]]),e.struct(\"BumpSequenceOp\",[[\"bumpTo\",e.lookup(\"SequenceNumber\")]]),e.struct(\"CreateClaimableBalanceOp\",[[\"asset\",e.lookup(\"Asset\")],[\"amount\",e.lookup(\"Int64\")],[\"claimants\",e.varArray(e.lookup(\"Claimant\"),10)]]),e.struct(\"ClaimClaimableBalanceOp\",[[\"balanceId\",e.lookup(\"ClaimableBalanceId\")]]),e.struct(\"BeginSponsoringFutureReservesOp\",[[\"sponsoredId\",e.lookup(\"AccountId\")]]),e.enum(\"RevokeSponsorshipType\",{revokeSponsorshipLedgerEntry:0,revokeSponsorshipSigner:1}),e.struct(\"RevokeSponsorshipOpSigner\",[[\"accountId\",e.lookup(\"AccountId\")],[\"signerKey\",e.lookup(\"SignerKey\")]]),e.union(\"RevokeSponsorshipOp\",{switchOn:e.lookup(\"RevokeSponsorshipType\"),switchName:\"type\",switches:[[\"revokeSponsorshipLedgerEntry\",\"ledgerKey\"],[\"revokeSponsorshipSigner\",\"signer\"]],arms:{ledgerKey:e.lookup(\"LedgerKey\"),signer:e.lookup(\"RevokeSponsorshipOpSigner\")}}),e.struct(\"ClawbackOp\",[[\"asset\",e.lookup(\"Asset\")],[\"from\",e.lookup(\"MuxedAccount\")],[\"amount\",e.lookup(\"Int64\")]]),e.struct(\"ClawbackClaimableBalanceOp\",[[\"balanceId\",e.lookup(\"ClaimableBalanceId\")]]),e.struct(\"SetTrustLineFlagsOp\",[[\"trustor\",e.lookup(\"AccountId\")],[\"asset\",e.lookup(\"Asset\")],[\"clearFlags\",e.lookup(\"Uint32\")],[\"setFlags\",e.lookup(\"Uint32\")]]),e.const(\"LIQUIDITY_POOL_FEE_V18\",30),e.struct(\"LiquidityPoolDepositOp\",[[\"liquidityPoolId\",e.lookup(\"PoolId\")],[\"maxAmountA\",e.lookup(\"Int64\")],[\"maxAmountB\",e.lookup(\"Int64\")],[\"minPrice\",e.lookup(\"Price\")],[\"maxPrice\",e.lookup(\"Price\")]]),e.struct(\"LiquidityPoolWithdrawOp\",[[\"liquidityPoolId\",e.lookup(\"PoolId\")],[\"amount\",e.lookup(\"Int64\")],[\"minAmountA\",e.lookup(\"Int64\")],[\"minAmountB\",e.lookup(\"Int64\")]]),e.enum(\"HostFunctionType\",{hostFunctionTypeInvokeContract:0,hostFunctionTypeCreateContract:1,hostFunctionTypeUploadContractWasm:2,hostFunctionTypeCreateContractV2:3}),e.enum(\"ContractIdPreimageType\",{contractIdPreimageFromAddress:0,contractIdPreimageFromAsset:1}),e.struct(\"ContractIdPreimageFromAddress\",[[\"address\",e.lookup(\"ScAddress\")],[\"salt\",e.lookup(\"Uint256\")]]),e.union(\"ContractIdPreimage\",{switchOn:e.lookup(\"ContractIdPreimageType\"),switchName:\"type\",switches:[[\"contractIdPreimageFromAddress\",\"fromAddress\"],[\"contractIdPreimageFromAsset\",\"fromAsset\"]],arms:{fromAddress:e.lookup(\"ContractIdPreimageFromAddress\"),fromAsset:e.lookup(\"Asset\")}}),e.struct(\"CreateContractArgs\",[[\"contractIdPreimage\",e.lookup(\"ContractIdPreimage\")],[\"executable\",e.lookup(\"ContractExecutable\")]]),e.struct(\"CreateContractArgsV2\",[[\"contractIdPreimage\",e.lookup(\"ContractIdPreimage\")],[\"executable\",e.lookup(\"ContractExecutable\")],[\"constructorArgs\",e.varArray(e.lookup(\"ScVal\"),2147483647)]]),e.struct(\"InvokeContractArgs\",[[\"contractAddress\",e.lookup(\"ScAddress\")],[\"functionName\",e.lookup(\"ScSymbol\")],[\"args\",e.varArray(e.lookup(\"ScVal\"),2147483647)]]),e.union(\"HostFunction\",{switchOn:e.lookup(\"HostFunctionType\"),switchName:\"type\",switches:[[\"hostFunctionTypeInvokeContract\",\"invokeContract\"],[\"hostFunctionTypeCreateContract\",\"createContract\"],[\"hostFunctionTypeUploadContractWasm\",\"wasm\"],[\"hostFunctionTypeCreateContractV2\",\"createContractV2\"]],arms:{invokeContract:e.lookup(\"InvokeContractArgs\"),createContract:e.lookup(\"CreateContractArgs\"),wasm:e.varOpaque(),createContractV2:e.lookup(\"CreateContractArgsV2\")}}),e.enum(\"SorobanAuthorizedFunctionType\",{sorobanAuthorizedFunctionTypeContractFn:0,sorobanAuthorizedFunctionTypeCreateContractHostFn:1,sorobanAuthorizedFunctionTypeCreateContractV2HostFn:2}),e.union(\"SorobanAuthorizedFunction\",{switchOn:e.lookup(\"SorobanAuthorizedFunctionType\"),switchName:\"type\",switches:[[\"sorobanAuthorizedFunctionTypeContractFn\",\"contractFn\"],[\"sorobanAuthorizedFunctionTypeCreateContractHostFn\",\"createContractHostFn\"],[\"sorobanAuthorizedFunctionTypeCreateContractV2HostFn\",\"createContractV2HostFn\"]],arms:{contractFn:e.lookup(\"InvokeContractArgs\"),createContractHostFn:e.lookup(\"CreateContractArgs\"),createContractV2HostFn:e.lookup(\"CreateContractArgsV2\")}}),e.struct(\"SorobanAuthorizedInvocation\",[[\"function\",e.lookup(\"SorobanAuthorizedFunction\")],[\"subInvocations\",e.varArray(e.lookup(\"SorobanAuthorizedInvocation\"),2147483647)]]),e.struct(\"SorobanAddressCredentials\",[[\"address\",e.lookup(\"ScAddress\")],[\"nonce\",e.lookup(\"Int64\")],[\"signatureExpirationLedger\",e.lookup(\"Uint32\")],[\"signature\",e.lookup(\"ScVal\")]]),e.enum(\"SorobanCredentialsType\",{sorobanCredentialsSourceAccount:0,sorobanCredentialsAddress:1}),e.union(\"SorobanCredentials\",{switchOn:e.lookup(\"SorobanCredentialsType\"),switchName:\"type\",switches:[[\"sorobanCredentialsSourceAccount\",e.void()],[\"sorobanCredentialsAddress\",\"address\"]],arms:{address:e.lookup(\"SorobanAddressCredentials\")}}),e.struct(\"SorobanAuthorizationEntry\",[[\"credentials\",e.lookup(\"SorobanCredentials\")],[\"rootInvocation\",e.lookup(\"SorobanAuthorizedInvocation\")]]),e.struct(\"InvokeHostFunctionOp\",[[\"hostFunction\",e.lookup(\"HostFunction\")],[\"auth\",e.varArray(e.lookup(\"SorobanAuthorizationEntry\"),2147483647)]]),e.struct(\"ExtendFootprintTtlOp\",[[\"ext\",e.lookup(\"ExtensionPoint\")],[\"extendTo\",e.lookup(\"Uint32\")]]),e.struct(\"RestoreFootprintOp\",[[\"ext\",e.lookup(\"ExtensionPoint\")]]),e.union(\"OperationBody\",{switchOn:e.lookup(\"OperationType\"),switchName:\"type\",switches:[[\"createAccount\",\"createAccountOp\"],[\"payment\",\"paymentOp\"],[\"pathPaymentStrictReceive\",\"pathPaymentStrictReceiveOp\"],[\"manageSellOffer\",\"manageSellOfferOp\"],[\"createPassiveSellOffer\",\"createPassiveSellOfferOp\"],[\"setOptions\",\"setOptionsOp\"],[\"changeTrust\",\"changeTrustOp\"],[\"allowTrust\",\"allowTrustOp\"],[\"accountMerge\",\"destination\"],[\"inflation\",e.void()],[\"manageData\",\"manageDataOp\"],[\"bumpSequence\",\"bumpSequenceOp\"],[\"manageBuyOffer\",\"manageBuyOfferOp\"],[\"pathPaymentStrictSend\",\"pathPaymentStrictSendOp\"],[\"createClaimableBalance\",\"createClaimableBalanceOp\"],[\"claimClaimableBalance\",\"claimClaimableBalanceOp\"],[\"beginSponsoringFutureReserves\",\"beginSponsoringFutureReservesOp\"],[\"endSponsoringFutureReserves\",e.void()],[\"revokeSponsorship\",\"revokeSponsorshipOp\"],[\"clawback\",\"clawbackOp\"],[\"clawbackClaimableBalance\",\"clawbackClaimableBalanceOp\"],[\"setTrustLineFlags\",\"setTrustLineFlagsOp\"],[\"liquidityPoolDeposit\",\"liquidityPoolDepositOp\"],[\"liquidityPoolWithdraw\",\"liquidityPoolWithdrawOp\"],[\"invokeHostFunction\",\"invokeHostFunctionOp\"],[\"extendFootprintTtl\",\"extendFootprintTtlOp\"],[\"restoreFootprint\",\"restoreFootprintOp\"]],arms:{createAccountOp:e.lookup(\"CreateAccountOp\"),paymentOp:e.lookup(\"PaymentOp\"),pathPaymentStrictReceiveOp:e.lookup(\"PathPaymentStrictReceiveOp\"),manageSellOfferOp:e.lookup(\"ManageSellOfferOp\"),createPassiveSellOfferOp:e.lookup(\"CreatePassiveSellOfferOp\"),setOptionsOp:e.lookup(\"SetOptionsOp\"),changeTrustOp:e.lookup(\"ChangeTrustOp\"),allowTrustOp:e.lookup(\"AllowTrustOp\"),destination:e.lookup(\"MuxedAccount\"),manageDataOp:e.lookup(\"ManageDataOp\"),bumpSequenceOp:e.lookup(\"BumpSequenceOp\"),manageBuyOfferOp:e.lookup(\"ManageBuyOfferOp\"),pathPaymentStrictSendOp:e.lookup(\"PathPaymentStrictSendOp\"),createClaimableBalanceOp:e.lookup(\"CreateClaimableBalanceOp\"),claimClaimableBalanceOp:e.lookup(\"ClaimClaimableBalanceOp\"),beginSponsoringFutureReservesOp:e.lookup(\"BeginSponsoringFutureReservesOp\"),revokeSponsorshipOp:e.lookup(\"RevokeSponsorshipOp\"),clawbackOp:e.lookup(\"ClawbackOp\"),clawbackClaimableBalanceOp:e.lookup(\"ClawbackClaimableBalanceOp\"),setTrustLineFlagsOp:e.lookup(\"SetTrustLineFlagsOp\"),liquidityPoolDepositOp:e.lookup(\"LiquidityPoolDepositOp\"),liquidityPoolWithdrawOp:e.lookup(\"LiquidityPoolWithdrawOp\"),invokeHostFunctionOp:e.lookup(\"InvokeHostFunctionOp\"),extendFootprintTtlOp:e.lookup(\"ExtendFootprintTtlOp\"),restoreFootprintOp:e.lookup(\"RestoreFootprintOp\")}}),e.struct(\"Operation\",[[\"sourceAccount\",e.option(e.lookup(\"MuxedAccount\"))],[\"body\",e.lookup(\"OperationBody\")]]),e.struct(\"HashIdPreimageOperationId\",[[\"sourceAccount\",e.lookup(\"AccountId\")],[\"seqNum\",e.lookup(\"SequenceNumber\")],[\"opNum\",e.lookup(\"Uint32\")]]),e.struct(\"HashIdPreimageRevokeId\",[[\"sourceAccount\",e.lookup(\"AccountId\")],[\"seqNum\",e.lookup(\"SequenceNumber\")],[\"opNum\",e.lookup(\"Uint32\")],[\"liquidityPoolId\",e.lookup(\"PoolId\")],[\"asset\",e.lookup(\"Asset\")]]),e.struct(\"HashIdPreimageContractId\",[[\"networkId\",e.lookup(\"Hash\")],[\"contractIdPreimage\",e.lookup(\"ContractIdPreimage\")]]),e.struct(\"HashIdPreimageSorobanAuthorization\",[[\"networkId\",e.lookup(\"Hash\")],[\"nonce\",e.lookup(\"Int64\")],[\"signatureExpirationLedger\",e.lookup(\"Uint32\")],[\"invocation\",e.lookup(\"SorobanAuthorizedInvocation\")]]),e.union(\"HashIdPreimage\",{switchOn:e.lookup(\"EnvelopeType\"),switchName:\"type\",switches:[[\"envelopeTypeOpId\",\"operationId\"],[\"envelopeTypePoolRevokeOpId\",\"revokeId\"],[\"envelopeTypeContractId\",\"contractId\"],[\"envelopeTypeSorobanAuthorization\",\"sorobanAuthorization\"]],arms:{operationId:e.lookup(\"HashIdPreimageOperationId\"),revokeId:e.lookup(\"HashIdPreimageRevokeId\"),contractId:e.lookup(\"HashIdPreimageContractId\"),sorobanAuthorization:e.lookup(\"HashIdPreimageSorobanAuthorization\")}}),e.enum(\"MemoType\",{memoNone:0,memoText:1,memoId:2,memoHash:3,memoReturn:4}),e.union(\"Memo\",{switchOn:e.lookup(\"MemoType\"),switchName:\"type\",switches:[[\"memoNone\",e.void()],[\"memoText\",\"text\"],[\"memoId\",\"id\"],[\"memoHash\",\"hash\"],[\"memoReturn\",\"retHash\"]],arms:{text:e.string(28),id:e.lookup(\"Uint64\"),hash:e.lookup(\"Hash\"),retHash:e.lookup(\"Hash\")}}),e.struct(\"TimeBounds\",[[\"minTime\",e.lookup(\"TimePoint\")],[\"maxTime\",e.lookup(\"TimePoint\")]]),e.struct(\"LedgerBounds\",[[\"minLedger\",e.lookup(\"Uint32\")],[\"maxLedger\",e.lookup(\"Uint32\")]]),e.struct(\"PreconditionsV2\",[[\"timeBounds\",e.option(e.lookup(\"TimeBounds\"))],[\"ledgerBounds\",e.option(e.lookup(\"LedgerBounds\"))],[\"minSeqNum\",e.option(e.lookup(\"SequenceNumber\"))],[\"minSeqAge\",e.lookup(\"Duration\")],[\"minSeqLedgerGap\",e.lookup(\"Uint32\")],[\"extraSigners\",e.varArray(e.lookup(\"SignerKey\"),2)]]),e.enum(\"PreconditionType\",{precondNone:0,precondTime:1,precondV2:2}),e.union(\"Preconditions\",{switchOn:e.lookup(\"PreconditionType\"),switchName:\"type\",switches:[[\"precondNone\",e.void()],[\"precondTime\",\"timeBounds\"],[\"precondV2\",\"v2\"]],arms:{timeBounds:e.lookup(\"TimeBounds\"),v2:e.lookup(\"PreconditionsV2\")}}),e.struct(\"LedgerFootprint\",[[\"readOnly\",e.varArray(e.lookup(\"LedgerKey\"),2147483647)],[\"readWrite\",e.varArray(e.lookup(\"LedgerKey\"),2147483647)]]),e.enum(\"ArchivalProofType\",{existence:0,nonexistence:1}),e.struct(\"ArchivalProofNode\",[[\"index\",e.lookup(\"Uint32\")],[\"hash\",e.lookup(\"Hash\")]]),e.typedef(\"ProofLevel\",e.varArray(e.lookup(\"ArchivalProofNode\"),2147483647)),e.struct(\"NonexistenceProofBody\",[[\"entriesToProve\",e.varArray(e.lookup(\"ColdArchiveBucketEntry\"),2147483647)],[\"proofLevels\",e.varArray(e.lookup(\"ProofLevel\"),2147483647)]]),e.struct(\"ExistenceProofBody\",[[\"keysToProve\",e.varArray(e.lookup(\"LedgerKey\"),2147483647)],[\"lowBoundEntries\",e.varArray(e.lookup(\"ColdArchiveBucketEntry\"),2147483647)],[\"highBoundEntries\",e.varArray(e.lookup(\"ColdArchiveBucketEntry\"),2147483647)],[\"proofLevels\",e.varArray(e.lookup(\"ProofLevel\"),2147483647)]]),e.union(\"ArchivalProofBody\",{switchOn:e.lookup(\"ArchivalProofType\"),switchName:\"t\",switches:[[\"existence\",\"nonexistenceProof\"],[\"nonexistence\",\"existenceProof\"]],arms:{nonexistenceProof:e.lookup(\"NonexistenceProofBody\"),existenceProof:e.lookup(\"ExistenceProofBody\")}}),e.struct(\"ArchivalProof\",[[\"epoch\",e.lookup(\"Uint32\")],[\"body\",e.lookup(\"ArchivalProofBody\")]]),e.struct(\"SorobanResources\",[[\"footprint\",e.lookup(\"LedgerFootprint\")],[\"instructions\",e.lookup(\"Uint32\")],[\"readBytes\",e.lookup(\"Uint32\")],[\"writeBytes\",e.lookup(\"Uint32\")]]),e.struct(\"SorobanTransactionData\",[[\"ext\",e.lookup(\"ExtensionPoint\")],[\"resources\",e.lookup(\"SorobanResources\")],[\"resourceFee\",e.lookup(\"Int64\")]]),e.union(\"TransactionV0Ext\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()]],arms:{}}),e.struct(\"TransactionV0\",[[\"sourceAccountEd25519\",e.lookup(\"Uint256\")],[\"fee\",e.lookup(\"Uint32\")],[\"seqNum\",e.lookup(\"SequenceNumber\")],[\"timeBounds\",e.option(e.lookup(\"TimeBounds\"))],[\"memo\",e.lookup(\"Memo\")],[\"operations\",e.varArray(e.lookup(\"Operation\"),e.lookup(\"MAX_OPS_PER_TX\"))],[\"ext\",e.lookup(\"TransactionV0Ext\")]]),e.struct(\"TransactionV0Envelope\",[[\"tx\",e.lookup(\"TransactionV0\")],[\"signatures\",e.varArray(e.lookup(\"DecoratedSignature\"),20)]]),e.union(\"TransactionExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()],[1,\"sorobanData\"]],arms:{sorobanData:e.lookup(\"SorobanTransactionData\")}}),e.struct(\"Transaction\",[[\"sourceAccount\",e.lookup(\"MuxedAccount\")],[\"fee\",e.lookup(\"Uint32\")],[\"seqNum\",e.lookup(\"SequenceNumber\")],[\"cond\",e.lookup(\"Preconditions\")],[\"memo\",e.lookup(\"Memo\")],[\"operations\",e.varArray(e.lookup(\"Operation\"),e.lookup(\"MAX_OPS_PER_TX\"))],[\"ext\",e.lookup(\"TransactionExt\")]]),e.struct(\"TransactionV1Envelope\",[[\"tx\",e.lookup(\"Transaction\")],[\"signatures\",e.varArray(e.lookup(\"DecoratedSignature\"),20)]]),e.union(\"FeeBumpTransactionInnerTx\",{switchOn:e.lookup(\"EnvelopeType\"),switchName:\"type\",switches:[[\"envelopeTypeTx\",\"v1\"]],arms:{v1:e.lookup(\"TransactionV1Envelope\")}}),e.union(\"FeeBumpTransactionExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()]],arms:{}}),e.struct(\"FeeBumpTransaction\",[[\"feeSource\",e.lookup(\"MuxedAccount\")],[\"fee\",e.lookup(\"Int64\")],[\"innerTx\",e.lookup(\"FeeBumpTransactionInnerTx\")],[\"ext\",e.lookup(\"FeeBumpTransactionExt\")]]),e.struct(\"FeeBumpTransactionEnvelope\",[[\"tx\",e.lookup(\"FeeBumpTransaction\")],[\"signatures\",e.varArray(e.lookup(\"DecoratedSignature\"),20)]]),e.union(\"TransactionEnvelope\",{switchOn:e.lookup(\"EnvelopeType\"),switchName:\"type\",switches:[[\"envelopeTypeTxV0\",\"v0\"],[\"envelopeTypeTx\",\"v1\"],[\"envelopeTypeTxFeeBump\",\"feeBump\"]],arms:{v0:e.lookup(\"TransactionV0Envelope\"),v1:e.lookup(\"TransactionV1Envelope\"),feeBump:e.lookup(\"FeeBumpTransactionEnvelope\")}}),e.union(\"TransactionSignaturePayloadTaggedTransaction\",{switchOn:e.lookup(\"EnvelopeType\"),switchName:\"type\",switches:[[\"envelopeTypeTx\",\"tx\"],[\"envelopeTypeTxFeeBump\",\"feeBump\"]],arms:{tx:e.lookup(\"Transaction\"),feeBump:e.lookup(\"FeeBumpTransaction\")}}),e.struct(\"TransactionSignaturePayload\",[[\"networkId\",e.lookup(\"Hash\")],[\"taggedTransaction\",e.lookup(\"TransactionSignaturePayloadTaggedTransaction\")]]),e.enum(\"ClaimAtomType\",{claimAtomTypeV0:0,claimAtomTypeOrderBook:1,claimAtomTypeLiquidityPool:2}),e.struct(\"ClaimOfferAtomV0\",[[\"sellerEd25519\",e.lookup(\"Uint256\")],[\"offerId\",e.lookup(\"Int64\")],[\"assetSold\",e.lookup(\"Asset\")],[\"amountSold\",e.lookup(\"Int64\")],[\"assetBought\",e.lookup(\"Asset\")],[\"amountBought\",e.lookup(\"Int64\")]]),e.struct(\"ClaimOfferAtom\",[[\"sellerId\",e.lookup(\"AccountId\")],[\"offerId\",e.lookup(\"Int64\")],[\"assetSold\",e.lookup(\"Asset\")],[\"amountSold\",e.lookup(\"Int64\")],[\"assetBought\",e.lookup(\"Asset\")],[\"amountBought\",e.lookup(\"Int64\")]]),e.struct(\"ClaimLiquidityAtom\",[[\"liquidityPoolId\",e.lookup(\"PoolId\")],[\"assetSold\",e.lookup(\"Asset\")],[\"amountSold\",e.lookup(\"Int64\")],[\"assetBought\",e.lookup(\"Asset\")],[\"amountBought\",e.lookup(\"Int64\")]]),e.union(\"ClaimAtom\",{switchOn:e.lookup(\"ClaimAtomType\"),switchName:\"type\",switches:[[\"claimAtomTypeV0\",\"v0\"],[\"claimAtomTypeOrderBook\",\"orderBook\"],[\"claimAtomTypeLiquidityPool\",\"liquidityPool\"]],arms:{v0:e.lookup(\"ClaimOfferAtomV0\"),orderBook:e.lookup(\"ClaimOfferAtom\"),liquidityPool:e.lookup(\"ClaimLiquidityAtom\")}}),e.enum(\"CreateAccountResultCode\",{createAccountSuccess:0,createAccountMalformed:-1,createAccountUnderfunded:-2,createAccountLowReserve:-3,createAccountAlreadyExist:-4}),e.union(\"CreateAccountResult\",{switchOn:e.lookup(\"CreateAccountResultCode\"),switchName:\"code\",switches:[[\"createAccountSuccess\",e.void()],[\"createAccountMalformed\",e.void()],[\"createAccountUnderfunded\",e.void()],[\"createAccountLowReserve\",e.void()],[\"createAccountAlreadyExist\",e.void()]],arms:{}}),e.enum(\"PaymentResultCode\",{paymentSuccess:0,paymentMalformed:-1,paymentUnderfunded:-2,paymentSrcNoTrust:-3,paymentSrcNotAuthorized:-4,paymentNoDestination:-5,paymentNoTrust:-6,paymentNotAuthorized:-7,paymentLineFull:-8,paymentNoIssuer:-9}),e.union(\"PaymentResult\",{switchOn:e.lookup(\"PaymentResultCode\"),switchName:\"code\",switches:[[\"paymentSuccess\",e.void()],[\"paymentMalformed\",e.void()],[\"paymentUnderfunded\",e.void()],[\"paymentSrcNoTrust\",e.void()],[\"paymentSrcNotAuthorized\",e.void()],[\"paymentNoDestination\",e.void()],[\"paymentNoTrust\",e.void()],[\"paymentNotAuthorized\",e.void()],[\"paymentLineFull\",e.void()],[\"paymentNoIssuer\",e.void()]],arms:{}}),e.enum(\"PathPaymentStrictReceiveResultCode\",{pathPaymentStrictReceiveSuccess:0,pathPaymentStrictReceiveMalformed:-1,pathPaymentStrictReceiveUnderfunded:-2,pathPaymentStrictReceiveSrcNoTrust:-3,pathPaymentStrictReceiveSrcNotAuthorized:-4,pathPaymentStrictReceiveNoDestination:-5,pathPaymentStrictReceiveNoTrust:-6,pathPaymentStrictReceiveNotAuthorized:-7,pathPaymentStrictReceiveLineFull:-8,pathPaymentStrictReceiveNoIssuer:-9,pathPaymentStrictReceiveTooFewOffers:-10,pathPaymentStrictReceiveOfferCrossSelf:-11,pathPaymentStrictReceiveOverSendmax:-12}),e.struct(\"SimplePaymentResult\",[[\"destination\",e.lookup(\"AccountId\")],[\"asset\",e.lookup(\"Asset\")],[\"amount\",e.lookup(\"Int64\")]]),e.struct(\"PathPaymentStrictReceiveResultSuccess\",[[\"offers\",e.varArray(e.lookup(\"ClaimAtom\"),2147483647)],[\"last\",e.lookup(\"SimplePaymentResult\")]]),e.union(\"PathPaymentStrictReceiveResult\",{switchOn:e.lookup(\"PathPaymentStrictReceiveResultCode\"),switchName:\"code\",switches:[[\"pathPaymentStrictReceiveSuccess\",\"success\"],[\"pathPaymentStrictReceiveMalformed\",e.void()],[\"pathPaymentStrictReceiveUnderfunded\",e.void()],[\"pathPaymentStrictReceiveSrcNoTrust\",e.void()],[\"pathPaymentStrictReceiveSrcNotAuthorized\",e.void()],[\"pathPaymentStrictReceiveNoDestination\",e.void()],[\"pathPaymentStrictReceiveNoTrust\",e.void()],[\"pathPaymentStrictReceiveNotAuthorized\",e.void()],[\"pathPaymentStrictReceiveLineFull\",e.void()],[\"pathPaymentStrictReceiveNoIssuer\",\"noIssuer\"],[\"pathPaymentStrictReceiveTooFewOffers\",e.void()],[\"pathPaymentStrictReceiveOfferCrossSelf\",e.void()],[\"pathPaymentStrictReceiveOverSendmax\",e.void()]],arms:{success:e.lookup(\"PathPaymentStrictReceiveResultSuccess\"),noIssuer:e.lookup(\"Asset\")}}),e.enum(\"PathPaymentStrictSendResultCode\",{pathPaymentStrictSendSuccess:0,pathPaymentStrictSendMalformed:-1,pathPaymentStrictSendUnderfunded:-2,pathPaymentStrictSendSrcNoTrust:-3,pathPaymentStrictSendSrcNotAuthorized:-4,pathPaymentStrictSendNoDestination:-5,pathPaymentStrictSendNoTrust:-6,pathPaymentStrictSendNotAuthorized:-7,pathPaymentStrictSendLineFull:-8,pathPaymentStrictSendNoIssuer:-9,pathPaymentStrictSendTooFewOffers:-10,pathPaymentStrictSendOfferCrossSelf:-11,pathPaymentStrictSendUnderDestmin:-12}),e.struct(\"PathPaymentStrictSendResultSuccess\",[[\"offers\",e.varArray(e.lookup(\"ClaimAtom\"),2147483647)],[\"last\",e.lookup(\"SimplePaymentResult\")]]),e.union(\"PathPaymentStrictSendResult\",{switchOn:e.lookup(\"PathPaymentStrictSendResultCode\"),switchName:\"code\",switches:[[\"pathPaymentStrictSendSuccess\",\"success\"],[\"pathPaymentStrictSendMalformed\",e.void()],[\"pathPaymentStrictSendUnderfunded\",e.void()],[\"pathPaymentStrictSendSrcNoTrust\",e.void()],[\"pathPaymentStrictSendSrcNotAuthorized\",e.void()],[\"pathPaymentStrictSendNoDestination\",e.void()],[\"pathPaymentStrictSendNoTrust\",e.void()],[\"pathPaymentStrictSendNotAuthorized\",e.void()],[\"pathPaymentStrictSendLineFull\",e.void()],[\"pathPaymentStrictSendNoIssuer\",\"noIssuer\"],[\"pathPaymentStrictSendTooFewOffers\",e.void()],[\"pathPaymentStrictSendOfferCrossSelf\",e.void()],[\"pathPaymentStrictSendUnderDestmin\",e.void()]],arms:{success:e.lookup(\"PathPaymentStrictSendResultSuccess\"),noIssuer:e.lookup(\"Asset\")}}),e.enum(\"ManageSellOfferResultCode\",{manageSellOfferSuccess:0,manageSellOfferMalformed:-1,manageSellOfferSellNoTrust:-2,manageSellOfferBuyNoTrust:-3,manageSellOfferSellNotAuthorized:-4,manageSellOfferBuyNotAuthorized:-5,manageSellOfferLineFull:-6,manageSellOfferUnderfunded:-7,manageSellOfferCrossSelf:-8,manageSellOfferSellNoIssuer:-9,manageSellOfferBuyNoIssuer:-10,manageSellOfferNotFound:-11,manageSellOfferLowReserve:-12}),e.enum(\"ManageOfferEffect\",{manageOfferCreated:0,manageOfferUpdated:1,manageOfferDeleted:2}),e.union(\"ManageOfferSuccessResultOffer\",{switchOn:e.lookup(\"ManageOfferEffect\"),switchName:\"effect\",switches:[[\"manageOfferCreated\",\"offer\"],[\"manageOfferUpdated\",\"offer\"],[\"manageOfferDeleted\",e.void()]],arms:{offer:e.lookup(\"OfferEntry\")}}),e.struct(\"ManageOfferSuccessResult\",[[\"offersClaimed\",e.varArray(e.lookup(\"ClaimAtom\"),2147483647)],[\"offer\",e.lookup(\"ManageOfferSuccessResultOffer\")]]),e.union(\"ManageSellOfferResult\",{switchOn:e.lookup(\"ManageSellOfferResultCode\"),switchName:\"code\",switches:[[\"manageSellOfferSuccess\",\"success\"],[\"manageSellOfferMalformed\",e.void()],[\"manageSellOfferSellNoTrust\",e.void()],[\"manageSellOfferBuyNoTrust\",e.void()],[\"manageSellOfferSellNotAuthorized\",e.void()],[\"manageSellOfferBuyNotAuthorized\",e.void()],[\"manageSellOfferLineFull\",e.void()],[\"manageSellOfferUnderfunded\",e.void()],[\"manageSellOfferCrossSelf\",e.void()],[\"manageSellOfferSellNoIssuer\",e.void()],[\"manageSellOfferBuyNoIssuer\",e.void()],[\"manageSellOfferNotFound\",e.void()],[\"manageSellOfferLowReserve\",e.void()]],arms:{success:e.lookup(\"ManageOfferSuccessResult\")}}),e.enum(\"ManageBuyOfferResultCode\",{manageBuyOfferSuccess:0,manageBuyOfferMalformed:-1,manageBuyOfferSellNoTrust:-2,manageBuyOfferBuyNoTrust:-3,manageBuyOfferSellNotAuthorized:-4,manageBuyOfferBuyNotAuthorized:-5,manageBuyOfferLineFull:-6,manageBuyOfferUnderfunded:-7,manageBuyOfferCrossSelf:-8,manageBuyOfferSellNoIssuer:-9,manageBuyOfferBuyNoIssuer:-10,manageBuyOfferNotFound:-11,manageBuyOfferLowReserve:-12}),e.union(\"ManageBuyOfferResult\",{switchOn:e.lookup(\"ManageBuyOfferResultCode\"),switchName:\"code\",switches:[[\"manageBuyOfferSuccess\",\"success\"],[\"manageBuyOfferMalformed\",e.void()],[\"manageBuyOfferSellNoTrust\",e.void()],[\"manageBuyOfferBuyNoTrust\",e.void()],[\"manageBuyOfferSellNotAuthorized\",e.void()],[\"manageBuyOfferBuyNotAuthorized\",e.void()],[\"manageBuyOfferLineFull\",e.void()],[\"manageBuyOfferUnderfunded\",e.void()],[\"manageBuyOfferCrossSelf\",e.void()],[\"manageBuyOfferSellNoIssuer\",e.void()],[\"manageBuyOfferBuyNoIssuer\",e.void()],[\"manageBuyOfferNotFound\",e.void()],[\"manageBuyOfferLowReserve\",e.void()]],arms:{success:e.lookup(\"ManageOfferSuccessResult\")}}),e.enum(\"SetOptionsResultCode\",{setOptionsSuccess:0,setOptionsLowReserve:-1,setOptionsTooManySigners:-2,setOptionsBadFlags:-3,setOptionsInvalidInflation:-4,setOptionsCantChange:-5,setOptionsUnknownFlag:-6,setOptionsThresholdOutOfRange:-7,setOptionsBadSigner:-8,setOptionsInvalidHomeDomain:-9,setOptionsAuthRevocableRequired:-10}),e.union(\"SetOptionsResult\",{switchOn:e.lookup(\"SetOptionsResultCode\"),switchName:\"code\",switches:[[\"setOptionsSuccess\",e.void()],[\"setOptionsLowReserve\",e.void()],[\"setOptionsTooManySigners\",e.void()],[\"setOptionsBadFlags\",e.void()],[\"setOptionsInvalidInflation\",e.void()],[\"setOptionsCantChange\",e.void()],[\"setOptionsUnknownFlag\",e.void()],[\"setOptionsThresholdOutOfRange\",e.void()],[\"setOptionsBadSigner\",e.void()],[\"setOptionsInvalidHomeDomain\",e.void()],[\"setOptionsAuthRevocableRequired\",e.void()]],arms:{}}),e.enum(\"ChangeTrustResultCode\",{changeTrustSuccess:0,changeTrustMalformed:-1,changeTrustNoIssuer:-2,changeTrustInvalidLimit:-3,changeTrustLowReserve:-4,changeTrustSelfNotAllowed:-5,changeTrustTrustLineMissing:-6,changeTrustCannotDelete:-7,changeTrustNotAuthMaintainLiabilities:-8}),e.union(\"ChangeTrustResult\",{switchOn:e.lookup(\"ChangeTrustResultCode\"),switchName:\"code\",switches:[[\"changeTrustSuccess\",e.void()],[\"changeTrustMalformed\",e.void()],[\"changeTrustNoIssuer\",e.void()],[\"changeTrustInvalidLimit\",e.void()],[\"changeTrustLowReserve\",e.void()],[\"changeTrustSelfNotAllowed\",e.void()],[\"changeTrustTrustLineMissing\",e.void()],[\"changeTrustCannotDelete\",e.void()],[\"changeTrustNotAuthMaintainLiabilities\",e.void()]],arms:{}}),e.enum(\"AllowTrustResultCode\",{allowTrustSuccess:0,allowTrustMalformed:-1,allowTrustNoTrustLine:-2,allowTrustTrustNotRequired:-3,allowTrustCantRevoke:-4,allowTrustSelfNotAllowed:-5,allowTrustLowReserve:-6}),e.union(\"AllowTrustResult\",{switchOn:e.lookup(\"AllowTrustResultCode\"),switchName:\"code\",switches:[[\"allowTrustSuccess\",e.void()],[\"allowTrustMalformed\",e.void()],[\"allowTrustNoTrustLine\",e.void()],[\"allowTrustTrustNotRequired\",e.void()],[\"allowTrustCantRevoke\",e.void()],[\"allowTrustSelfNotAllowed\",e.void()],[\"allowTrustLowReserve\",e.void()]],arms:{}}),e.enum(\"AccountMergeResultCode\",{accountMergeSuccess:0,accountMergeMalformed:-1,accountMergeNoAccount:-2,accountMergeImmutableSet:-3,accountMergeHasSubEntries:-4,accountMergeSeqnumTooFar:-5,accountMergeDestFull:-6,accountMergeIsSponsor:-7}),e.union(\"AccountMergeResult\",{switchOn:e.lookup(\"AccountMergeResultCode\"),switchName:\"code\",switches:[[\"accountMergeSuccess\",\"sourceAccountBalance\"],[\"accountMergeMalformed\",e.void()],[\"accountMergeNoAccount\",e.void()],[\"accountMergeImmutableSet\",e.void()],[\"accountMergeHasSubEntries\",e.void()],[\"accountMergeSeqnumTooFar\",e.void()],[\"accountMergeDestFull\",e.void()],[\"accountMergeIsSponsor\",e.void()]],arms:{sourceAccountBalance:e.lookup(\"Int64\")}}),e.enum(\"InflationResultCode\",{inflationSuccess:0,inflationNotTime:-1}),e.struct(\"InflationPayout\",[[\"destination\",e.lookup(\"AccountId\")],[\"amount\",e.lookup(\"Int64\")]]),e.union(\"InflationResult\",{switchOn:e.lookup(\"InflationResultCode\"),switchName:\"code\",switches:[[\"inflationSuccess\",\"payouts\"],[\"inflationNotTime\",e.void()]],arms:{payouts:e.varArray(e.lookup(\"InflationPayout\"),2147483647)}}),e.enum(\"ManageDataResultCode\",{manageDataSuccess:0,manageDataNotSupportedYet:-1,manageDataNameNotFound:-2,manageDataLowReserve:-3,manageDataInvalidName:-4}),e.union(\"ManageDataResult\",{switchOn:e.lookup(\"ManageDataResultCode\"),switchName:\"code\",switches:[[\"manageDataSuccess\",e.void()],[\"manageDataNotSupportedYet\",e.void()],[\"manageDataNameNotFound\",e.void()],[\"manageDataLowReserve\",e.void()],[\"manageDataInvalidName\",e.void()]],arms:{}}),e.enum(\"BumpSequenceResultCode\",{bumpSequenceSuccess:0,bumpSequenceBadSeq:-1}),e.union(\"BumpSequenceResult\",{switchOn:e.lookup(\"BumpSequenceResultCode\"),switchName:\"code\",switches:[[\"bumpSequenceSuccess\",e.void()],[\"bumpSequenceBadSeq\",e.void()]],arms:{}}),e.enum(\"CreateClaimableBalanceResultCode\",{createClaimableBalanceSuccess:0,createClaimableBalanceMalformed:-1,createClaimableBalanceLowReserve:-2,createClaimableBalanceNoTrust:-3,createClaimableBalanceNotAuthorized:-4,createClaimableBalanceUnderfunded:-5}),e.union(\"CreateClaimableBalanceResult\",{switchOn:e.lookup(\"CreateClaimableBalanceResultCode\"),switchName:\"code\",switches:[[\"createClaimableBalanceSuccess\",\"balanceId\"],[\"createClaimableBalanceMalformed\",e.void()],[\"createClaimableBalanceLowReserve\",e.void()],[\"createClaimableBalanceNoTrust\",e.void()],[\"createClaimableBalanceNotAuthorized\",e.void()],[\"createClaimableBalanceUnderfunded\",e.void()]],arms:{balanceId:e.lookup(\"ClaimableBalanceId\")}}),e.enum(\"ClaimClaimableBalanceResultCode\",{claimClaimableBalanceSuccess:0,claimClaimableBalanceDoesNotExist:-1,claimClaimableBalanceCannotClaim:-2,claimClaimableBalanceLineFull:-3,claimClaimableBalanceNoTrust:-4,claimClaimableBalanceNotAuthorized:-5}),e.union(\"ClaimClaimableBalanceResult\",{switchOn:e.lookup(\"ClaimClaimableBalanceResultCode\"),switchName:\"code\",switches:[[\"claimClaimableBalanceSuccess\",e.void()],[\"claimClaimableBalanceDoesNotExist\",e.void()],[\"claimClaimableBalanceCannotClaim\",e.void()],[\"claimClaimableBalanceLineFull\",e.void()],[\"claimClaimableBalanceNoTrust\",e.void()],[\"claimClaimableBalanceNotAuthorized\",e.void()]],arms:{}}),e.enum(\"BeginSponsoringFutureReservesResultCode\",{beginSponsoringFutureReservesSuccess:0,beginSponsoringFutureReservesMalformed:-1,beginSponsoringFutureReservesAlreadySponsored:-2,beginSponsoringFutureReservesRecursive:-3}),e.union(\"BeginSponsoringFutureReservesResult\",{switchOn:e.lookup(\"BeginSponsoringFutureReservesResultCode\"),switchName:\"code\",switches:[[\"beginSponsoringFutureReservesSuccess\",e.void()],[\"beginSponsoringFutureReservesMalformed\",e.void()],[\"beginSponsoringFutureReservesAlreadySponsored\",e.void()],[\"beginSponsoringFutureReservesRecursive\",e.void()]],arms:{}}),e.enum(\"EndSponsoringFutureReservesResultCode\",{endSponsoringFutureReservesSuccess:0,endSponsoringFutureReservesNotSponsored:-1}),e.union(\"EndSponsoringFutureReservesResult\",{switchOn:e.lookup(\"EndSponsoringFutureReservesResultCode\"),switchName:\"code\",switches:[[\"endSponsoringFutureReservesSuccess\",e.void()],[\"endSponsoringFutureReservesNotSponsored\",e.void()]],arms:{}}),e.enum(\"RevokeSponsorshipResultCode\",{revokeSponsorshipSuccess:0,revokeSponsorshipDoesNotExist:-1,revokeSponsorshipNotSponsor:-2,revokeSponsorshipLowReserve:-3,revokeSponsorshipOnlyTransferable:-4,revokeSponsorshipMalformed:-5}),e.union(\"RevokeSponsorshipResult\",{switchOn:e.lookup(\"RevokeSponsorshipResultCode\"),switchName:\"code\",switches:[[\"revokeSponsorshipSuccess\",e.void()],[\"revokeSponsorshipDoesNotExist\",e.void()],[\"revokeSponsorshipNotSponsor\",e.void()],[\"revokeSponsorshipLowReserve\",e.void()],[\"revokeSponsorshipOnlyTransferable\",e.void()],[\"revokeSponsorshipMalformed\",e.void()]],arms:{}}),e.enum(\"ClawbackResultCode\",{clawbackSuccess:0,clawbackMalformed:-1,clawbackNotClawbackEnabled:-2,clawbackNoTrust:-3,clawbackUnderfunded:-4}),e.union(\"ClawbackResult\",{switchOn:e.lookup(\"ClawbackResultCode\"),switchName:\"code\",switches:[[\"clawbackSuccess\",e.void()],[\"clawbackMalformed\",e.void()],[\"clawbackNotClawbackEnabled\",e.void()],[\"clawbackNoTrust\",e.void()],[\"clawbackUnderfunded\",e.void()]],arms:{}}),e.enum(\"ClawbackClaimableBalanceResultCode\",{clawbackClaimableBalanceSuccess:0,clawbackClaimableBalanceDoesNotExist:-1,clawbackClaimableBalanceNotIssuer:-2,clawbackClaimableBalanceNotClawbackEnabled:-3}),e.union(\"ClawbackClaimableBalanceResult\",{switchOn:e.lookup(\"ClawbackClaimableBalanceResultCode\"),switchName:\"code\",switches:[[\"clawbackClaimableBalanceSuccess\",e.void()],[\"clawbackClaimableBalanceDoesNotExist\",e.void()],[\"clawbackClaimableBalanceNotIssuer\",e.void()],[\"clawbackClaimableBalanceNotClawbackEnabled\",e.void()]],arms:{}}),e.enum(\"SetTrustLineFlagsResultCode\",{setTrustLineFlagsSuccess:0,setTrustLineFlagsMalformed:-1,setTrustLineFlagsNoTrustLine:-2,setTrustLineFlagsCantRevoke:-3,setTrustLineFlagsInvalidState:-4,setTrustLineFlagsLowReserve:-5}),e.union(\"SetTrustLineFlagsResult\",{switchOn:e.lookup(\"SetTrustLineFlagsResultCode\"),switchName:\"code\",switches:[[\"setTrustLineFlagsSuccess\",e.void()],[\"setTrustLineFlagsMalformed\",e.void()],[\"setTrustLineFlagsNoTrustLine\",e.void()],[\"setTrustLineFlagsCantRevoke\",e.void()],[\"setTrustLineFlagsInvalidState\",e.void()],[\"setTrustLineFlagsLowReserve\",e.void()]],arms:{}}),e.enum(\"LiquidityPoolDepositResultCode\",{liquidityPoolDepositSuccess:0,liquidityPoolDepositMalformed:-1,liquidityPoolDepositNoTrust:-2,liquidityPoolDepositNotAuthorized:-3,liquidityPoolDepositUnderfunded:-4,liquidityPoolDepositLineFull:-5,liquidityPoolDepositBadPrice:-6,liquidityPoolDepositPoolFull:-7}),e.union(\"LiquidityPoolDepositResult\",{switchOn:e.lookup(\"LiquidityPoolDepositResultCode\"),switchName:\"code\",switches:[[\"liquidityPoolDepositSuccess\",e.void()],[\"liquidityPoolDepositMalformed\",e.void()],[\"liquidityPoolDepositNoTrust\",e.void()],[\"liquidityPoolDepositNotAuthorized\",e.void()],[\"liquidityPoolDepositUnderfunded\",e.void()],[\"liquidityPoolDepositLineFull\",e.void()],[\"liquidityPoolDepositBadPrice\",e.void()],[\"liquidityPoolDepositPoolFull\",e.void()]],arms:{}}),e.enum(\"LiquidityPoolWithdrawResultCode\",{liquidityPoolWithdrawSuccess:0,liquidityPoolWithdrawMalformed:-1,liquidityPoolWithdrawNoTrust:-2,liquidityPoolWithdrawUnderfunded:-3,liquidityPoolWithdrawLineFull:-4,liquidityPoolWithdrawUnderMinimum:-5}),e.union(\"LiquidityPoolWithdrawResult\",{switchOn:e.lookup(\"LiquidityPoolWithdrawResultCode\"),switchName:\"code\",switches:[[\"liquidityPoolWithdrawSuccess\",e.void()],[\"liquidityPoolWithdrawMalformed\",e.void()],[\"liquidityPoolWithdrawNoTrust\",e.void()],[\"liquidityPoolWithdrawUnderfunded\",e.void()],[\"liquidityPoolWithdrawLineFull\",e.void()],[\"liquidityPoolWithdrawUnderMinimum\",e.void()]],arms:{}}),e.enum(\"InvokeHostFunctionResultCode\",{invokeHostFunctionSuccess:0,invokeHostFunctionMalformed:-1,invokeHostFunctionTrapped:-2,invokeHostFunctionResourceLimitExceeded:-3,invokeHostFunctionEntryArchived:-4,invokeHostFunctionInsufficientRefundableFee:-5}),e.union(\"InvokeHostFunctionResult\",{switchOn:e.lookup(\"InvokeHostFunctionResultCode\"),switchName:\"code\",switches:[[\"invokeHostFunctionSuccess\",\"success\"],[\"invokeHostFunctionMalformed\",e.void()],[\"invokeHostFunctionTrapped\",e.void()],[\"invokeHostFunctionResourceLimitExceeded\",e.void()],[\"invokeHostFunctionEntryArchived\",e.void()],[\"invokeHostFunctionInsufficientRefundableFee\",e.void()]],arms:{success:e.lookup(\"Hash\")}}),e.enum(\"ExtendFootprintTtlResultCode\",{extendFootprintTtlSuccess:0,extendFootprintTtlMalformed:-1,extendFootprintTtlResourceLimitExceeded:-2,extendFootprintTtlInsufficientRefundableFee:-3}),e.union(\"ExtendFootprintTtlResult\",{switchOn:e.lookup(\"ExtendFootprintTtlResultCode\"),switchName:\"code\",switches:[[\"extendFootprintTtlSuccess\",e.void()],[\"extendFootprintTtlMalformed\",e.void()],[\"extendFootprintTtlResourceLimitExceeded\",e.void()],[\"extendFootprintTtlInsufficientRefundableFee\",e.void()]],arms:{}}),e.enum(\"RestoreFootprintResultCode\",{restoreFootprintSuccess:0,restoreFootprintMalformed:-1,restoreFootprintResourceLimitExceeded:-2,restoreFootprintInsufficientRefundableFee:-3}),e.union(\"RestoreFootprintResult\",{switchOn:e.lookup(\"RestoreFootprintResultCode\"),switchName:\"code\",switches:[[\"restoreFootprintSuccess\",e.void()],[\"restoreFootprintMalformed\",e.void()],[\"restoreFootprintResourceLimitExceeded\",e.void()],[\"restoreFootprintInsufficientRefundableFee\",e.void()]],arms:{}}),e.enum(\"OperationResultCode\",{opInner:0,opBadAuth:-1,opNoAccount:-2,opNotSupported:-3,opTooManySubentries:-4,opExceededWorkLimit:-5,opTooManySponsoring:-6}),e.union(\"OperationResultTr\",{switchOn:e.lookup(\"OperationType\"),switchName:\"type\",switches:[[\"createAccount\",\"createAccountResult\"],[\"payment\",\"paymentResult\"],[\"pathPaymentStrictReceive\",\"pathPaymentStrictReceiveResult\"],[\"manageSellOffer\",\"manageSellOfferResult\"],[\"createPassiveSellOffer\",\"createPassiveSellOfferResult\"],[\"setOptions\",\"setOptionsResult\"],[\"changeTrust\",\"changeTrustResult\"],[\"allowTrust\",\"allowTrustResult\"],[\"accountMerge\",\"accountMergeResult\"],[\"inflation\",\"inflationResult\"],[\"manageData\",\"manageDataResult\"],[\"bumpSequence\",\"bumpSeqResult\"],[\"manageBuyOffer\",\"manageBuyOfferResult\"],[\"pathPaymentStrictSend\",\"pathPaymentStrictSendResult\"],[\"createClaimableBalance\",\"createClaimableBalanceResult\"],[\"claimClaimableBalance\",\"claimClaimableBalanceResult\"],[\"beginSponsoringFutureReserves\",\"beginSponsoringFutureReservesResult\"],[\"endSponsoringFutureReserves\",\"endSponsoringFutureReservesResult\"],[\"revokeSponsorship\",\"revokeSponsorshipResult\"],[\"clawback\",\"clawbackResult\"],[\"clawbackClaimableBalance\",\"clawbackClaimableBalanceResult\"],[\"setTrustLineFlags\",\"setTrustLineFlagsResult\"],[\"liquidityPoolDeposit\",\"liquidityPoolDepositResult\"],[\"liquidityPoolWithdraw\",\"liquidityPoolWithdrawResult\"],[\"invokeHostFunction\",\"invokeHostFunctionResult\"],[\"extendFootprintTtl\",\"extendFootprintTtlResult\"],[\"restoreFootprint\",\"restoreFootprintResult\"]],arms:{createAccountResult:e.lookup(\"CreateAccountResult\"),paymentResult:e.lookup(\"PaymentResult\"),pathPaymentStrictReceiveResult:e.lookup(\"PathPaymentStrictReceiveResult\"),manageSellOfferResult:e.lookup(\"ManageSellOfferResult\"),createPassiveSellOfferResult:e.lookup(\"ManageSellOfferResult\"),setOptionsResult:e.lookup(\"SetOptionsResult\"),changeTrustResult:e.lookup(\"ChangeTrustResult\"),allowTrustResult:e.lookup(\"AllowTrustResult\"),accountMergeResult:e.lookup(\"AccountMergeResult\"),inflationResult:e.lookup(\"InflationResult\"),manageDataResult:e.lookup(\"ManageDataResult\"),bumpSeqResult:e.lookup(\"BumpSequenceResult\"),manageBuyOfferResult:e.lookup(\"ManageBuyOfferResult\"),pathPaymentStrictSendResult:e.lookup(\"PathPaymentStrictSendResult\"),createClaimableBalanceResult:e.lookup(\"CreateClaimableBalanceResult\"),claimClaimableBalanceResult:e.lookup(\"ClaimClaimableBalanceResult\"),beginSponsoringFutureReservesResult:e.lookup(\"BeginSponsoringFutureReservesResult\"),endSponsoringFutureReservesResult:e.lookup(\"EndSponsoringFutureReservesResult\"),revokeSponsorshipResult:e.lookup(\"RevokeSponsorshipResult\"),clawbackResult:e.lookup(\"ClawbackResult\"),clawbackClaimableBalanceResult:e.lookup(\"ClawbackClaimableBalanceResult\"),setTrustLineFlagsResult:e.lookup(\"SetTrustLineFlagsResult\"),liquidityPoolDepositResult:e.lookup(\"LiquidityPoolDepositResult\"),liquidityPoolWithdrawResult:e.lookup(\"LiquidityPoolWithdrawResult\"),invokeHostFunctionResult:e.lookup(\"InvokeHostFunctionResult\"),extendFootprintTtlResult:e.lookup(\"ExtendFootprintTtlResult\"),restoreFootprintResult:e.lookup(\"RestoreFootprintResult\")}}),e.union(\"OperationResult\",{switchOn:e.lookup(\"OperationResultCode\"),switchName:\"code\",switches:[[\"opInner\",\"tr\"],[\"opBadAuth\",e.void()],[\"opNoAccount\",e.void()],[\"opNotSupported\",e.void()],[\"opTooManySubentries\",e.void()],[\"opExceededWorkLimit\",e.void()],[\"opTooManySponsoring\",e.void()]],arms:{tr:e.lookup(\"OperationResultTr\")}}),e.enum(\"TransactionResultCode\",{txFeeBumpInnerSuccess:1,txSuccess:0,txFailed:-1,txTooEarly:-2,txTooLate:-3,txMissingOperation:-4,txBadSeq:-5,txBadAuth:-6,txInsufficientBalance:-7,txNoAccount:-8,txInsufficientFee:-9,txBadAuthExtra:-10,txInternalError:-11,txNotSupported:-12,txFeeBumpInnerFailed:-13,txBadSponsorship:-14,txBadMinSeqAgeOrGap:-15,txMalformed:-16,txSorobanInvalid:-17}),e.union(\"InnerTransactionResultResult\",{switchOn:e.lookup(\"TransactionResultCode\"),switchName:\"code\",switches:[[\"txSuccess\",\"results\"],[\"txFailed\",\"results\"],[\"txTooEarly\",e.void()],[\"txTooLate\",e.void()],[\"txMissingOperation\",e.void()],[\"txBadSeq\",e.void()],[\"txBadAuth\",e.void()],[\"txInsufficientBalance\",e.void()],[\"txNoAccount\",e.void()],[\"txInsufficientFee\",e.void()],[\"txBadAuthExtra\",e.void()],[\"txInternalError\",e.void()],[\"txNotSupported\",e.void()],[\"txBadSponsorship\",e.void()],[\"txBadMinSeqAgeOrGap\",e.void()],[\"txMalformed\",e.void()],[\"txSorobanInvalid\",e.void()]],arms:{results:e.varArray(e.lookup(\"OperationResult\"),2147483647)}}),e.union(\"InnerTransactionResultExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()]],arms:{}}),e.struct(\"InnerTransactionResult\",[[\"feeCharged\",e.lookup(\"Int64\")],[\"result\",e.lookup(\"InnerTransactionResultResult\")],[\"ext\",e.lookup(\"InnerTransactionResultExt\")]]),e.struct(\"InnerTransactionResultPair\",[[\"transactionHash\",e.lookup(\"Hash\")],[\"result\",e.lookup(\"InnerTransactionResult\")]]),e.union(\"TransactionResultResult\",{switchOn:e.lookup(\"TransactionResultCode\"),switchName:\"code\",switches:[[\"txFeeBumpInnerSuccess\",\"innerResultPair\"],[\"txFeeBumpInnerFailed\",\"innerResultPair\"],[\"txSuccess\",\"results\"],[\"txFailed\",\"results\"],[\"txTooEarly\",e.void()],[\"txTooLate\",e.void()],[\"txMissingOperation\",e.void()],[\"txBadSeq\",e.void()],[\"txBadAuth\",e.void()],[\"txInsufficientBalance\",e.void()],[\"txNoAccount\",e.void()],[\"txInsufficientFee\",e.void()],[\"txBadAuthExtra\",e.void()],[\"txInternalError\",e.void()],[\"txNotSupported\",e.void()],[\"txBadSponsorship\",e.void()],[\"txBadMinSeqAgeOrGap\",e.void()],[\"txMalformed\",e.void()],[\"txSorobanInvalid\",e.void()]],arms:{innerResultPair:e.lookup(\"InnerTransactionResultPair\"),results:e.varArray(e.lookup(\"OperationResult\"),2147483647)}}),e.union(\"TransactionResultExt\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()]],arms:{}}),e.struct(\"TransactionResult\",[[\"feeCharged\",e.lookup(\"Int64\")],[\"result\",e.lookup(\"TransactionResultResult\")],[\"ext\",e.lookup(\"TransactionResultExt\")]]),e.typedef(\"Hash\",e.opaque(32)),e.typedef(\"Uint256\",e.opaque(32)),e.typedef(\"Uint32\",e.uint()),e.typedef(\"Int32\",e.int()),e.typedef(\"Uint64\",e.uhyper()),e.typedef(\"Int64\",e.hyper()),e.typedef(\"TimePoint\",e.lookup(\"Uint64\")),e.typedef(\"Duration\",e.lookup(\"Uint64\")),e.union(\"ExtensionPoint\",{switchOn:e.int(),switchName:\"v\",switches:[[0,e.void()]],arms:{}}),e.enum(\"CryptoKeyType\",{keyTypeEd25519:0,keyTypePreAuthTx:1,keyTypeHashX:2,keyTypeEd25519SignedPayload:3,keyTypeMuxedEd25519:256}),e.enum(\"PublicKeyType\",{publicKeyTypeEd25519:0}),e.enum(\"SignerKeyType\",{signerKeyTypeEd25519:0,signerKeyTypePreAuthTx:1,signerKeyTypeHashX:2,signerKeyTypeEd25519SignedPayload:3}),e.union(\"PublicKey\",{switchOn:e.lookup(\"PublicKeyType\"),switchName:\"type\",switches:[[\"publicKeyTypeEd25519\",\"ed25519\"]],arms:{ed25519:e.lookup(\"Uint256\")}}),e.struct(\"SignerKeyEd25519SignedPayload\",[[\"ed25519\",e.lookup(\"Uint256\")],[\"payload\",e.varOpaque(64)]]),e.union(\"SignerKey\",{switchOn:e.lookup(\"SignerKeyType\"),switchName:\"type\",switches:[[\"signerKeyTypeEd25519\",\"ed25519\"],[\"signerKeyTypePreAuthTx\",\"preAuthTx\"],[\"signerKeyTypeHashX\",\"hashX\"],[\"signerKeyTypeEd25519SignedPayload\",\"ed25519SignedPayload\"]],arms:{ed25519:e.lookup(\"Uint256\"),preAuthTx:e.lookup(\"Uint256\"),hashX:e.lookup(\"Uint256\"),ed25519SignedPayload:e.lookup(\"SignerKeyEd25519SignedPayload\")}}),e.typedef(\"Signature\",e.varOpaque(64)),e.typedef(\"SignatureHint\",e.opaque(4)),e.typedef(\"NodeId\",e.lookup(\"PublicKey\")),e.typedef(\"AccountId\",e.lookup(\"PublicKey\")),e.struct(\"Curve25519Secret\",[[\"key\",e.opaque(32)]]),e.struct(\"Curve25519Public\",[[\"key\",e.opaque(32)]]),e.struct(\"HmacSha256Key\",[[\"key\",e.opaque(32)]]),e.struct(\"HmacSha256Mac\",[[\"mac\",e.opaque(32)]]),e.struct(\"ShortHashSeed\",[[\"seed\",e.opaque(16)]]),e.enum(\"BinaryFuseFilterType\",{binaryFuseFilter8Bit:0,binaryFuseFilter16Bit:1,binaryFuseFilter32Bit:2}),e.struct(\"SerializedBinaryFuseFilter\",[[\"type\",e.lookup(\"BinaryFuseFilterType\")],[\"inputHashSeed\",e.lookup(\"ShortHashSeed\")],[\"filterSeed\",e.lookup(\"ShortHashSeed\")],[\"segmentLength\",e.lookup(\"Uint32\")],[\"segementLengthMask\",e.lookup(\"Uint32\")],[\"segmentCount\",e.lookup(\"Uint32\")],[\"segmentCountLength\",e.lookup(\"Uint32\")],[\"fingerprintLength\",e.lookup(\"Uint32\")],[\"fingerprints\",e.varOpaque()]]),e.enum(\"ScValType\",{scvBool:0,scvVoid:1,scvError:2,scvU32:3,scvI32:4,scvU64:5,scvI64:6,scvTimepoint:7,scvDuration:8,scvU128:9,scvI128:10,scvU256:11,scvI256:12,scvBytes:13,scvString:14,scvSymbol:15,scvVec:16,scvMap:17,scvAddress:18,scvContractInstance:19,scvLedgerKeyContractInstance:20,scvLedgerKeyNonce:21}),e.enum(\"ScErrorType\",{sceContract:0,sceWasmVm:1,sceContext:2,sceStorage:3,sceObject:4,sceCrypto:5,sceEvents:6,sceBudget:7,sceValue:8,sceAuth:9}),e.enum(\"ScErrorCode\",{scecArithDomain:0,scecIndexBounds:1,scecInvalidInput:2,scecMissingValue:3,scecExistingValue:4,scecExceededLimit:5,scecInvalidAction:6,scecInternalError:7,scecUnexpectedType:8,scecUnexpectedSize:9}),e.union(\"ScError\",{switchOn:e.lookup(\"ScErrorType\"),switchName:\"type\",switches:[[\"sceContract\",\"contractCode\"],[\"sceWasmVm\",\"code\"],[\"sceContext\",\"code\"],[\"sceStorage\",\"code\"],[\"sceObject\",\"code\"],[\"sceCrypto\",\"code\"],[\"sceEvents\",\"code\"],[\"sceBudget\",\"code\"],[\"sceValue\",\"code\"],[\"sceAuth\",\"code\"]],arms:{contractCode:e.lookup(\"Uint32\"),code:e.lookup(\"ScErrorCode\")}}),e.struct(\"UInt128Parts\",[[\"hi\",e.lookup(\"Uint64\")],[\"lo\",e.lookup(\"Uint64\")]]),e.struct(\"Int128Parts\",[[\"hi\",e.lookup(\"Int64\")],[\"lo\",e.lookup(\"Uint64\")]]),e.struct(\"UInt256Parts\",[[\"hiHi\",e.lookup(\"Uint64\")],[\"hiLo\",e.lookup(\"Uint64\")],[\"loHi\",e.lookup(\"Uint64\")],[\"loLo\",e.lookup(\"Uint64\")]]),e.struct(\"Int256Parts\",[[\"hiHi\",e.lookup(\"Int64\")],[\"hiLo\",e.lookup(\"Uint64\")],[\"loHi\",e.lookup(\"Uint64\")],[\"loLo\",e.lookup(\"Uint64\")]]),e.enum(\"ContractExecutableType\",{contractExecutableWasm:0,contractExecutableStellarAsset:1}),e.union(\"ContractExecutable\",{switchOn:e.lookup(\"ContractExecutableType\"),switchName:\"type\",switches:[[\"contractExecutableWasm\",\"wasmHash\"],[\"contractExecutableStellarAsset\",e.void()]],arms:{wasmHash:e.lookup(\"Hash\")}}),e.enum(\"ScAddressType\",{scAddressTypeAccount:0,scAddressTypeContract:1}),e.union(\"ScAddress\",{switchOn:e.lookup(\"ScAddressType\"),switchName:\"type\",switches:[[\"scAddressTypeAccount\",\"accountId\"],[\"scAddressTypeContract\",\"contractId\"]],arms:{accountId:e.lookup(\"AccountId\"),contractId:e.lookup(\"Hash\")}}),e.const(\"SCSYMBOL_LIMIT\",32),e.typedef(\"ScVec\",e.varArray(e.lookup(\"ScVal\"),2147483647)),e.typedef(\"ScMap\",e.varArray(e.lookup(\"ScMapEntry\"),2147483647)),e.typedef(\"ScBytes\",e.varOpaque()),e.typedef(\"ScString\",e.string()),e.typedef(\"ScSymbol\",e.string(32)),e.struct(\"ScNonceKey\",[[\"nonce\",e.lookup(\"Int64\")]]),e.struct(\"ScContractInstance\",[[\"executable\",e.lookup(\"ContractExecutable\")],[\"storage\",e.option(e.lookup(\"ScMap\"))]]),e.union(\"ScVal\",{switchOn:e.lookup(\"ScValType\"),switchName:\"type\",switches:[[\"scvBool\",\"b\"],[\"scvVoid\",e.void()],[\"scvError\",\"error\"],[\"scvU32\",\"u32\"],[\"scvI32\",\"i32\"],[\"scvU64\",\"u64\"],[\"scvI64\",\"i64\"],[\"scvTimepoint\",\"timepoint\"],[\"scvDuration\",\"duration\"],[\"scvU128\",\"u128\"],[\"scvI128\",\"i128\"],[\"scvU256\",\"u256\"],[\"scvI256\",\"i256\"],[\"scvBytes\",\"bytes\"],[\"scvString\",\"str\"],[\"scvSymbol\",\"sym\"],[\"scvVec\",\"vec\"],[\"scvMap\",\"map\"],[\"scvAddress\",\"address\"],[\"scvLedgerKeyContractInstance\",e.void()],[\"scvLedgerKeyNonce\",\"nonceKey\"],[\"scvContractInstance\",\"instance\"]],arms:{b:e.bool(),error:e.lookup(\"ScError\"),u32:e.lookup(\"Uint32\"),i32:e.lookup(\"Int32\"),u64:e.lookup(\"Uint64\"),i64:e.lookup(\"Int64\"),timepoint:e.lookup(\"TimePoint\"),duration:e.lookup(\"Duration\"),u128:e.lookup(\"UInt128Parts\"),i128:e.lookup(\"Int128Parts\"),u256:e.lookup(\"UInt256Parts\"),i256:e.lookup(\"Int256Parts\"),bytes:e.lookup(\"ScBytes\"),str:e.lookup(\"ScString\"),sym:e.lookup(\"ScSymbol\"),vec:e.option(e.lookup(\"ScVec\")),map:e.option(e.lookup(\"ScMap\")),address:e.lookup(\"ScAddress\"),nonceKey:e.lookup(\"ScNonceKey\"),instance:e.lookup(\"ScContractInstance\")}}),e.struct(\"ScMapEntry\",[[\"key\",e.lookup(\"ScVal\")],[\"val\",e.lookup(\"ScVal\")]]),e.enum(\"ScEnvMetaKind\",{scEnvMetaKindInterfaceVersion:0}),e.struct(\"ScEnvMetaEntryInterfaceVersion\",[[\"protocol\",e.lookup(\"Uint32\")],[\"preRelease\",e.lookup(\"Uint32\")]]),e.union(\"ScEnvMetaEntry\",{switchOn:e.lookup(\"ScEnvMetaKind\"),switchName:\"kind\",switches:[[\"scEnvMetaKindInterfaceVersion\",\"interfaceVersion\"]],arms:{interfaceVersion:e.lookup(\"ScEnvMetaEntryInterfaceVersion\")}}),e.struct(\"ScMetaV0\",[[\"key\",e.string()],[\"val\",e.string()]]),e.enum(\"ScMetaKind\",{scMetaV0:0}),e.union(\"ScMetaEntry\",{switchOn:e.lookup(\"ScMetaKind\"),switchName:\"kind\",switches:[[\"scMetaV0\",\"v0\"]],arms:{v0:e.lookup(\"ScMetaV0\")}}),e.const(\"SC_SPEC_DOC_LIMIT\",1024),e.enum(\"ScSpecType\",{scSpecTypeVal:0,scSpecTypeBool:1,scSpecTypeVoid:2,scSpecTypeError:3,scSpecTypeU32:4,scSpecTypeI32:5,scSpecTypeU64:6,scSpecTypeI64:7,scSpecTypeTimepoint:8,scSpecTypeDuration:9,scSpecTypeU128:10,scSpecTypeI128:11,scSpecTypeU256:12,scSpecTypeI256:13,scSpecTypeBytes:14,scSpecTypeString:16,scSpecTypeSymbol:17,scSpecTypeAddress:19,scSpecTypeOption:1e3,scSpecTypeResult:1001,scSpecTypeVec:1002,scSpecTypeMap:1004,scSpecTypeTuple:1005,scSpecTypeBytesN:1006,scSpecTypeUdt:2e3}),e.struct(\"ScSpecTypeOption\",[[\"valueType\",e.lookup(\"ScSpecTypeDef\")]]),e.struct(\"ScSpecTypeResult\",[[\"okType\",e.lookup(\"ScSpecTypeDef\")],[\"errorType\",e.lookup(\"ScSpecTypeDef\")]]),e.struct(\"ScSpecTypeVec\",[[\"elementType\",e.lookup(\"ScSpecTypeDef\")]]),e.struct(\"ScSpecTypeMap\",[[\"keyType\",e.lookup(\"ScSpecTypeDef\")],[\"valueType\",e.lookup(\"ScSpecTypeDef\")]]),e.struct(\"ScSpecTypeTuple\",[[\"valueTypes\",e.varArray(e.lookup(\"ScSpecTypeDef\"),12)]]),e.struct(\"ScSpecTypeBytesN\",[[\"n\",e.lookup(\"Uint32\")]]),e.struct(\"ScSpecTypeUdt\",[[\"name\",e.string(60)]]),e.union(\"ScSpecTypeDef\",{switchOn:e.lookup(\"ScSpecType\"),switchName:\"type\",switches:[[\"scSpecTypeVal\",e.void()],[\"scSpecTypeBool\",e.void()],[\"scSpecTypeVoid\",e.void()],[\"scSpecTypeError\",e.void()],[\"scSpecTypeU32\",e.void()],[\"scSpecTypeI32\",e.void()],[\"scSpecTypeU64\",e.void()],[\"scSpecTypeI64\",e.void()],[\"scSpecTypeTimepoint\",e.void()],[\"scSpecTypeDuration\",e.void()],[\"scSpecTypeU128\",e.void()],[\"scSpecTypeI128\",e.void()],[\"scSpecTypeU256\",e.void()],[\"scSpecTypeI256\",e.void()],[\"scSpecTypeBytes\",e.void()],[\"scSpecTypeString\",e.void()],[\"scSpecTypeSymbol\",e.void()],[\"scSpecTypeAddress\",e.void()],[\"scSpecTypeOption\",\"option\"],[\"scSpecTypeResult\",\"result\"],[\"scSpecTypeVec\",\"vec\"],[\"scSpecTypeMap\",\"map\"],[\"scSpecTypeTuple\",\"tuple\"],[\"scSpecTypeBytesN\",\"bytesN\"],[\"scSpecTypeUdt\",\"udt\"]],arms:{option:e.lookup(\"ScSpecTypeOption\"),result:e.lookup(\"ScSpecTypeResult\"),vec:e.lookup(\"ScSpecTypeVec\"),map:e.lookup(\"ScSpecTypeMap\"),tuple:e.lookup(\"ScSpecTypeTuple\"),bytesN:e.lookup(\"ScSpecTypeBytesN\"),udt:e.lookup(\"ScSpecTypeUdt\")}}),e.struct(\"ScSpecUdtStructFieldV0\",[[\"doc\",e.string(t)],[\"name\",e.string(30)],[\"type\",e.lookup(\"ScSpecTypeDef\")]]),e.struct(\"ScSpecUdtStructV0\",[[\"doc\",e.string(t)],[\"lib\",e.string(80)],[\"name\",e.string(60)],[\"fields\",e.varArray(e.lookup(\"ScSpecUdtStructFieldV0\"),40)]]),e.struct(\"ScSpecUdtUnionCaseVoidV0\",[[\"doc\",e.string(t)],[\"name\",e.string(60)]]),e.struct(\"ScSpecUdtUnionCaseTupleV0\",[[\"doc\",e.string(t)],[\"name\",e.string(60)],[\"type\",e.varArray(e.lookup(\"ScSpecTypeDef\"),12)]]),e.enum(\"ScSpecUdtUnionCaseV0Kind\",{scSpecUdtUnionCaseVoidV0:0,scSpecUdtUnionCaseTupleV0:1}),e.union(\"ScSpecUdtUnionCaseV0\",{switchOn:e.lookup(\"ScSpecUdtUnionCaseV0Kind\"),switchName:\"kind\",switches:[[\"scSpecUdtUnionCaseVoidV0\",\"voidCase\"],[\"scSpecUdtUnionCaseTupleV0\",\"tupleCase\"]],arms:{voidCase:e.lookup(\"ScSpecUdtUnionCaseVoidV0\"),tupleCase:e.lookup(\"ScSpecUdtUnionCaseTupleV0\")}}),e.struct(\"ScSpecUdtUnionV0\",[[\"doc\",e.string(t)],[\"lib\",e.string(80)],[\"name\",e.string(60)],[\"cases\",e.varArray(e.lookup(\"ScSpecUdtUnionCaseV0\"),50)]]),e.struct(\"ScSpecUdtEnumCaseV0\",[[\"doc\",e.string(t)],[\"name\",e.string(60)],[\"value\",e.lookup(\"Uint32\")]]),e.struct(\"ScSpecUdtEnumV0\",[[\"doc\",e.string(t)],[\"lib\",e.string(80)],[\"name\",e.string(60)],[\"cases\",e.varArray(e.lookup(\"ScSpecUdtEnumCaseV0\"),50)]]),e.struct(\"ScSpecUdtErrorEnumCaseV0\",[[\"doc\",e.string(t)],[\"name\",e.string(60)],[\"value\",e.lookup(\"Uint32\")]]),e.struct(\"ScSpecUdtErrorEnumV0\",[[\"doc\",e.string(t)],[\"lib\",e.string(80)],[\"name\",e.string(60)],[\"cases\",e.varArray(e.lookup(\"ScSpecUdtErrorEnumCaseV0\"),50)]]),e.struct(\"ScSpecFunctionInputV0\",[[\"doc\",e.string(t)],[\"name\",e.string(30)],[\"type\",e.lookup(\"ScSpecTypeDef\")]]),e.struct(\"ScSpecFunctionV0\",[[\"doc\",e.string(t)],[\"name\",e.lookup(\"ScSymbol\")],[\"inputs\",e.varArray(e.lookup(\"ScSpecFunctionInputV0\"),10)],[\"outputs\",e.varArray(e.lookup(\"ScSpecTypeDef\"),1)]]),e.enum(\"ScSpecEntryKind\",{scSpecEntryFunctionV0:0,scSpecEntryUdtStructV0:1,scSpecEntryUdtUnionV0:2,scSpecEntryUdtEnumV0:3,scSpecEntryUdtErrorEnumV0:4}),e.union(\"ScSpecEntry\",{switchOn:e.lookup(\"ScSpecEntryKind\"),switchName:\"kind\",switches:[[\"scSpecEntryFunctionV0\",\"functionV0\"],[\"scSpecEntryUdtStructV0\",\"udtStructV0\"],[\"scSpecEntryUdtUnionV0\",\"udtUnionV0\"],[\"scSpecEntryUdtEnumV0\",\"udtEnumV0\"],[\"scSpecEntryUdtErrorEnumV0\",\"udtErrorEnumV0\"]],arms:{functionV0:e.lookup(\"ScSpecFunctionV0\"),udtStructV0:e.lookup(\"ScSpecUdtStructV0\"),udtUnionV0:e.lookup(\"ScSpecUdtUnionV0\"),udtEnumV0:e.lookup(\"ScSpecUdtEnumV0\"),udtErrorEnumV0:e.lookup(\"ScSpecUdtErrorEnumV0\")}}),e.struct(\"ConfigSettingContractExecutionLanesV0\",[[\"ledgerMaxTxCount\",e.lookup(\"Uint32\")]]),e.struct(\"ConfigSettingContractComputeV0\",[[\"ledgerMaxInstructions\",e.lookup(\"Int64\")],[\"txMaxInstructions\",e.lookup(\"Int64\")],[\"feeRatePerInstructionsIncrement\",e.lookup(\"Int64\")],[\"txMemoryLimit\",e.lookup(\"Uint32\")]]),e.struct(\"ConfigSettingContractLedgerCostV0\",[[\"ledgerMaxReadLedgerEntries\",e.lookup(\"Uint32\")],[\"ledgerMaxReadBytes\",e.lookup(\"Uint32\")],[\"ledgerMaxWriteLedgerEntries\",e.lookup(\"Uint32\")],[\"ledgerMaxWriteBytes\",e.lookup(\"Uint32\")],[\"txMaxReadLedgerEntries\",e.lookup(\"Uint32\")],[\"txMaxReadBytes\",e.lookup(\"Uint32\")],[\"txMaxWriteLedgerEntries\",e.lookup(\"Uint32\")],[\"txMaxWriteBytes\",e.lookup(\"Uint32\")],[\"feeReadLedgerEntry\",e.lookup(\"Int64\")],[\"feeWriteLedgerEntry\",e.lookup(\"Int64\")],[\"feeRead1Kb\",e.lookup(\"Int64\")],[\"bucketListTargetSizeBytes\",e.lookup(\"Int64\")],[\"writeFee1KbBucketListLow\",e.lookup(\"Int64\")],[\"writeFee1KbBucketListHigh\",e.lookup(\"Int64\")],[\"bucketListWriteFeeGrowthFactor\",e.lookup(\"Uint32\")]]),e.struct(\"ConfigSettingContractHistoricalDataV0\",[[\"feeHistorical1Kb\",e.lookup(\"Int64\")]]),e.struct(\"ConfigSettingContractEventsV0\",[[\"txMaxContractEventsSizeBytes\",e.lookup(\"Uint32\")],[\"feeContractEvents1Kb\",e.lookup(\"Int64\")]]),e.struct(\"ConfigSettingContractBandwidthV0\",[[\"ledgerMaxTxsSizeBytes\",e.lookup(\"Uint32\")],[\"txMaxSizeBytes\",e.lookup(\"Uint32\")],[\"feeTxSize1Kb\",e.lookup(\"Int64\")]]),e.enum(\"ContractCostType\",{wasmInsnExec:0,memAlloc:1,memCpy:2,memCmp:3,dispatchHostFunction:4,visitObject:5,valSer:6,valDeser:7,computeSha256Hash:8,computeEd25519PubKey:9,verifyEd25519Sig:10,vmInstantiation:11,vmCachedInstantiation:12,invokeVmFunction:13,computeKeccak256Hash:14,decodeEcdsaCurve256Sig:15,recoverEcdsaSecp256k1Key:16,int256AddSub:17,int256Mul:18,int256Div:19,int256Pow:20,int256Shift:21,chaCha20DrawBytes:22,parseWasmInstructions:23,parseWasmFunctions:24,parseWasmGlobals:25,parseWasmTableEntries:26,parseWasmTypes:27,parseWasmDataSegments:28,parseWasmElemSegments:29,parseWasmImports:30,parseWasmExports:31,parseWasmDataSegmentBytes:32,instantiateWasmInstructions:33,instantiateWasmFunctions:34,instantiateWasmGlobals:35,instantiateWasmTableEntries:36,instantiateWasmTypes:37,instantiateWasmDataSegments:38,instantiateWasmElemSegments:39,instantiateWasmImports:40,instantiateWasmExports:41,instantiateWasmDataSegmentBytes:42,sec1DecodePointUncompressed:43,verifyEcdsaSecp256r1Sig:44,bls12381EncodeFp:45,bls12381DecodeFp:46,bls12381G1CheckPointOnCurve:47,bls12381G1CheckPointInSubgroup:48,bls12381G2CheckPointOnCurve:49,bls12381G2CheckPointInSubgroup:50,bls12381G1ProjectiveToAffine:51,bls12381G2ProjectiveToAffine:52,bls12381G1Add:53,bls12381G1Mul:54,bls12381G1Msm:55,bls12381MapFpToG1:56,bls12381HashToG1:57,bls12381G2Add:58,bls12381G2Mul:59,bls12381G2Msm:60,bls12381MapFp2ToG2:61,bls12381HashToG2:62,bls12381Pairing:63,bls12381FrFromU256:64,bls12381FrToU256:65,bls12381FrAddSub:66,bls12381FrMul:67,bls12381FrPow:68,bls12381FrInv:69}),e.struct(\"ContractCostParamEntry\",[[\"ext\",e.lookup(\"ExtensionPoint\")],[\"constTerm\",e.lookup(\"Int64\")],[\"linearTerm\",e.lookup(\"Int64\")]]),e.struct(\"StateArchivalSettings\",[[\"maxEntryTtl\",e.lookup(\"Uint32\")],[\"minTemporaryTtl\",e.lookup(\"Uint32\")],[\"minPersistentTtl\",e.lookup(\"Uint32\")],[\"persistentRentRateDenominator\",e.lookup(\"Int64\")],[\"tempRentRateDenominator\",e.lookup(\"Int64\")],[\"maxEntriesToArchive\",e.lookup(\"Uint32\")],[\"bucketListSizeWindowSampleSize\",e.lookup(\"Uint32\")],[\"bucketListWindowSamplePeriod\",e.lookup(\"Uint32\")],[\"evictionScanSize\",e.lookup(\"Uint32\")],[\"startingEvictionScanLevel\",e.lookup(\"Uint32\")]]),e.struct(\"EvictionIterator\",[[\"bucketListLevel\",e.lookup(\"Uint32\")],[\"isCurrBucket\",e.bool()],[\"bucketFileOffset\",e.lookup(\"Uint64\")]]),e.const(\"CONTRACT_COST_COUNT_LIMIT\",1024),e.typedef(\"ContractCostParams\",e.varArray(e.lookup(\"ContractCostParamEntry\"),e.lookup(\"CONTRACT_COST_COUNT_LIMIT\"))),e.enum(\"ConfigSettingId\",{configSettingContractMaxSizeBytes:0,configSettingContractComputeV0:1,configSettingContractLedgerCostV0:2,configSettingContractHistoricalDataV0:3,configSettingContractEventsV0:4,configSettingContractBandwidthV0:5,configSettingContractCostParamsCpuInstructions:6,configSettingContractCostParamsMemoryBytes:7,configSettingContractDataKeySizeBytes:8,configSettingContractDataEntrySizeBytes:9,configSettingStateArchival:10,configSettingContractExecutionLanes:11,configSettingBucketlistSizeWindow:12,configSettingEvictionIterator:13}),e.union(\"ConfigSettingEntry\",{switchOn:e.lookup(\"ConfigSettingId\"),switchName:\"configSettingId\",switches:[[\"configSettingContractMaxSizeBytes\",\"contractMaxSizeBytes\"],[\"configSettingContractComputeV0\",\"contractCompute\"],[\"configSettingContractLedgerCostV0\",\"contractLedgerCost\"],[\"configSettingContractHistoricalDataV0\",\"contractHistoricalData\"],[\"configSettingContractEventsV0\",\"contractEvents\"],[\"configSettingContractBandwidthV0\",\"contractBandwidth\"],[\"configSettingContractCostParamsCpuInstructions\",\"contractCostParamsCpuInsns\"],[\"configSettingContractCostParamsMemoryBytes\",\"contractCostParamsMemBytes\"],[\"configSettingContractDataKeySizeBytes\",\"contractDataKeySizeBytes\"],[\"configSettingContractDataEntrySizeBytes\",\"contractDataEntrySizeBytes\"],[\"configSettingStateArchival\",\"stateArchivalSettings\"],[\"configSettingContractExecutionLanes\",\"contractExecutionLanes\"],[\"configSettingBucketlistSizeWindow\",\"bucketListSizeWindow\"],[\"configSettingEvictionIterator\",\"evictionIterator\"]],arms:{contractMaxSizeBytes:e.lookup(\"Uint32\"),contractCompute:e.lookup(\"ConfigSettingContractComputeV0\"),contractLedgerCost:e.lookup(\"ConfigSettingContractLedgerCostV0\"),contractHistoricalData:e.lookup(\"ConfigSettingContractHistoricalDataV0\"),contractEvents:e.lookup(\"ConfigSettingContractEventsV0\"),contractBandwidth:e.lookup(\"ConfigSettingContractBandwidthV0\"),contractCostParamsCpuInsns:e.lookup(\"ContractCostParams\"),contractCostParamsMemBytes:e.lookup(\"ContractCostParams\"),contractDataKeySizeBytes:e.lookup(\"Uint32\"),contractDataEntrySizeBytes:e.lookup(\"Uint32\"),stateArchivalSettings:e.lookup(\"StateArchivalSettings\"),contractExecutionLanes:e.lookup(\"ConfigSettingContractExecutionLanesV0\"),bucketListSizeWindow:e.varArray(e.lookup(\"Uint64\"),2147483647),evictionIterator:e.lookup(\"EvictionIterator\")}})}));t.default=i},5578:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.LiquidityPoolFeeV18=void 0,t.getLiquidityPoolId=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(\"constant_product\"!==e)throw new Error(\"liquidityPoolType is invalid\");var r=t.assetA,o=t.assetB,c=t.fee;if(!(r&&r instanceof a.Asset))throw new Error(\"assetA is invalid\");if(!(o&&o instanceof a.Asset))throw new Error(\"assetB is invalid\");if(!c||c!==u)throw new Error(\"fee is invalid\");if(-1!==a.Asset.compare(r,o))throw new Error(\"Assets are not in lexicographic order\");var l=i.default.LiquidityPoolType.liquidityPoolConstantProduct().toXDR(),f=new i.default.LiquidityPoolConstantProductParameters({assetA:r.toXDRObject(),assetB:o.toXDRObject(),fee:c}).toXDR(),p=n.concat([l,f]);return(0,s.hash)(p)};var o,i=(o=r(1918))&&o.__esModule?o:{default:o},a=r(1764),s=r(9152);var u=t.LiquidityPoolFeeV18=30},9152:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.hash=function(e){var t=new n.sha256;return t.update(e,\"utf8\"),t.digest()};var n=r(2802)},356:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n={xdr:!0,cereal:!0,hash:!0,sign:!0,verify:!0,FastSigning:!0,getLiquidityPoolId:!0,LiquidityPoolFeeV18:!0,Keypair:!0,UnsignedHyper:!0,Hyper:!0,TransactionBase:!0,Transaction:!0,FeeBumpTransaction:!0,TransactionBuilder:!0,TimeoutInfinite:!0,BASE_FEE:!0,Asset:!0,LiquidityPoolAsset:!0,LiquidityPoolId:!0,Operation:!0,AuthRequiredFlag:!0,AuthRevocableFlag:!0,AuthImmutableFlag:!0,AuthClawbackEnabledFlag:!0,Account:!0,MuxedAccount:!0,Claimant:!0,Networks:!0,StrKey:!0,SignerKey:!0,Soroban:!0,decodeAddressToMuxedAccount:!0,encodeMuxedAccountToAddress:!0,extractBaseAddress:!0,encodeMuxedAccount:!0,Contract:!0,Address:!0};Object.defineProperty(t,\"Account\",{enumerable:!0,get:function(){return w.Account}}),Object.defineProperty(t,\"Address\",{enumerable:!0,get:function(){return P.Address}}),Object.defineProperty(t,\"Asset\",{enumerable:!0,get:function(){return y.Asset}}),Object.defineProperty(t,\"AuthClawbackEnabledFlag\",{enumerable:!0,get:function(){return g.AuthClawbackEnabledFlag}}),Object.defineProperty(t,\"AuthImmutableFlag\",{enumerable:!0,get:function(){return g.AuthImmutableFlag}}),Object.defineProperty(t,\"AuthRequiredFlag\",{enumerable:!0,get:function(){return g.AuthRequiredFlag}}),Object.defineProperty(t,\"AuthRevocableFlag\",{enumerable:!0,get:function(){return g.AuthRevocableFlag}}),Object.defineProperty(t,\"BASE_FEE\",{enumerable:!0,get:function(){return h.BASE_FEE}}),Object.defineProperty(t,\"Claimant\",{enumerable:!0,get:function(){return E.Claimant}}),Object.defineProperty(t,\"Contract\",{enumerable:!0,get:function(){return A.Contract}}),Object.defineProperty(t,\"FastSigning\",{enumerable:!0,get:function(){return s.FastSigning}}),Object.defineProperty(t,\"FeeBumpTransaction\",{enumerable:!0,get:function(){return d.FeeBumpTransaction}}),Object.defineProperty(t,\"Hyper\",{enumerable:!0,get:function(){return l.Hyper}}),Object.defineProperty(t,\"Keypair\",{enumerable:!0,get:function(){return c.Keypair}}),Object.defineProperty(t,\"LiquidityPoolAsset\",{enumerable:!0,get:function(){return m.LiquidityPoolAsset}}),Object.defineProperty(t,\"LiquidityPoolFeeV18\",{enumerable:!0,get:function(){return u.LiquidityPoolFeeV18}}),Object.defineProperty(t,\"LiquidityPoolId\",{enumerable:!0,get:function(){return v.LiquidityPoolId}}),Object.defineProperty(t,\"MuxedAccount\",{enumerable:!0,get:function(){return S.MuxedAccount}}),Object.defineProperty(t,\"Networks\",{enumerable:!0,get:function(){return _.Networks}}),Object.defineProperty(t,\"Operation\",{enumerable:!0,get:function(){return g.Operation}}),Object.defineProperty(t,\"SignerKey\",{enumerable:!0,get:function(){return T.SignerKey}}),Object.defineProperty(t,\"Soroban\",{enumerable:!0,get:function(){return O.Soroban}}),Object.defineProperty(t,\"StrKey\",{enumerable:!0,get:function(){return k.StrKey}}),Object.defineProperty(t,\"TimeoutInfinite\",{enumerable:!0,get:function(){return h.TimeoutInfinite}}),Object.defineProperty(t,\"Transaction\",{enumerable:!0,get:function(){return p.Transaction}}),Object.defineProperty(t,\"TransactionBase\",{enumerable:!0,get:function(){return f.TransactionBase}}),Object.defineProperty(t,\"TransactionBuilder\",{enumerable:!0,get:function(){return h.TransactionBuilder}}),Object.defineProperty(t,\"UnsignedHyper\",{enumerable:!0,get:function(){return l.UnsignedHyper}}),Object.defineProperty(t,\"cereal\",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(t,\"decodeAddressToMuxedAccount\",{enumerable:!0,get:function(){return x.decodeAddressToMuxedAccount}}),t.default=void 0,Object.defineProperty(t,\"encodeMuxedAccount\",{enumerable:!0,get:function(){return x.encodeMuxedAccount}}),Object.defineProperty(t,\"encodeMuxedAccountToAddress\",{enumerable:!0,get:function(){return x.encodeMuxedAccountToAddress}}),Object.defineProperty(t,\"extractBaseAddress\",{enumerable:!0,get:function(){return x.extractBaseAddress}}),Object.defineProperty(t,\"getLiquidityPoolId\",{enumerable:!0,get:function(){return u.getLiquidityPoolId}}),Object.defineProperty(t,\"hash\",{enumerable:!0,get:function(){return a.hash}}),Object.defineProperty(t,\"sign\",{enumerable:!0,get:function(){return s.sign}}),Object.defineProperty(t,\"verify\",{enumerable:!0,get:function(){return s.verify}}),Object.defineProperty(t,\"xdr\",{enumerable:!0,get:function(){return o.default}});var o=N(r(1918)),i=N(r(3335)),a=r(9152),s=r(15),u=r(5578),c=r(6691),l=r(3740),f=r(3758),p=r(380),d=r(9260),h=r(6396),y=r(1764),m=r(2262),v=r(9353),g=r(7237),b=r(4172);Object.keys(b).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===b[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return b[e]}}))}));var w=r(2135),S=r(2243),E=r(1387),_=r(6202),k=r(7120),T=r(225),O=r(4062),x=r(6160),A=r(7452),P=r(1180),R=r(8549);Object.keys(R).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===R[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return R[e]}}))}));var j=r(7177);Object.keys(j).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===j[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return j[e]}}))}));var C=r(3919);Object.keys(C).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===C[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return C[e]}}))}));var I=r(4842);Object.keys(I).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===I[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return I[e]}}))}));var L=r(5328);Object.keys(L).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===L[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return L[e]}}))}));var B=r(3564);function N(e){return e&&e.__esModule?e:{default:e}}Object.keys(B).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===B[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return B[e]}}))}));t.default=e.exports},3564:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.buildInvocationTree=function e(t){var r=t.function(),a={},c=r.value();switch(r.switch().value){case 0:a.type=\"execute\",a.args={source:o.Address.fromScAddress(c.contractAddress()).toString(),function:c.functionName(),args:c.args().map((function(e){return(0,i.scValToNative)(e)}))};break;case 1:case 2:var l=2===r.switch().value;a.type=\"create\",a.args={};var f=[c.executable(),c.contractIdPreimage()],p=f[0],d=f[1];if(!!p.switch().value!=!!d.switch().value)throw new Error(\"creation function appears invalid: \".concat(JSON.stringify(c),\" (should be wasm+address or token+asset)\"));switch(p.switch().value){case 0:var h=d.fromAddress();a.args.type=\"wasm\",a.args.wasm=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){u(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({salt:h.salt().toString(\"hex\"),hash:p.wasmHash().toString(\"hex\"),address:o.Address.fromScAddress(h.address()).toString()},l&&{constructorArgs:c.constructorArgs().map((function(e){return(0,i.scValToNative)(e)}))});break;case 1:a.args.type=\"sac\",a.args.asset=n.Asset.fromOperation(d.fromAsset()).toString();break;default:throw new Error(\"unknown creation type: \".concat(JSON.stringify(p)))}break;default:throw new Error(\"unknown invocation type (\".concat(r.switch(),\"): \").concat(JSON.stringify(r)))}return a.invocations=t.subInvocations().map((function(t){return e(t)})),a},t.walkInvocationTree=function(e,t){c(e,1,t)};var n=r(1764),o=r(1180),i=r(7177);function a(e){return a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},a(e)}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e,t,r){return(t=function(e){var t=function(e,t){if(\"object\"!=a(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=a(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==a(t)?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t,r,n){!1!==r(e,t,n)&&e.subInvocations().forEach((function(n){return c(n,t+1,r,e)}))}},3335:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n=r(3740),o={XdrWriter:n.XdrWriter,XdrReader:n.XdrReader};t.default=o},6691:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.Keypair=void 0;var o=c(r(4940)),i=r(15),a=r(7120),s=r(9152),u=c(r(1918));function c(e){return e&&e.__esModule?e:{default:e}}function l(e){return l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},l(e)}function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,p(n.key),n)}}function p(e){var t=function(e,t){if(\"object\"!=l(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=l(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==l(t)?t:t+\"\"}t.Keypair=function(){return e=function e(t){if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),\"ed25519\"!==t.type)throw new Error(\"Invalid keys type\");if(this.type=t.type,t.secretKey){if(t.secretKey=n.from(t.secretKey),32!==t.secretKey.length)throw new Error(\"secretKey length is invalid\");if(this._secretSeed=t.secretKey,this._publicKey=(0,i.generate)(t.secretKey),this._secretKey=n.concat([t.secretKey,this._publicKey]),t.publicKey&&!this._publicKey.equals(n.from(t.publicKey)))throw new Error(\"secretKey does not match publicKey\")}else if(this._publicKey=n.from(t.publicKey),32!==this._publicKey.length)throw new Error(\"publicKey length is invalid\")},r=[{key:\"fromSecret\",value:function(e){var t=a.StrKey.decodeEd25519SecretSeed(e);return this.fromRawEd25519Seed(t)}},{key:\"fromRawEd25519Seed\",value:function(e){return new this({type:\"ed25519\",secretKey:e})}},{key:\"master\",value:function(e){if(!e)throw new Error(\"No network selected. Please pass a network argument, e.g. `Keypair.master(Networks.PUBLIC)`.\");return this.fromRawEd25519Seed((0,s.hash)(e))}},{key:\"fromPublicKey\",value:function(e){if(32!==(e=a.StrKey.decodeEd25519PublicKey(e)).length)throw new Error(\"Invalid Stellar public key\");return new this({type:\"ed25519\",publicKey:e})}},{key:\"random\",value:function(){var e=o.default.randomBytes(32);return this.fromRawEd25519Seed(e)}}],(t=[{key:\"xdrAccountId\",value:function(){return new u.default.AccountId.publicKeyTypeEd25519(this._publicKey)}},{key:\"xdrPublicKey\",value:function(){return new u.default.PublicKey.publicKeyTypeEd25519(this._publicKey)}},{key:\"xdrMuxedAccount\",value:function(e){if(void 0!==e){if(\"string\"!=typeof e)throw new TypeError(\"expected string for ID, got \".concat(l(e)));return u.default.MuxedAccount.keyTypeMuxedEd25519(new u.default.MuxedAccountMed25519({id:u.default.Uint64.fromString(e),ed25519:this._publicKey}))}return new u.default.MuxedAccount.keyTypeEd25519(this._publicKey)}},{key:\"rawPublicKey\",value:function(){return this._publicKey}},{key:\"signatureHint\",value:function(){var e=this.xdrAccountId().toXDR();return e.slice(e.length-4)}},{key:\"publicKey\",value:function(){return a.StrKey.encodeEd25519PublicKey(this._publicKey)}},{key:\"secret\",value:function(){if(!this._secretSeed)throw new Error(\"no secret key available\");if(\"ed25519\"===this.type)return a.StrKey.encodeEd25519SecretSeed(this._secretSeed);throw new Error(\"Invalid Keypair type\")}},{key:\"rawSecretKey\",value:function(){return this._secretSeed}},{key:\"canSign\",value:function(){return!!this._secretKey}},{key:\"sign\",value:function(e){if(!this.canSign())throw new Error(\"cannot sign: no secret key available\");return(0,i.sign)(e,this._secretKey)}},{key:\"verify\",value:function(e,t){return(0,i.verify)(e,t,this._publicKey)}},{key:\"signDecorated\",value:function(e){var t=this.sign(e),r=this.signatureHint();return new u.default.DecoratedSignature({hint:r,signature:t})}},{key:\"signPayloadDecorated\",value:function(e){var t=this.sign(e),r=this.signatureHint(),o=n.from(e.slice(-4));return o.length<4&&(o=n.concat([o,n.alloc(4-e.length,0)])),new u.default.DecoratedSignature({hint:o.map((function(e,t){return e^r[t]})),signature:t})}}])&&f(e.prototype,t),r&&f(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e;var e,t,r}()},2262:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.LiquidityPoolAsset=void 0;var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(1764),a=r(5578);function s(e){return s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},s(e)}function u(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?u(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):u(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t,r){return(t=p(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,p(n.key),n)}}function p(e){var t=function(e,t){if(\"object\"!=s(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=s(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==s(t)?t:t+\"\"}t.LiquidityPoolAsset=function(){return function(e,t,r){return t&&f(e.prototype,t),r&&f(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}((function e(t,r,n){if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),!(t&&t instanceof i.Asset))throw new Error(\"assetA is invalid\");if(!(r&&r instanceof i.Asset))throw new Error(\"assetB is invalid\");if(-1!==i.Asset.compare(t,r))throw new Error(\"Assets are not in lexicographic order\");if(!n||n!==a.LiquidityPoolFeeV18)throw new Error(\"fee is invalid\");this.assetA=t,this.assetB=r,this.fee=n}),[{key:\"toXDRObject\",value:function(){var e=new o.default.LiquidityPoolConstantProductParameters({assetA:this.assetA.toXDRObject(),assetB:this.assetB.toXDRObject(),fee:this.fee}),t=new o.default.LiquidityPoolParameters(\"liquidityPoolConstantProduct\",e);return new o.default.ChangeTrustAsset(\"assetTypePoolShare\",t)}},{key:\"getLiquidityPoolParameters\",value:function(){return c(c({},this),{},{assetA:this.assetA,assetB:this.assetB,fee:this.fee})}},{key:\"getAssetType\",value:function(){return\"liquidity_pool_shares\"}},{key:\"equals\",value:function(e){return this.assetA.equals(e.assetA)&&this.assetB.equals(e.assetB)&&this.fee===e.fee}},{key:\"toString\",value:function(){var e=(0,a.getLiquidityPoolId)(\"constant_product\",this.getLiquidityPoolParameters()).toString(\"hex\");return\"liquidity_pool:\".concat(e)}}],[{key:\"fromOperation\",value:function(e){var t=e.switch();if(t===o.default.AssetType.assetTypePoolShare()){var r=e.liquidityPool().constantProduct();return new this(i.Asset.fromOperation(r.assetA()),i.Asset.fromOperation(r.assetB()),r.fee())}throw new Error(\"Invalid asset type: \".concat(t.name))}}])}()},9353:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.LiquidityPoolId=void 0;var n,o=(n=r(1918))&&n.__esModule?n:{default:n};function i(e){return i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i(e)}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,s(n.key),n)}}function s(e){var t=function(e,t){if(\"object\"!=i(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=i(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==i(t)?t:t+\"\"}t.LiquidityPoolId=function(){return function(e,t,r){return t&&a(e.prototype,t),r&&a(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}((function e(t){if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),!t)throw new Error(\"liquidityPoolId cannot be empty\");if(!/^[a-f0-9]{64}$/.test(t))throw new Error(\"Liquidity pool ID is not a valid hash\");this.liquidityPoolId=t}),[{key:\"toXDRObject\",value:function(){var e=o.default.PoolId.fromXDR(this.liquidityPoolId,\"hex\");return new o.default.TrustLineAsset(\"assetTypePoolShare\",e)}},{key:\"getLiquidityPoolId\",value:function(){return String(this.liquidityPoolId)}},{key:\"getAssetType\",value:function(){return\"liquidity_pool_shares\"}},{key:\"equals\",value:function(e){return this.liquidityPoolId===e.getLiquidityPoolId()}},{key:\"toString\",value:function(){return\"liquidity_pool:\".concat(this.liquidityPoolId)}}],[{key:\"fromOperation\",value:function(e){var t=e.switch();if(t===o.default.AssetType.assetTypePoolShare())return new this(e.liquidityPoolId().toString(\"hex\"));throw new Error(\"Invalid asset type: \".concat(t.name))}}])}()},4172:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.MemoText=t.MemoReturn=t.MemoNone=t.MemoID=t.MemoHash=t.Memo=void 0;var o=r(3740),i=s(r(1242)),a=s(r(1918));function s(e){return e&&e.__esModule?e:{default:e}}function u(e){return u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},u(e)}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,l(n.key),n)}}function l(e){var t=function(e,t){if(\"object\"!=u(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=u(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==u(t)?t:t+\"\"}var f=t.MemoNone=\"none\",p=t.MemoID=\"id\",d=t.MemoText=\"text\",h=t.MemoHash=\"hash\",y=t.MemoReturn=\"return\";t.Memo=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;switch(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._type=t,this._value=r,this._type){case f:break;case p:e._validateIdValue(r);break;case d:e._validateTextValue(r);break;case h:case y:e._validateHashValue(r),\"string\"==typeof r&&(this._value=n.from(r,\"hex\"));break;default:throw new Error(\"Invalid memo type\")}}return t=e,s=[{key:\"_validateIdValue\",value:function(e){var t,r=new Error(\"Expects a int64 as a string. Got \".concat(e));if(\"string\"!=typeof e)throw r;try{t=new i.default(e)}catch(e){throw r}if(!t.isFinite())throw r;if(t.isNaN())throw r}},{key:\"_validateTextValue\",value:function(e){if(!a.default.Memo.armTypeForArm(\"text\").isValid(e))throw new Error(\"Expects string, array or buffer, max 28 bytes\")}},{key:\"_validateHashValue\",value:function(e){var t,r=new Error(\"Expects a 32 byte hash value or hex encoded string. Got \".concat(e));if(null==e)throw r;if(\"string\"==typeof e){if(!/^[0-9A-Fa-f]{64}$/g.test(e))throw r;t=n.from(e,\"hex\")}else{if(!n.isBuffer(e))throw r;t=n.from(e)}if(!t.length||32!==t.length)throw r}},{key:\"none\",value:function(){return new e(f)}},{key:\"text\",value:function(t){return new e(d,t)}},{key:\"id\",value:function(t){return new e(p,t)}},{key:\"hash\",value:function(t){return new e(h,t)}},{key:\"return\",value:function(t){return new e(y,t)}},{key:\"fromXDRObject\",value:function(t){switch(t.arm()){case\"id\":return e.id(t.value().toString());case\"text\":return e.text(t.value());case\"hash\":return e.hash(t.value());case\"retHash\":return e.return(t.value())}if(void 0===t.value())return e.none();throw new Error(\"Unknown type\")}}],(r=[{key:\"type\",get:function(){return this._type},set:function(e){throw new Error(\"Memo is immutable\")}},{key:\"value\",get:function(){switch(this._type){case f:return null;case p:case d:return this._value;case h:case y:return n.from(this._value);default:throw new Error(\"Invalid memo type\")}},set:function(e){throw new Error(\"Memo is immutable\")}},{key:\"toXDRObject\",value:function(){switch(this._type){case f:return a.default.Memo.memoNone();case p:return a.default.Memo.memoId(o.UnsignedHyper.fromString(this._value));case d:return a.default.Memo.memoText(this._value);case h:return a.default.Memo.memoHash(this._value);case y:return a.default.Memo.memoReturn(this._value);default:return null}}}])&&c(t.prototype,r),s&&c(t,s),Object.defineProperty(t,\"prototype\",{writable:!1}),t;var t,r,s}()},2243:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.MuxedAccount=void 0;var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(2135),a=r(7120),s=r(6160);function u(e){return u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},u(e)}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,l(n.key),n)}}function l(e){var t=function(e,t){if(\"object\"!=u(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=u(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==u(t)?t:t+\"\"}t.MuxedAccount=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e);var n=t.accountId();if(!a.StrKey.isValidEd25519PublicKey(n))throw new Error(\"accountId is invalid\");this.account=t,this._muxedXdr=(0,s.encodeMuxedAccount)(n,r),this._mAddress=(0,s.encodeMuxedAccountToAddress)(this._muxedXdr),this._id=r}return function(e,t,r){return t&&c(e.prototype,t),r&&c(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(e,[{key:\"baseAccount\",value:function(){return this.account}},{key:\"accountId\",value:function(){return this._mAddress}},{key:\"id\",value:function(){return this._id}},{key:\"setId\",value:function(e){if(\"string\"!=typeof e)throw new Error(\"id should be a string representing a number (uint64)\");return this._muxedXdr.med25519().id(o.default.Uint64.fromString(e)),this._mAddress=(0,s.encodeMuxedAccountToAddress)(this._muxedXdr),this._id=e,this}},{key:\"sequenceNumber\",value:function(){return this.account.sequenceNumber()}},{key:\"incrementSequenceNumber\",value:function(){return this.account.incrementSequenceNumber()}},{key:\"toXDRObject\",value:function(){return this._muxedXdr}},{key:\"equals\",value:function(e){return this.accountId()===e.accountId()}}],[{key:\"fromAddress\",value:function(t,r){var n=(0,s.decodeAddressToMuxedAccount)(t),o=(0,s.extractBaseAddress)(t),a=n.med25519().id().toString();return new e(new i.Account(o,r),a)}}])}()},6202:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Networks=void 0;t.Networks={PUBLIC:\"Public Global Stellar Network ; September 2015\",TESTNET:\"Test SDF Network ; September 2015\",FUTURENET:\"Test SDF Future Network ; October 2022\",SANDBOX:\"Local Sandbox Stellar Network ; September 2022\",STANDALONE:\"Standalone Network ; February 2017\"}},8549:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),Object.defineProperty(t,\"Int128\",{enumerable:!0,get:function(){return a.Int128}}),Object.defineProperty(t,\"Int256\",{enumerable:!0,get:function(){return s.Int256}}),Object.defineProperty(t,\"ScInt\",{enumerable:!0,get:function(){return u.ScInt}}),Object.defineProperty(t,\"Uint128\",{enumerable:!0,get:function(){return o.Uint128}}),Object.defineProperty(t,\"Uint256\",{enumerable:!0,get:function(){return i.Uint256}}),Object.defineProperty(t,\"XdrLargeInt\",{enumerable:!0,get:function(){return n.XdrLargeInt}}),t.scValToBigInt=function(e){var t=n.XdrLargeInt.getType(e.switch().name);switch(e.switch().name){case\"scvU32\":case\"scvI32\":return BigInt(e.value());case\"scvU64\":case\"scvI64\":return new n.XdrLargeInt(t,e.value()).toBigInt();case\"scvU128\":case\"scvI128\":return new n.XdrLargeInt(t,[e.value().lo(),e.value().hi()]).toBigInt();case\"scvU256\":case\"scvI256\":return new n.XdrLargeInt(t,[e.value().loLo(),e.value().loHi(),e.value().hiLo(),e.value().hiHi()]).toBigInt();default:throw TypeError(\"expected integer type, got \".concat(e.switch()))}};var n=r(7429),o=r(6272),i=r(8672),a=r(5487),s=r(4063),u=r(3317)},5487:(e,t,r)=>{\"use strict\";function n(e){return n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.Int128=void 0;var o=r(3740);function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,a(n.key),n)}}function a(e){var t=function(e,t){if(\"object\"!=n(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,t||\"default\");if(\"object\"!=n(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==n(t)?t:t+\"\"}function s(e,t,r){return t=c(t),function(e,t){if(t&&(\"object\"==n(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,u()?Reflect.construct(t,r||[],c(e).constructor):t.apply(e,r))}function u(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(u=function(){return!!e})()}function c(e){return c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},c(e)}function l(e,t){return l=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},l(e,t)}(t.Int128=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];return s(this,t,[r])}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&l(e,t)}(t,e),r=t,(n=[{key:\"unsigned\",get:function(){return!1}},{key:\"size\",get:function(){return 128}}])&&i(r.prototype,n),o&&i(r,o),Object.defineProperty(r,\"prototype\",{writable:!1}),r;var r,n,o}(o.LargeInt)).defineIntBoundaries()},4063:(e,t,r)=>{\"use strict\";function n(e){return n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.Int256=void 0;var o=r(3740);function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,a(n.key),n)}}function a(e){var t=function(e,t){if(\"object\"!=n(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,t||\"default\");if(\"object\"!=n(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==n(t)?t:t+\"\"}function s(e,t,r){return t=c(t),function(e,t){if(t&&(\"object\"==n(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,u()?Reflect.construct(t,r||[],c(e).constructor):t.apply(e,r))}function u(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(u=function(){return!!e})()}function c(e){return c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},c(e)}function l(e,t){return l=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},l(e,t)}(t.Int256=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];return s(this,t,[r])}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&l(e,t)}(t,e),r=t,(n=[{key:\"unsigned\",get:function(){return!1}},{key:\"size\",get:function(){return 256}}])&&i(r.prototype,n),o&&i(r,o),Object.defineProperty(r,\"prototype\",{writable:!1}),r;var r,n,o}(o.LargeInt)).defineIntBoundaries()},3317:(e,t,r)=>{\"use strict\";function n(e){return n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.ScInt=void 0;var o=r(7429);function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,a(n.key),n)}}function a(e){var t=function(e,t){if(\"object\"!=n(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,t||\"default\");if(\"object\"!=n(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==n(t)?t:t+\"\"}function s(e,t,r){return t=c(t),function(e,t){if(t&&(\"object\"==n(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,u()?Reflect.construct(t,r||[],c(e).constructor):t.apply(e,r))}function u(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(u=function(){return!!e})()}function c(e){return c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},c(e)}function l(e,t){return l=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},l(e,t)}t.ScInt=function(e){function t(e,r){var n;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var o=e<0,i=null!==(n=null==r?void 0:r.type)&&void 0!==n?n:\"\";if(i.startsWith(\"u\")&&o)throw TypeError(\"specified type \".concat(r.type,\" yet negative (\").concat(e,\")\"));if(\"\"===i){i=o?\"i\":\"u\";var a=function(e){var t,r=e.toString(2).length;return null!==(t=[64,128,256].find((function(e){return r<=e})))&&void 0!==t?t:r}(e);switch(a){case 64:case 128:case 256:i+=a.toString();break;default:throw RangeError(\"expected 64/128/256 bits for input (\".concat(e,\"), got \").concat(a))}}return s(this,t,[i,e])}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&l(e,t)}(t,e),r=t,n&&i(r.prototype,n),o&&i(r,o),Object.defineProperty(r,\"prototype\",{writable:!1}),r;var r,n,o}(o.XdrLargeInt)},6272:(e,t,r)=>{\"use strict\";function n(e){return n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.Uint128=void 0;var o=r(3740);function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,a(n.key),n)}}function a(e){var t=function(e,t){if(\"object\"!=n(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,t||\"default\");if(\"object\"!=n(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==n(t)?t:t+\"\"}function s(e,t,r){return t=c(t),function(e,t){if(t&&(\"object\"==n(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,u()?Reflect.construct(t,r||[],c(e).constructor):t.apply(e,r))}function u(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(u=function(){return!!e})()}function c(e){return c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},c(e)}function l(e,t){return l=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},l(e,t)}(t.Uint128=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];return s(this,t,[r])}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&l(e,t)}(t,e),r=t,(n=[{key:\"unsigned\",get:function(){return!0}},{key:\"size\",get:function(){return 128}}])&&i(r.prototype,n),o&&i(r,o),Object.defineProperty(r,\"prototype\",{writable:!1}),r;var r,n,o}(o.LargeInt)).defineIntBoundaries()},8672:(e,t,r)=>{\"use strict\";function n(e){return n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.Uint256=void 0;var o=r(3740);function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,a(n.key),n)}}function a(e){var t=function(e,t){if(\"object\"!=n(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,t||\"default\");if(\"object\"!=n(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==n(t)?t:t+\"\"}function s(e,t,r){return t=c(t),function(e,t){if(t&&(\"object\"==n(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,u()?Reflect.construct(t,r||[],c(e).constructor):t.apply(e,r))}function u(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(u=function(){return!!e})()}function c(e){return c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},c(e)}function l(e,t){return l=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},l(e,t)}(t.Uint256=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];return s(this,t,[r])}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&l(e,t)}(t,e),r=t,(n=[{key:\"unsigned\",get:function(){return!0}},{key:\"size\",get:function(){return 256}}])&&i(r.prototype,n),o&&i(r,o),Object.defineProperty(r,\"prototype\",{writable:!1}),r;var r,n,o}(o.LargeInt)).defineIntBoundaries()},7429:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.XdrLargeInt=void 0;var n,o=r(3740),i=r(6272),a=r(8672),s=r(5487),u=r(4063),c=(n=r(1918))&&n.__esModule?n:{default:n};function l(e){return l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},l(e)}function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,d(n.key),n)}}function p(e,t,r){return(t=d(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function d(e){var t=function(e,t){if(\"object\"!=l(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=l(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==l(t)?t:t+\"\"}t.XdrLargeInt=function(){return function(e,t,r){return t&&f(e.prototype,t),r&&f(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}((function e(t,r){switch(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),p(this,\"int\",void 0),p(this,\"type\",void 0),r instanceof Array||(r=[r]),r=r.map((function(t){return\"bigint\"==typeof t?t:t instanceof e?t.toBigInt():BigInt(t)})),t){case\"i64\":this.int=new o.Hyper(r);break;case\"i128\":this.int=new s.Int128(r);break;case\"i256\":this.int=new u.Int256(r);break;case\"u64\":this.int=new o.UnsignedHyper(r);break;case\"u128\":this.int=new i.Uint128(r);break;case\"u256\":this.int=new a.Uint256(r);break;default:throw TypeError(\"invalid type: \".concat(t))}this.type=t}),[{key:\"toNumber\",value:function(){var e=this.int.toBigInt();if(e>Number.MAX_SAFE_INTEGER||e<Number.MIN_SAFE_INTEGER)throw RangeError(\"value \".concat(e,\" not in range for Number \")+\"[\".concat(Number.MAX_SAFE_INTEGER,\", \").concat(Number.MIN_SAFE_INTEGER,\"]\"));return Number(e)}},{key:\"toBigInt\",value:function(){return this.int.toBigInt()}},{key:\"toI64\",value:function(){this._sizeCheck(64);var e=this.toBigInt();if(BigInt.asIntN(64,e)!==e)throw RangeError(\"value too large for i64: \".concat(e));return c.default.ScVal.scvI64(new c.default.Int64(e))}},{key:\"toU64\",value:function(){return this._sizeCheck(64),c.default.ScVal.scvU64(new c.default.Uint64(BigInt.asUintN(64,this.toBigInt())))}},{key:\"toI128\",value:function(){this._sizeCheck(128);var e=this.int.toBigInt(),t=BigInt.asIntN(64,e>>64n),r=BigInt.asUintN(64,e);return c.default.ScVal.scvI128(new c.default.Int128Parts({hi:new c.default.Int64(t),lo:new c.default.Uint64(r)}))}},{key:\"toU128\",value:function(){this._sizeCheck(128);var e=this.int.toBigInt();return c.default.ScVal.scvU128(new c.default.UInt128Parts({hi:new c.default.Uint64(BigInt.asUintN(64,e>>64n)),lo:new c.default.Uint64(BigInt.asUintN(64,e))}))}},{key:\"toI256\",value:function(){var e=this.int.toBigInt(),t=BigInt.asIntN(64,e>>192n),r=BigInt.asUintN(64,e>>128n),n=BigInt.asUintN(64,e>>64n),o=BigInt.asUintN(64,e);return c.default.ScVal.scvI256(new c.default.Int256Parts({hiHi:new c.default.Int64(t),hiLo:new c.default.Uint64(r),loHi:new c.default.Uint64(n),loLo:new c.default.Uint64(o)}))}},{key:\"toU256\",value:function(){var e=this.int.toBigInt(),t=BigInt.asUintN(64,e>>192n),r=BigInt.asUintN(64,e>>128n),n=BigInt.asUintN(64,e>>64n),o=BigInt.asUintN(64,e);return c.default.ScVal.scvU256(new c.default.UInt256Parts({hiHi:new c.default.Uint64(t),hiLo:new c.default.Uint64(r),loHi:new c.default.Uint64(n),loLo:new c.default.Uint64(o)}))}},{key:\"toScVal\",value:function(){switch(this.type){case\"i64\":return this.toI64();case\"i128\":return this.toI128();case\"i256\":return this.toI256();case\"u64\":return this.toU64();case\"u128\":return this.toU128();case\"u256\":return this.toU256();default:throw TypeError(\"invalid type: \".concat(this.type))}}},{key:\"valueOf\",value:function(){return this.int.valueOf()}},{key:\"toString\",value:function(){return this.int.toString()}},{key:\"toJSON\",value:function(){return{value:this.toBigInt().toString(),type:this.type}}},{key:\"_sizeCheck\",value:function(e){if(this.int.size>e)throw RangeError(\"value too large for \".concat(e,\" bits (\").concat(this.type,\")\"))}}],[{key:\"isType\",value:function(e){switch(e){case\"i64\":case\"i128\":case\"i256\":case\"u64\":case\"u128\":case\"u256\":return!0;default:return!1}}},{key:\"getType\",value:function(e){return e.slice(3).toLowerCase()}}])}()},7237:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Operation=t.AuthRevocableFlag=t.AuthRequiredFlag=t.AuthImmutableFlag=t.AuthClawbackEnabledFlag=void 0;var n=r(3740),o=m(r(1242)),i=r(645),a=r(4151),s=r(1764),u=r(2262),c=r(1387),l=r(7120),f=r(9353),p=m(r(1918)),d=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||\"object\"!=v(e)&&\"function\"!=typeof e)return{default:e};var r=y(t);if(r&&r.has(e))return r.get(e);var n={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(\"default\"!==i&&{}.hasOwnProperty.call(e,i)){var a=o?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}(r(7511)),h=r(6160);function y(e){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(y=function(e){return e?r:t})(e)}function m(e){return e&&e.__esModule?e:{default:e}}function v(e){return v=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},v(e)}function g(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,b(n.key),n)}}function b(e){var t=function(e,t){if(\"object\"!=v(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=v(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==v(t)?t:t+\"\"}var w=1e7,S=(t.AuthRequiredFlag=1,t.AuthRevocableFlag=2,t.AuthImmutableFlag=4,t.AuthClawbackEnabledFlag=8,t.Operation=function(){return e=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e)},r=[{key:\"setSourceAccount\",value:function(e,t){if(t.source)try{e.sourceAccount=(0,h.decodeAddressToMuxedAccount)(t.source)}catch(e){throw new Error(\"Source address is invalid\")}}},{key:\"fromXDRObject\",value:function(e){var t={};e.sourceAccount()&&(t.source=(0,h.encodeMuxedAccountToAddress)(e.sourceAccount()));var r=e.body().value(),n=e.body().switch().name;switch(n){case\"createAccount\":t.type=\"createAccount\",t.destination=E(r.destination()),t.startingBalance=this._fromXDRAmount(r.startingBalance());break;case\"payment\":t.type=\"payment\",t.destination=(0,h.encodeMuxedAccountToAddress)(r.destination()),t.asset=s.Asset.fromOperation(r.asset()),t.amount=this._fromXDRAmount(r.amount());break;case\"pathPaymentStrictReceive\":t.type=\"pathPaymentStrictReceive\",t.sendAsset=s.Asset.fromOperation(r.sendAsset()),t.sendMax=this._fromXDRAmount(r.sendMax()),t.destination=(0,h.encodeMuxedAccountToAddress)(r.destination()),t.destAsset=s.Asset.fromOperation(r.destAsset()),t.destAmount=this._fromXDRAmount(r.destAmount()),t.path=[];var o=r.path();Object.keys(o).forEach((function(e){t.path.push(s.Asset.fromOperation(o[e]))}));break;case\"pathPaymentStrictSend\":t.type=\"pathPaymentStrictSend\",t.sendAsset=s.Asset.fromOperation(r.sendAsset()),t.sendAmount=this._fromXDRAmount(r.sendAmount()),t.destination=(0,h.encodeMuxedAccountToAddress)(r.destination()),t.destAsset=s.Asset.fromOperation(r.destAsset()),t.destMin=this._fromXDRAmount(r.destMin()),t.path=[];var a=r.path();Object.keys(a).forEach((function(e){t.path.push(s.Asset.fromOperation(a[e]))}));break;case\"changeTrust\":t.type=\"changeTrust\",r.line().switch()===p.default.AssetType.assetTypePoolShare()?t.line=u.LiquidityPoolAsset.fromOperation(r.line()):t.line=s.Asset.fromOperation(r.line()),t.limit=this._fromXDRAmount(r.limit());break;case\"allowTrust\":t.type=\"allowTrust\",t.trustor=E(r.trustor()),t.assetCode=r.asset().value().toString(),t.assetCode=(0,i.trimEnd)(t.assetCode,\"\\0\"),t.authorize=r.authorize();break;case\"setOptions\":if(t.type=\"setOptions\",r.inflationDest()&&(t.inflationDest=E(r.inflationDest())),t.clearFlags=r.clearFlags(),t.setFlags=r.setFlags(),t.masterWeight=r.masterWeight(),t.lowThreshold=r.lowThreshold(),t.medThreshold=r.medThreshold(),t.highThreshold=r.highThreshold(),t.homeDomain=void 0!==r.homeDomain()?r.homeDomain().toString(\"ascii\"):void 0,r.signer()){var d={},y=r.signer().key().arm();if(\"ed25519\"===y)d.ed25519PublicKey=E(r.signer().key());else if(\"preAuthTx\"===y)d.preAuthTx=r.signer().key().preAuthTx();else if(\"hashX\"===y)d.sha256Hash=r.signer().key().hashX();else if(\"ed25519SignedPayload\"===y){var m=r.signer().key().ed25519SignedPayload();d.ed25519SignedPayload=l.StrKey.encodeSignedPayload(m.toXDR())}d.weight=r.signer().weight(),t.signer=d}break;case\"manageOffer\":case\"manageSellOffer\":t.type=\"manageSellOffer\",t.selling=s.Asset.fromOperation(r.selling()),t.buying=s.Asset.fromOperation(r.buying()),t.amount=this._fromXDRAmount(r.amount()),t.price=this._fromXDRPrice(r.price()),t.offerId=r.offerId().toString();break;case\"manageBuyOffer\":t.type=\"manageBuyOffer\",t.selling=s.Asset.fromOperation(r.selling()),t.buying=s.Asset.fromOperation(r.buying()),t.buyAmount=this._fromXDRAmount(r.buyAmount()),t.price=this._fromXDRPrice(r.price()),t.offerId=r.offerId().toString();break;case\"createPassiveOffer\":case\"createPassiveSellOffer\":t.type=\"createPassiveSellOffer\",t.selling=s.Asset.fromOperation(r.selling()),t.buying=s.Asset.fromOperation(r.buying()),t.amount=this._fromXDRAmount(r.amount()),t.price=this._fromXDRPrice(r.price());break;case\"accountMerge\":t.type=\"accountMerge\",t.destination=(0,h.encodeMuxedAccountToAddress)(r);break;case\"manageData\":t.type=\"manageData\",t.name=r.dataName().toString(\"ascii\"),t.value=r.dataValue();break;case\"inflation\":t.type=\"inflation\";break;case\"bumpSequence\":t.type=\"bumpSequence\",t.bumpTo=r.bumpTo().toString();break;case\"createClaimableBalance\":t.type=\"createClaimableBalance\",t.asset=s.Asset.fromOperation(r.asset()),t.amount=this._fromXDRAmount(r.amount()),t.claimants=[],r.claimants().forEach((function(e){t.claimants.push(c.Claimant.fromXDR(e))}));break;case\"claimClaimableBalance\":t.type=\"claimClaimableBalance\",t.balanceId=r.toXDR(\"hex\");break;case\"beginSponsoringFutureReserves\":t.type=\"beginSponsoringFutureReserves\",t.sponsoredId=E(r.sponsoredId());break;case\"endSponsoringFutureReserves\":t.type=\"endSponsoringFutureReserves\";break;case\"revokeSponsorship\":!function(e,t){switch(e.switch().name){case\"revokeSponsorshipLedgerEntry\":var r=e.ledgerKey();switch(r.switch().name){case p.default.LedgerEntryType.account().name:t.type=\"revokeAccountSponsorship\",t.account=E(r.account().accountId());break;case p.default.LedgerEntryType.trustline().name:t.type=\"revokeTrustlineSponsorship\",t.account=E(r.trustLine().accountId());var n=r.trustLine().asset();n.switch()===p.default.AssetType.assetTypePoolShare()?t.asset=f.LiquidityPoolId.fromOperation(n):t.asset=s.Asset.fromOperation(n);break;case p.default.LedgerEntryType.offer().name:t.type=\"revokeOfferSponsorship\",t.seller=E(r.offer().sellerId()),t.offerId=r.offer().offerId().toString();break;case p.default.LedgerEntryType.data().name:t.type=\"revokeDataSponsorship\",t.account=E(r.data().accountId()),t.name=r.data().dataName().toString(\"ascii\");break;case p.default.LedgerEntryType.claimableBalance().name:t.type=\"revokeClaimableBalanceSponsorship\",t.balanceId=r.claimableBalance().balanceId().toXDR(\"hex\");break;case p.default.LedgerEntryType.liquidityPool().name:t.type=\"revokeLiquidityPoolSponsorship\",t.liquidityPoolId=r.liquidityPool().liquidityPoolId().toString(\"hex\");break;default:throw new Error(\"Unknown ledgerKey: \".concat(e.switch().name))}break;case\"revokeSponsorshipSigner\":t.type=\"revokeSignerSponsorship\",t.account=E(e.signer().accountId()),t.signer=function(e){var t={};switch(e.switch().name){case p.default.SignerKeyType.signerKeyTypeEd25519().name:t.ed25519PublicKey=l.StrKey.encodeEd25519PublicKey(e.ed25519());break;case p.default.SignerKeyType.signerKeyTypePreAuthTx().name:t.preAuthTx=e.preAuthTx().toString(\"hex\");break;case p.default.SignerKeyType.signerKeyTypeHashX().name:t.sha256Hash=e.hashX().toString(\"hex\");break;default:throw new Error(\"Unknown signerKey: \".concat(e.switch().name))}return t}(e.signer().signerKey());break;default:throw new Error(\"Unknown revokeSponsorship: \".concat(e.switch().name))}}(r,t);break;case\"clawback\":t.type=\"clawback\",t.amount=this._fromXDRAmount(r.amount()),t.from=(0,h.encodeMuxedAccountToAddress)(r.from()),t.asset=s.Asset.fromOperation(r.asset());break;case\"clawbackClaimableBalance\":t.type=\"clawbackClaimableBalance\",t.balanceId=r.toXDR(\"hex\");break;case\"setTrustLineFlags\":t.type=\"setTrustLineFlags\",t.asset=s.Asset.fromOperation(r.asset()),t.trustor=E(r.trustor());var v=r.clearFlags(),g=r.setFlags(),b={authorized:p.default.TrustLineFlags.authorizedFlag(),authorizedToMaintainLiabilities:p.default.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(),clawbackEnabled:p.default.TrustLineFlags.trustlineClawbackEnabledFlag()};t.flags={},Object.keys(b).forEach((function(e){var r;t.flags[e]=(r=b[e].value,!!(g&r)||!(v&r)&&void 0)}));break;case\"liquidityPoolDeposit\":t.type=\"liquidityPoolDeposit\",t.liquidityPoolId=r.liquidityPoolId().toString(\"hex\"),t.maxAmountA=this._fromXDRAmount(r.maxAmountA()),t.maxAmountB=this._fromXDRAmount(r.maxAmountB()),t.minPrice=this._fromXDRPrice(r.minPrice()),t.maxPrice=this._fromXDRPrice(r.maxPrice());break;case\"liquidityPoolWithdraw\":t.type=\"liquidityPoolWithdraw\",t.liquidityPoolId=r.liquidityPoolId().toString(\"hex\"),t.amount=this._fromXDRAmount(r.amount()),t.minAmountA=this._fromXDRAmount(r.minAmountA()),t.minAmountB=this._fromXDRAmount(r.minAmountB());break;case\"invokeHostFunction\":var w;t.type=\"invokeHostFunction\",t.func=r.hostFunction(),t.auth=null!==(w=r.auth())&&void 0!==w?w:[];break;case\"extendFootprintTtl\":t.type=\"extendFootprintTtl\",t.extendTo=r.extendTo();break;case\"restoreFootprint\":t.type=\"restoreFootprint\";break;default:throw new Error(\"Unknown operation: \".concat(n))}return t}},{key:\"isValidAmount\",value:function(e){var t,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(\"string\"!=typeof e)return!1;try{t=new o.default(e)}catch(e){return!1}return!(!r&&t.isZero()||t.isNegative()||t.times(w).gt(new o.default(\"9223372036854775807\").toString())||t.decimalPlaces()>7||t.isNaN()||!t.isFinite())}},{key:\"constructAmountRequirementsError\",value:function(e){return\"\".concat(e,\" argument must be of type String, represent a positive number and have at most 7 digits after the decimal\")}},{key:\"_checkUnsignedIntValue\",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(void 0!==t)switch(\"string\"==typeof t&&(t=parseFloat(t)),!0){case\"number\"!=typeof t||!Number.isFinite(t)||t%1!=0:throw new Error(\"\".concat(e,\" value is invalid\"));case t<0:throw new Error(\"\".concat(e,\" value must be unsigned\"));case!r||r&&r(t,e):return t;default:throw new Error(\"\".concat(e,\" value is invalid\"))}}},{key:\"_toXDRAmount\",value:function(e){var t=new o.default(e).times(w);return n.Hyper.fromString(t.toString())}},{key:\"_fromXDRAmount\",value:function(e){return new o.default(e).div(w).toFixed(7)}},{key:\"_fromXDRPrice\",value:function(e){return new o.default(e.n()).div(new o.default(e.d())).toString()}},{key:\"_toXDRPrice\",value:function(e){var t;if(e.n&&e.d)t=new p.default.Price(e);else{var r=(0,a.best_r)(e);t=new p.default.Price({n:parseInt(r[0],10),d:parseInt(r[1],10)})}if(t.n()<0||t.d()<0)throw new Error(\"price must be positive\");return t}}],(t=null)&&g(e.prototype,t),r&&g(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e;var e,t,r}());function E(e){return l.StrKey.encodeEd25519PublicKey(e.ed25519())}S.accountMerge=d.accountMerge,S.allowTrust=d.allowTrust,S.bumpSequence=d.bumpSequence,S.changeTrust=d.changeTrust,S.createAccount=d.createAccount,S.createClaimableBalance=d.createClaimableBalance,S.claimClaimableBalance=d.claimClaimableBalance,S.clawbackClaimableBalance=d.clawbackClaimableBalance,S.createPassiveSellOffer=d.createPassiveSellOffer,S.inflation=d.inflation,S.manageData=d.manageData,S.manageSellOffer=d.manageSellOffer,S.manageBuyOffer=d.manageBuyOffer,S.pathPaymentStrictReceive=d.pathPaymentStrictReceive,S.pathPaymentStrictSend=d.pathPaymentStrictSend,S.payment=d.payment,S.setOptions=d.setOptions,S.beginSponsoringFutureReserves=d.beginSponsoringFutureReserves,S.endSponsoringFutureReserves=d.endSponsoringFutureReserves,S.revokeAccountSponsorship=d.revokeAccountSponsorship,S.revokeTrustlineSponsorship=d.revokeTrustlineSponsorship,S.revokeOfferSponsorship=d.revokeOfferSponsorship,S.revokeDataSponsorship=d.revokeDataSponsorship,S.revokeClaimableBalanceSponsorship=d.revokeClaimableBalanceSponsorship,S.revokeLiquidityPoolSponsorship=d.revokeLiquidityPoolSponsorship,S.revokeSignerSponsorship=d.revokeSignerSponsorship,S.clawback=d.clawback,S.setTrustLineFlags=d.setTrustLineFlags,S.liquidityPoolDeposit=d.liquidityPoolDeposit,S.liquidityPoolWithdraw=d.liquidityPoolWithdraw,S.invokeHostFunction=d.invokeHostFunction,S.extendFootprintTtl=d.extendFootprintTtl,S.restoreFootprint=d.restoreFootprint,S.createStellarAssetContract=d.createStellarAssetContract,S.invokeContractFunction=d.invokeContractFunction,S.createCustomContract=d.createCustomContract,S.uploadContractWasm=d.uploadContractWasm},4295:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.accountMerge=function(e){var t={};try{t.body=o.default.OperationBody.accountMerge((0,i.decodeAddressToMuxedAccount)(e.destination))}catch(e){throw new Error(\"destination is invalid\")}return this.setSourceAccount(t,e),new o.default.Operation(t)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(6160)},3683:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.allowTrust=function(e){if(!a.StrKey.isValidEd25519PublicKey(e.trustor))throw new Error(\"trustor is invalid\");var t={};if(t.trustor=i.Keypair.fromPublicKey(e.trustor).xdrAccountId(),e.assetCode.length<=4){var r=e.assetCode.padEnd(4,\"\\0\");t.asset=o.default.AssetCode.assetTypeCreditAlphanum4(r)}else{if(!(e.assetCode.length<=12))throw new Error(\"Asset code must be 12 characters at max.\");var n=e.assetCode.padEnd(12,\"\\0\");t.asset=o.default.AssetCode.assetTypeCreditAlphanum12(n)}\"boolean\"==typeof e.authorize?e.authorize?t.authorize=o.default.TrustLineFlags.authorizedFlag().value:t.authorize=0:t.authorize=e.authorize;var s=new o.default.AllowTrustOp(t),u={};return u.body=o.default.OperationBody.allowTrust(s),this.setSourceAccount(u,e),new o.default.Operation(u)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(6691),a=r(7120)},7505:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.beginSponsoringFutureReserves=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!i.StrKey.isValidEd25519PublicKey(e.sponsoredId))throw new Error(\"sponsoredId is invalid\");var t=new o.default.BeginSponsoringFutureReservesOp({sponsoredId:a.Keypair.fromPublicKey(e.sponsoredId).xdrAccountId()}),r={};return r.body=o.default.OperationBody.beginSponsoringFutureReserves(t),this.setSourceAccount(r,e),new o.default.Operation(r)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(7120),a=r(6691)},6183:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.bumpSequence=function(e){var t={};if(\"string\"!=typeof e.bumpTo)throw new Error(\"bumpTo must be a string\");try{new o.default(e.bumpTo)}catch(e){throw new Error(\"bumpTo must be a stringified number\")}t.bumpTo=n.Hyper.fromString(e.bumpTo);var r=new i.default.BumpSequenceOp(t),a={};return a.body=i.default.OperationBody.bumpSequence(r),this.setSourceAccount(a,e),new i.default.Operation(a)};var n=r(3740),o=a(r(1242)),i=a(r(1918));function a(e){return e&&e.__esModule?e:{default:e}}},2810:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.changeTrust=function(e){var t={};if(e.asset instanceof a.Asset)t.line=e.asset.toChangeTrustXDRObject();else{if(!(e.asset instanceof s.LiquidityPoolAsset))throw new TypeError(\"asset must be Asset or LiquidityPoolAsset\");t.line=e.asset.toXDRObject()}if(void 0!==e.limit&&!this.isValidAmount(e.limit,!0))throw new TypeError(this.constructAmountRequirementsError(\"limit\"));e.limit?t.limit=this._toXDRAmount(e.limit):t.limit=n.Hyper.fromString(new o.default(c).toString());e.source&&(t.source=e.source.masterKeypair);var r=new i.default.ChangeTrustOp(t),u={};return u.body=i.default.OperationBody.changeTrust(r),this.setSourceAccount(u,e),new i.default.Operation(u)};var n=r(3740),o=u(r(1242)),i=u(r(1918)),a=r(1764),s=r(2262);function u(e){return e&&e.__esModule?e:{default:e}}var c=\"9223372036854775807\"},7239:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.claimClaimableBalance=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};i(e.balanceId);var t={};t.balanceId=o.default.ClaimableBalanceId.fromXDR(e.balanceId,\"hex\");var r=new o.default.ClaimClaimableBalanceOp(t),n={};return n.body=o.default.OperationBody.claimClaimableBalance(r),this.setSourceAccount(n,e),new o.default.Operation(n)},t.validateClaimableBalanceId=i;var n,o=(n=r(1918))&&n.__esModule?n:{default:n};function i(e){if(\"string\"!=typeof e||72!==e.length)throw new Error(\"must provide a valid claimable balance id\")}},7651:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.clawback=function(e){var t={};if(!this.isValidAmount(e.amount))throw new TypeError(this.constructAmountRequirementsError(\"amount\"));t.amount=this._toXDRAmount(e.amount),t.asset=e.asset.toXDRObject();try{t.from=(0,i.decodeAddressToMuxedAccount)(e.from)}catch(e){throw new Error(\"from address is invalid\")}var r={body:o.default.OperationBody.clawback(new o.default.ClawbackOp(t))};return this.setSourceAccount(r,e),new o.default.Operation(r)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(6160)},2203:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.clawbackClaimableBalance=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,i.validateClaimableBalanceId)(e.balanceId);var t={balanceId:o.default.ClaimableBalanceId.fromXDR(e.balanceId,\"hex\")},r={body:o.default.OperationBody.clawbackClaimableBalance(new o.default.ClawbackClaimableBalanceOp(t))};return this.setSourceAccount(r,e),new o.default.Operation(r)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(7239)},2115:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAccount=function(e){if(!a.StrKey.isValidEd25519PublicKey(e.destination))throw new Error(\"destination is invalid\");if(!this.isValidAmount(e.startingBalance,!0))throw new TypeError(this.constructAmountRequirementsError(\"startingBalance\"));var t={};t.destination=i.Keypair.fromPublicKey(e.destination).xdrAccountId(),t.startingBalance=this._toXDRAmount(e.startingBalance);var r=new o.default.CreateAccountOp(t),n={};return n.body=o.default.OperationBody.createAccount(r),this.setSourceAccount(n,e),new o.default.Operation(n)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(6691),a=r(7120)},4831:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.createClaimableBalance=function(e){if(!(e.asset instanceof i.Asset))throw new Error(\"must provide an asset for create claimable balance operation\");if(!this.isValidAmount(e.amount))throw new TypeError(this.constructAmountRequirementsError(\"amount\"));if(!Array.isArray(e.claimants)||0===e.claimants.length)throw new Error(\"must provide at least one claimant\");var t={};t.asset=e.asset.toXDRObject(),t.amount=this._toXDRAmount(e.amount),t.claimants=Object.values(e.claimants).map((function(e){return e.toXDRObject()}));var r=new o.default.CreateClaimableBalanceOp(t),n={};return n.body=o.default.OperationBody.createClaimableBalance(r),this.setSourceAccount(n,e),new o.default.Operation(n)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(1764)},9073:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.createPassiveSellOffer=function(e){var t={};if(t.selling=e.selling.toXDRObject(),t.buying=e.buying.toXDRObject(),!this.isValidAmount(e.amount))throw new TypeError(this.constructAmountRequirementsError(\"amount\"));if(t.amount=this._toXDRAmount(e.amount),void 0===e.price)throw new TypeError(\"price argument is required\");t.price=this._toXDRPrice(e.price);var r=new o.default.CreatePassiveSellOfferOp(t),n={};return n.body=o.default.OperationBody.createPassiveSellOffer(r),this.setSourceAccount(n,e),new o.default.Operation(n)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n}},721:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.endSponsoringFutureReserves=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={};return t.body=o.default.OperationBody.endSponsoringFutureReserves(),this.setSourceAccount(t,e),new o.default.Operation(t)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n}},8752:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.extendFootprintTtl=function(e){var t;if((null!==(t=e.extendTo)&&void 0!==t?t:-1)<=0)throw new RangeError(\"extendTo has to be positive\");var r=new o.default.ExtendFootprintTtlOp({ext:new o.default.ExtensionPoint(0),extendTo:e.extendTo}),n={body:o.default.OperationBody.extendFootprintTtl(r)};return this.setSourceAccount(n,e),new o.default.Operation(n)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n}},7511:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),Object.defineProperty(t,\"accountMerge\",{enumerable:!0,get:function(){return i.accountMerge}}),Object.defineProperty(t,\"allowTrust\",{enumerable:!0,get:function(){return a.allowTrust}}),Object.defineProperty(t,\"beginSponsoringFutureReserves\",{enumerable:!0,get:function(){return w.beginSponsoringFutureReserves}}),Object.defineProperty(t,\"bumpSequence\",{enumerable:!0,get:function(){return s.bumpSequence}}),Object.defineProperty(t,\"changeTrust\",{enumerable:!0,get:function(){return u.changeTrust}}),Object.defineProperty(t,\"claimClaimableBalance\",{enumerable:!0,get:function(){return f.claimClaimableBalance}}),Object.defineProperty(t,\"clawback\",{enumerable:!0,get:function(){return _.clawback}}),Object.defineProperty(t,\"clawbackClaimableBalance\",{enumerable:!0,get:function(){return p.clawbackClaimableBalance}}),Object.defineProperty(t,\"createAccount\",{enumerable:!0,get:function(){return c.createAccount}}),Object.defineProperty(t,\"createClaimableBalance\",{enumerable:!0,get:function(){return l.createClaimableBalance}}),Object.defineProperty(t,\"createCustomContract\",{enumerable:!0,get:function(){return x.createCustomContract}}),Object.defineProperty(t,\"createPassiveSellOffer\",{enumerable:!0,get:function(){return o.createPassiveSellOffer}}),Object.defineProperty(t,\"createStellarAssetContract\",{enumerable:!0,get:function(){return x.createStellarAssetContract}}),Object.defineProperty(t,\"endSponsoringFutureReserves\",{enumerable:!0,get:function(){return S.endSponsoringFutureReserves}}),Object.defineProperty(t,\"extendFootprintTtl\",{enumerable:!0,get:function(){return A.extendFootprintTtl}}),Object.defineProperty(t,\"inflation\",{enumerable:!0,get:function(){return d.inflation}}),Object.defineProperty(t,\"invokeContractFunction\",{enumerable:!0,get:function(){return x.invokeContractFunction}}),Object.defineProperty(t,\"invokeHostFunction\",{enumerable:!0,get:function(){return x.invokeHostFunction}}),Object.defineProperty(t,\"liquidityPoolDeposit\",{enumerable:!0,get:function(){return T.liquidityPoolDeposit}}),Object.defineProperty(t,\"liquidityPoolWithdraw\",{enumerable:!0,get:function(){return O.liquidityPoolWithdraw}}),Object.defineProperty(t,\"manageBuyOffer\",{enumerable:!0,get:function(){return y.manageBuyOffer}}),Object.defineProperty(t,\"manageData\",{enumerable:!0,get:function(){return h.manageData}}),Object.defineProperty(t,\"manageSellOffer\",{enumerable:!0,get:function(){return n.manageSellOffer}}),Object.defineProperty(t,\"pathPaymentStrictReceive\",{enumerable:!0,get:function(){return m.pathPaymentStrictReceive}}),Object.defineProperty(t,\"pathPaymentStrictSend\",{enumerable:!0,get:function(){return v.pathPaymentStrictSend}}),Object.defineProperty(t,\"payment\",{enumerable:!0,get:function(){return g.payment}}),Object.defineProperty(t,\"restoreFootprint\",{enumerable:!0,get:function(){return P.restoreFootprint}}),Object.defineProperty(t,\"revokeAccountSponsorship\",{enumerable:!0,get:function(){return E.revokeAccountSponsorship}}),Object.defineProperty(t,\"revokeClaimableBalanceSponsorship\",{enumerable:!0,get:function(){return E.revokeClaimableBalanceSponsorship}}),Object.defineProperty(t,\"revokeDataSponsorship\",{enumerable:!0,get:function(){return E.revokeDataSponsorship}}),Object.defineProperty(t,\"revokeLiquidityPoolSponsorship\",{enumerable:!0,get:function(){return E.revokeLiquidityPoolSponsorship}}),Object.defineProperty(t,\"revokeOfferSponsorship\",{enumerable:!0,get:function(){return E.revokeOfferSponsorship}}),Object.defineProperty(t,\"revokeSignerSponsorship\",{enumerable:!0,get:function(){return E.revokeSignerSponsorship}}),Object.defineProperty(t,\"revokeTrustlineSponsorship\",{enumerable:!0,get:function(){return E.revokeTrustlineSponsorship}}),Object.defineProperty(t,\"setOptions\",{enumerable:!0,get:function(){return b.setOptions}}),Object.defineProperty(t,\"setTrustLineFlags\",{enumerable:!0,get:function(){return k.setTrustLineFlags}}),Object.defineProperty(t,\"uploadContractWasm\",{enumerable:!0,get:function(){return x.uploadContractWasm}});var n=r(862),o=r(9073),i=r(4295),a=r(3683),s=r(6183),u=r(2810),c=r(2115),l=r(4831),f=r(7239),p=r(2203),d=r(7421),h=r(1411),y=r(1922),m=r(2075),v=r(3874),g=r(3533),b=r(2018),w=r(7505),S=r(721),E=r(7790),_=r(7651),k=r(1804),T=r(9845),O=r(4737),x=r(4403),A=r(8752),P=r(149)},7421:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.inflation=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={};return t.body=o.default.OperationBody.inflation(),this.setSourceAccount(t,e),new o.default.Operation(t)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n}},4403:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCustomContract=function(e){var t,r=n.from(e.salt||a.Keypair.random().xdrPublicKey().value());if(!e.wasmHash||32!==e.wasmHash.length)throw new TypeError(\"expected hash(contract WASM) in 'opts.wasmHash', got \".concat(e.wasmHash));if(32!==r.length)throw new TypeError(\"expected 32-byte salt in 'opts.salt', got \".concat(e.wasmHash));return this.invokeHostFunction({source:e.source,auth:e.auth,func:i.default.HostFunction.hostFunctionTypeCreateContractV2(new i.default.CreateContractArgsV2({executable:i.default.ContractExecutable.contractExecutableWasm(n.from(e.wasmHash)),contractIdPreimage:i.default.ContractIdPreimage.contractIdPreimageFromAddress(new i.default.ContractIdPreimageFromAddress({address:e.address.toScAddress(),salt:r})),constructorArgs:null!==(t=e.constructorArgs)&&void 0!==t?t:[]}))})},t.createStellarAssetContract=function(e){var t=e.asset;if(\"string\"==typeof t){var r=t.split(\":\"),n=(l=2,function(e){if(Array.isArray(e))return e}(s=r)||function(e,t){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var n,o,i,a,s=[],u=!0,c=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(s.push(n.value),s.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(s,l)||function(e,t){if(e){if(\"string\"==typeof e)return c(e,t);var r={}.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(e,t):void 0}}(s,l)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),o=n[0],a=n[1];t=new u.Asset(o,a)}var s,l;if(!(t instanceof u.Asset))throw new TypeError(\"expected Asset in 'opts.asset', got \".concat(t));return this.invokeHostFunction({source:e.source,auth:e.auth,func:i.default.HostFunction.hostFunctionTypeCreateContract(new i.default.CreateContractArgs({executable:i.default.ContractExecutable.contractExecutableStellarAsset(),contractIdPreimage:i.default.ContractIdPreimage.contractIdPreimageFromAsset(t.toXDRObject())}))})},t.invokeContractFunction=function(e){var t=new s.Address(e.contract);if(\"contract\"!==t._type)throw new TypeError(\"expected contract strkey instance, got \".concat(t));return this.invokeHostFunction({source:e.source,auth:e.auth,func:i.default.HostFunction.hostFunctionTypeInvokeContract(new i.default.InvokeContractArgs({contractAddress:t.toScAddress(),functionName:e.function,args:e.args}))})},t.invokeHostFunction=function(e){if(!e.func)throw new TypeError(\"host function invocation ('func') required (got \".concat(JSON.stringify(e),\")\"));var t=new i.default.InvokeHostFunctionOp({hostFunction:e.func,auth:e.auth||[]}),r={body:i.default.OperationBody.invokeHostFunction(t)};return this.setSourceAccount(r,e),new i.default.Operation(r)},t.uploadContractWasm=function(e){return this.invokeHostFunction({source:e.source,auth:e.auth,func:i.default.HostFunction.hostFunctionTypeUploadContractWasm(n.from(e.wasm))})};var o,i=(o=r(1918))&&o.__esModule?o:{default:o},a=r(6691),s=r(1180),u=r(1764);function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}},9845:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.liquidityPoolDeposit=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.liquidityPoolId,r=e.maxAmountA,n=e.maxAmountB,i=e.minPrice,a=e.maxPrice,s={};if(!t)throw new TypeError(\"liquidityPoolId argument is required\");if(s.liquidityPoolId=o.default.PoolId.fromXDR(t,\"hex\"),!this.isValidAmount(r,!0))throw new TypeError(this.constructAmountRequirementsError(\"maxAmountA\"));if(s.maxAmountA=this._toXDRAmount(r),!this.isValidAmount(n,!0))throw new TypeError(this.constructAmountRequirementsError(\"maxAmountB\"));if(s.maxAmountB=this._toXDRAmount(n),void 0===i)throw new TypeError(\"minPrice argument is required\");if(s.minPrice=this._toXDRPrice(i),void 0===a)throw new TypeError(\"maxPrice argument is required\");s.maxPrice=this._toXDRPrice(a);var u=new o.default.LiquidityPoolDepositOp(s),c={body:o.default.OperationBody.liquidityPoolDeposit(u)};return this.setSourceAccount(c,e),new o.default.Operation(c)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n}},4737:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.liquidityPoolWithdraw=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={};if(!e.liquidityPoolId)throw new TypeError(\"liquidityPoolId argument is required\");if(t.liquidityPoolId=o.default.PoolId.fromXDR(e.liquidityPoolId,\"hex\"),!this.isValidAmount(e.amount))throw new TypeError(this.constructAmountRequirementsError(\"amount\"));if(t.amount=this._toXDRAmount(e.amount),!this.isValidAmount(e.minAmountA,!0))throw new TypeError(this.constructAmountRequirementsError(\"minAmountA\"));if(t.minAmountA=this._toXDRAmount(e.minAmountA),!this.isValidAmount(e.minAmountB,!0))throw new TypeError(this.constructAmountRequirementsError(\"minAmountB\"));t.minAmountB=this._toXDRAmount(e.minAmountB);var r=new o.default.LiquidityPoolWithdrawOp(t),n={body:o.default.OperationBody.liquidityPoolWithdraw(r)};return this.setSourceAccount(n,e),new o.default.Operation(n)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n}},1922:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.manageBuyOffer=function(e){var t={};if(t.selling=e.selling.toXDRObject(),t.buying=e.buying.toXDRObject(),!this.isValidAmount(e.buyAmount,!0))throw new TypeError(this.constructAmountRequirementsError(\"buyAmount\"));if(t.buyAmount=this._toXDRAmount(e.buyAmount),void 0===e.price)throw new TypeError(\"price argument is required\");t.price=this._toXDRPrice(e.price),void 0!==e.offerId?e.offerId=e.offerId.toString():e.offerId=\"0\";t.offerId=o.Hyper.fromString(e.offerId);var r=new i.default.ManageBuyOfferOp(t),n={};return n.body=i.default.OperationBody.manageBuyOffer(r),this.setSourceAccount(n,e),new i.default.Operation(n)};var n,o=r(3740),i=(n=r(1918))&&n.__esModule?n:{default:n}},1411:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.manageData=function(e){var t={};if(!(\"string\"==typeof e.name&&e.name.length<=64))throw new Error(\"name must be a string, up to 64 characters\");if(t.dataName=e.name,\"string\"!=typeof e.value&&!n.isBuffer(e.value)&&null!==e.value)throw new Error(\"value must be a string, Buffer or null\");\"string\"==typeof e.value?t.dataValue=n.from(e.value):t.dataValue=e.value;if(null!==t.dataValue&&t.dataValue.length>64)throw new Error(\"value cannot be longer that 64 bytes\");var r=new i.default.ManageDataOp(t),o={};return o.body=i.default.OperationBody.manageData(r),this.setSourceAccount(o,e),new i.default.Operation(o)};var o,i=(o=r(1918))&&o.__esModule?o:{default:o}},862:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.manageSellOffer=function(e){var t={};if(t.selling=e.selling.toXDRObject(),t.buying=e.buying.toXDRObject(),!this.isValidAmount(e.amount,!0))throw new TypeError(this.constructAmountRequirementsError(\"amount\"));if(t.amount=this._toXDRAmount(e.amount),void 0===e.price)throw new TypeError(\"price argument is required\");t.price=this._toXDRPrice(e.price),void 0!==e.offerId?e.offerId=e.offerId.toString():e.offerId=\"0\";t.offerId=o.Hyper.fromString(e.offerId);var r=new i.default.ManageSellOfferOp(t),n={};return n.body=i.default.OperationBody.manageSellOffer(r),this.setSourceAccount(n,e),new i.default.Operation(n)};var n,o=r(3740),i=(n=r(1918))&&n.__esModule?n:{default:n}},2075:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.pathPaymentStrictReceive=function(e){switch(!0){case!e.sendAsset:throw new Error(\"Must specify a send asset\");case!this.isValidAmount(e.sendMax):throw new TypeError(this.constructAmountRequirementsError(\"sendMax\"));case!e.destAsset:throw new Error(\"Must provide a destAsset for a payment operation\");case!this.isValidAmount(e.destAmount):throw new TypeError(this.constructAmountRequirementsError(\"destAmount\"))}var t={};t.sendAsset=e.sendAsset.toXDRObject(),t.sendMax=this._toXDRAmount(e.sendMax);try{t.destination=(0,i.decodeAddressToMuxedAccount)(e.destination)}catch(e){throw new Error(\"destination is invalid\")}t.destAsset=e.destAsset.toXDRObject(),t.destAmount=this._toXDRAmount(e.destAmount);var r=e.path?e.path:[];t.path=r.map((function(e){return e.toXDRObject()}));var n=new o.default.PathPaymentStrictReceiveOp(t),a={};return a.body=o.default.OperationBody.pathPaymentStrictReceive(n),this.setSourceAccount(a,e),new o.default.Operation(a)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(6160)},3874:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.pathPaymentStrictSend=function(e){switch(!0){case!e.sendAsset:throw new Error(\"Must specify a send asset\");case!this.isValidAmount(e.sendAmount):throw new TypeError(this.constructAmountRequirementsError(\"sendAmount\"));case!e.destAsset:throw new Error(\"Must provide a destAsset for a payment operation\");case!this.isValidAmount(e.destMin):throw new TypeError(this.constructAmountRequirementsError(\"destMin\"))}var t={};t.sendAsset=e.sendAsset.toXDRObject(),t.sendAmount=this._toXDRAmount(e.sendAmount);try{t.destination=(0,i.decodeAddressToMuxedAccount)(e.destination)}catch(e){throw new Error(\"destination is invalid\")}t.destAsset=e.destAsset.toXDRObject(),t.destMin=this._toXDRAmount(e.destMin);var r=e.path?e.path:[];t.path=r.map((function(e){return e.toXDRObject()}));var n=new o.default.PathPaymentStrictSendOp(t),a={};return a.body=o.default.OperationBody.pathPaymentStrictSend(n),this.setSourceAccount(a,e),new o.default.Operation(a)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(6160)},3533:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.payment=function(e){if(!e.asset)throw new Error(\"Must provide an asset for a payment operation\");if(!this.isValidAmount(e.amount))throw new TypeError(this.constructAmountRequirementsError(\"amount\"));var t={};try{t.destination=(0,i.decodeAddressToMuxedAccount)(e.destination)}catch(e){throw new Error(\"destination is invalid\")}t.asset=e.asset.toXDRObject(),t.amount=this._toXDRAmount(e.amount);var r=new o.default.PaymentOp(t),n={};return n.body=o.default.OperationBody.payment(r),this.setSourceAccount(n,e),new o.default.Operation(n)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(6160)},149:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.restoreFootprint=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=new o.default.RestoreFootprintOp({ext:new o.default.ExtensionPoint(0)}),r={body:o.default.OperationBody.restoreFootprint(t)};return this.setSourceAccount(r,null!=e?e:{}),new o.default.Operation(r)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n}},7790:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.revokeAccountSponsorship=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!a.StrKey.isValidEd25519PublicKey(e.account))throw new Error(\"account is invalid\");var t=i.default.LedgerKey.account(new i.default.LedgerKeyAccount({accountId:s.Keypair.fromPublicKey(e.account).xdrAccountId()})),r=i.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(t),n={};return n.body=i.default.OperationBody.revokeSponsorship(r),this.setSourceAccount(n,e),new i.default.Operation(n)},t.revokeClaimableBalanceSponsorship=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(\"string\"!=typeof e.balanceId)throw new Error(\"balanceId is invalid\");var t=i.default.LedgerKey.claimableBalance(new i.default.LedgerKeyClaimableBalance({balanceId:i.default.ClaimableBalanceId.fromXDR(e.balanceId,\"hex\")})),r=i.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(t),n={};return n.body=i.default.OperationBody.revokeSponsorship(r),this.setSourceAccount(n,e),new i.default.Operation(n)},t.revokeDataSponsorship=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!a.StrKey.isValidEd25519PublicKey(e.account))throw new Error(\"account is invalid\");if(\"string\"!=typeof e.name||e.name.length>64)throw new Error(\"name must be a string, up to 64 characters\");var t=i.default.LedgerKey.data(new i.default.LedgerKeyData({accountId:s.Keypair.fromPublicKey(e.account).xdrAccountId(),dataName:e.name})),r=i.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(t),n={};return n.body=i.default.OperationBody.revokeSponsorship(r),this.setSourceAccount(n,e),new i.default.Operation(n)},t.revokeLiquidityPoolSponsorship=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(\"string\"!=typeof e.liquidityPoolId)throw new Error(\"liquidityPoolId is invalid\");var t=i.default.LedgerKey.liquidityPool(new i.default.LedgerKeyLiquidityPool({liquidityPoolId:i.default.PoolId.fromXDR(e.liquidityPoolId,\"hex\")})),r=i.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(t),n={body:i.default.OperationBody.revokeSponsorship(r)};return this.setSourceAccount(n,e),new i.default.Operation(n)},t.revokeOfferSponsorship=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!a.StrKey.isValidEd25519PublicKey(e.seller))throw new Error(\"seller is invalid\");if(\"string\"!=typeof e.offerId)throw new Error(\"offerId is invalid\");var t=i.default.LedgerKey.offer(new i.default.LedgerKeyOffer({sellerId:s.Keypair.fromPublicKey(e.seller).xdrAccountId(),offerId:i.default.Int64.fromString(e.offerId)})),r=i.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(t),n={};return n.body=i.default.OperationBody.revokeSponsorship(r),this.setSourceAccount(n,e),new i.default.Operation(n)},t.revokeSignerSponsorship=function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!a.StrKey.isValidEd25519PublicKey(t.account))throw new Error(\"account is invalid\");if(t.signer.ed25519PublicKey){if(!a.StrKey.isValidEd25519PublicKey(t.signer.ed25519PublicKey))throw new Error(\"signer.ed25519PublicKey is invalid.\");var r=a.StrKey.decodeEd25519PublicKey(t.signer.ed25519PublicKey);e=new i.default.SignerKey.signerKeyTypeEd25519(r)}else if(t.signer.preAuthTx){var o;if(o=\"string\"==typeof t.signer.preAuthTx?n.from(t.signer.preAuthTx,\"hex\"):t.signer.preAuthTx,!n.isBuffer(o)||32!==o.length)throw new Error(\"signer.preAuthTx must be 32 bytes Buffer.\");e=new i.default.SignerKey.signerKeyTypePreAuthTx(o)}else{if(!t.signer.sha256Hash)throw new Error(\"signer is invalid\");var u;if(u=\"string\"==typeof t.signer.sha256Hash?n.from(t.signer.sha256Hash,\"hex\"):t.signer.sha256Hash,!n.isBuffer(u)||32!==u.length)throw new Error(\"signer.sha256Hash must be 32 bytes Buffer.\");e=new i.default.SignerKey.signerKeyTypeHashX(u)}var c=new i.default.RevokeSponsorshipOpSigner({accountId:s.Keypair.fromPublicKey(t.account).xdrAccountId(),signerKey:e}),l=i.default.RevokeSponsorshipOp.revokeSponsorshipSigner(c),f={};return f.body=i.default.OperationBody.revokeSponsorship(l),this.setSourceAccount(f,t),new i.default.Operation(f)},t.revokeTrustlineSponsorship=function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!a.StrKey.isValidEd25519PublicKey(t.account))throw new Error(\"account is invalid\");if(t.asset instanceof u.Asset)e=t.asset.toTrustLineXDRObject();else{if(!(t.asset instanceof c.LiquidityPoolId))throw new TypeError(\"asset must be an Asset or LiquidityPoolId\");e=t.asset.toXDRObject()}var r=i.default.LedgerKey.trustline(new i.default.LedgerKeyTrustLine({accountId:s.Keypair.fromPublicKey(t.account).xdrAccountId(),asset:e})),n=i.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(r),o={};return o.body=i.default.OperationBody.revokeSponsorship(n),this.setSourceAccount(o,t),new i.default.Operation(o)};var o,i=(o=r(1918))&&o.__esModule?o:{default:o},a=r(7120),s=r(6691),u=r(1764),c=r(9353)},2018:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.setOptions=function(e){var t={};if(e.inflationDest){if(!s.StrKey.isValidEd25519PublicKey(e.inflationDest))throw new Error(\"inflationDest is invalid\");t.inflationDest=a.Keypair.fromPublicKey(e.inflationDest).xdrAccountId()}if(t.clearFlags=this._checkUnsignedIntValue(\"clearFlags\",e.clearFlags),t.setFlags=this._checkUnsignedIntValue(\"setFlags\",e.setFlags),t.masterWeight=this._checkUnsignedIntValue(\"masterWeight\",e.masterWeight,u),t.lowThreshold=this._checkUnsignedIntValue(\"lowThreshold\",e.lowThreshold,u),t.medThreshold=this._checkUnsignedIntValue(\"medThreshold\",e.medThreshold,u),t.highThreshold=this._checkUnsignedIntValue(\"highThreshold\",e.highThreshold,u),void 0!==e.homeDomain&&\"string\"!=typeof e.homeDomain)throw new TypeError(\"homeDomain argument must be of type String\");if(t.homeDomain=e.homeDomain,e.signer){var r,o=this._checkUnsignedIntValue(\"signer.weight\",e.signer.weight,u),c=0;if(e.signer.ed25519PublicKey){if(!s.StrKey.isValidEd25519PublicKey(e.signer.ed25519PublicKey))throw new Error(\"signer.ed25519PublicKey is invalid.\");var l=s.StrKey.decodeEd25519PublicKey(e.signer.ed25519PublicKey);r=new i.default.SignerKey.signerKeyTypeEd25519(l),c+=1}if(e.signer.preAuthTx){if(\"string\"==typeof e.signer.preAuthTx&&(e.signer.preAuthTx=n.from(e.signer.preAuthTx,\"hex\")),!n.isBuffer(e.signer.preAuthTx)||32!==e.signer.preAuthTx.length)throw new Error(\"signer.preAuthTx must be 32 bytes Buffer.\");r=new i.default.SignerKey.signerKeyTypePreAuthTx(e.signer.preAuthTx),c+=1}if(e.signer.sha256Hash){if(\"string\"==typeof e.signer.sha256Hash&&(e.signer.sha256Hash=n.from(e.signer.sha256Hash,\"hex\")),!n.isBuffer(e.signer.sha256Hash)||32!==e.signer.sha256Hash.length)throw new Error(\"signer.sha256Hash must be 32 bytes Buffer.\");r=new i.default.SignerKey.signerKeyTypeHashX(e.signer.sha256Hash),c+=1}if(e.signer.ed25519SignedPayload){if(!s.StrKey.isValidSignedPayload(e.signer.ed25519SignedPayload))throw new Error(\"signer.ed25519SignedPayload is invalid.\");var f=s.StrKey.decodeSignedPayload(e.signer.ed25519SignedPayload),p=i.default.SignerKeyEd25519SignedPayload.fromXDR(f);r=i.default.SignerKey.signerKeyTypeEd25519SignedPayload(p),c+=1}if(1!==c)throw new Error(\"Signer object must contain exactly one of signer.ed25519PublicKey, signer.sha256Hash, signer.preAuthTx.\");t.signer=new i.default.Signer({key:r,weight:o})}var d=new i.default.SetOptionsOp(t),h={};return h.body=i.default.OperationBody.setOptions(d),this.setSourceAccount(h,e),new i.default.Operation(h)};var o,i=(o=r(1918))&&o.__esModule?o:{default:o},a=r(6691),s=r(7120);function u(e,t){if(e>=0&&e<=255)return!0;throw new Error(\"\".concat(t,\" value must be between 0 and 255\"))}},1804:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.setTrustLineFlags=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={};if(\"object\"!==a(e.flags)||0===Object.keys(e.flags).length)throw new Error(\"opts.flags must be a map of boolean flags to modify\");var r={authorized:o.default.TrustLineFlags.authorizedFlag(),authorizedToMaintainLiabilities:o.default.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(),clawbackEnabled:o.default.TrustLineFlags.trustlineClawbackEnabledFlag()},n=0,s=0;Object.keys(e.flags).forEach((function(t){if(!Object.prototype.hasOwnProperty.call(r,t))throw new Error(\"unsupported flag name specified: \".concat(t));var o=e.flags[t],i=r[t].value;!0===o?s|=i:!1===o&&(n|=i)})),t.trustor=i.Keypair.fromPublicKey(e.trustor).xdrAccountId(),t.asset=e.asset.toXDRObject(),t.clearFlags=n,t.setFlags=s;var u={body:o.default.OperationBody.setTrustLineFlags(new o.default.SetTrustLineFlagsOp(t))};return this.setSourceAccount(u,e),new o.default.Operation(u)};var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(6691);function a(e){return a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},a(e)}},7177:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.nativeToScVal=function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(f(t)){case\"object\":var o,l,p;if(null===t)return i.default.ScVal.scvVoid();if(t instanceof i.default.ScVal)return t;if(t instanceof a.Address)return t.toScVal();if(t instanceof s.Contract)return t.address().toScVal();if(t instanceof Uint8Array||n.isBuffer(t)){var d,h=Uint8Array.from(t);switch(null!==(d=null==r?void 0:r.type)&&void 0!==d?d:\"bytes\"){case\"bytes\":return i.default.ScVal.scvBytes(h);case\"symbol\":return i.default.ScVal.scvSymbol(h);case\"string\":return i.default.ScVal.scvString(h);default:throw new TypeError(\"invalid type (\".concat(r.type,\") specified for bytes-like value\"))}}if(Array.isArray(t)){if(t.length>0&&t.some((function(e){return f(e)!==f(t[0])})))throw new TypeError(\"array values (\".concat(t,\") must have the same type (types: \").concat(t.map((function(e){return f(e)})).join(\",\"),\")\"));return i.default.ScVal.scvVec(t.map((function(t){return e(t,r)})))}if(\"Object\"!==(null!==(o=null===(l=t.constructor)||void 0===l?void 0:l.name)&&void 0!==o?o:\"\"))throw new TypeError(\"cannot interpret \".concat(null===(p=t.constructor)||void 0===p?void 0:p.name,\" value as ScVal (\").concat(JSON.stringify(t),\")\"));return i.default.ScVal.scvMap(Object.entries(t).sort((function(e,t){var r=c(e,1)[0],n=c(t,1)[0];return r.localeCompare(n)})).map((function(t){var n,o,a=c(t,2),s=a[0],u=a[1],l=c(null!==(n=(null!==(o=null==r?void 0:r.type)&&void 0!==o?o:{})[s])&&void 0!==n?n:[null,null],2),f=l[0],p=l[1],d=f?{type:f}:{},h=p?{type:p}:{};return new i.default.ScMapEntry({key:e(s,d),val:e(u,h)})})));case\"number\":case\"bigint\":switch(null==r?void 0:r.type){case\"u32\":return i.default.ScVal.scvU32(t);case\"i32\":return i.default.ScVal.scvI32(t)}return new u.ScInt(t,{type:null==r?void 0:r.type}).toScVal();case\"string\":var y,m=null!==(y=null==r?void 0:r.type)&&void 0!==y?y:\"string\";switch(m){case\"string\":return i.default.ScVal.scvString(t);case\"symbol\":return i.default.ScVal.scvSymbol(t);case\"address\":return new a.Address(t).toScVal();case\"u32\":return i.default.ScVal.scvU32(parseInt(t,10));case\"i32\":return i.default.ScVal.scvI32(parseInt(t,10));default:if(u.XdrLargeInt.isType(m))return new u.XdrLargeInt(m,t).toScVal();throw new TypeError(\"invalid type (\".concat(r.type,\") specified for string value\"))}case\"boolean\":return i.default.ScVal.scvBool(t);case\"undefined\":return i.default.ScVal.scvVoid();case\"function\":return e(t());default:throw new TypeError(\"failed to convert typeof \".concat(f(t),\" (\").concat(t,\")\"))}},t.scValToNative=function e(t){var r,o;switch(t.switch().value){case i.default.ScValType.scvVoid().value:return null;case i.default.ScValType.scvU64().value:case i.default.ScValType.scvI64().value:return t.value().toBigInt();case i.default.ScValType.scvU128().value:case i.default.ScValType.scvI128().value:case i.default.ScValType.scvU256().value:case i.default.ScValType.scvI256().value:return(0,u.scValToBigInt)(t);case i.default.ScValType.scvVec().value:return(null!==(r=t.vec())&&void 0!==r?r:[]).map(e);case i.default.ScValType.scvAddress().value:return a.Address.fromScVal(t).toString();case i.default.ScValType.scvMap().value:return Object.fromEntries((null!==(o=t.map())&&void 0!==o?o:[]).map((function(t){return[e(t.key()),e(t.val())]})));case i.default.ScValType.scvBool().value:case i.default.ScValType.scvU32().value:case i.default.ScValType.scvI32().value:case i.default.ScValType.scvBytes().value:return t.value();case i.default.ScValType.scvSymbol().value:case i.default.ScValType.scvString().value:var s=t.value();if(n.isBuffer(s)||ArrayBuffer.isView(s))try{return(new TextDecoder).decode(s)}catch(e){return new Uint8Array(s.buffer)}return s;case i.default.ScValType.scvTimepoint().value:case i.default.ScValType.scvDuration().value:return new i.default.Uint64(t.value()).toBigInt();case i.default.ScValType.scvError().value:if(t.error().switch().value===i.default.ScErrorType.sceContract().value)return{type:\"contract\",code:t.error().contractCode()};var c=t.error();return{type:\"system\",code:c.code().value,value:c.code().name};default:return t.value()}};var o,i=(o=r(1918))&&o.__esModule?o:{default:o},a=r(1180),s=r(7452),u=r(8549);function c(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var n,o,i,a,s=[],u=!0,c=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(s.push(n.value),s.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return l(e,t);var r={}.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?l(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function l(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function f(e){return f=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},f(e)}},225:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.SignerKey=void 0;var n,o=(n=r(1918))&&n.__esModule?n:{default:n},i=r(7120);function a(e){return a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},a(e)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,u(n.key),n)}}function u(e){var t=function(e,t){if(\"object\"!=a(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=a(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==a(t)?t:t+\"\"}t.SignerKey=function(){return function(e,t,r){return t&&s(e.prototype,t),r&&s(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}((function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e)}),null,[{key:\"decodeAddress\",value:function(e){var t={ed25519PublicKey:o.default.SignerKey.signerKeyTypeEd25519,preAuthTx:o.default.SignerKey.signerKeyTypePreAuthTx,sha256Hash:o.default.SignerKey.signerKeyTypeHashX,signedPayload:o.default.SignerKey.signerKeyTypeEd25519SignedPayload},r=i.StrKey.getVersionByteForPrefix(e),n=t[r];if(!n)throw new Error(\"invalid signer key type (\".concat(r,\")\"));var a=(0,i.decodeCheck)(r,e);return n(\"signedPayload\"===r?new o.default.SignerKeyEd25519SignedPayload({ed25519:a.slice(0,32),payload:a.slice(36)}):a)}},{key:\"encodeSignerKey\",value:function(e){var t,r;switch(e.switch()){case o.default.SignerKeyType.signerKeyTypeEd25519():t=\"ed25519PublicKey\",r=e.value();break;case o.default.SignerKeyType.signerKeyTypePreAuthTx():t=\"preAuthTx\",r=e.value();break;case o.default.SignerKeyType.signerKeyTypeHashX():t=\"sha256Hash\",r=e.value();break;case o.default.SignerKeyType.signerKeyTypeEd25519SignedPayload():t=\"signedPayload\",r=e.ed25519SignedPayload().toXDR(\"raw\");break;default:throw new Error(\"invalid SignerKey (type: \".concat(e.switch(),\")\"))}return(0,i.encodeCheck)(t,r)}}])}()},15:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.FastSigning=void 0,t.generate=function(e){return o.generate(e)},t.sign=function(e,t){return o.sign(e,t)},t.verify=function(e,t,r){return o.verify(e,t,r)};var o={};t.FastSigning=\"undefined\"==typeof window?function(){var e;try{e=r(Object(function(){var e=new Error(\"Cannot find module 'sodium-native'\");throw e.code=\"MODULE_NOT_FOUND\",e}()))}catch(e){return i()}return Object.keys(e).length?(o.generate=function(t){var r=n.alloc(e.crypto_sign_PUBLICKEYBYTES),o=n.alloc(e.crypto_sign_SECRETKEYBYTES);return e.crypto_sign_seed_keypair(r,o,t),r},o.sign=function(t,r){t=n.from(t);var o=n.alloc(e.crypto_sign_BYTES);return e.crypto_sign_detached(o,t,r),o},o.verify=function(t,r,o){t=n.from(t);try{return e.crypto_sign_verify_detached(r,t,o)}catch(e){return!1}},!0):i()}():i();function i(){var e=r(4940);return o.generate=function(t){var r=new Uint8Array(t),o=e.sign.keyPair.fromSeed(r);return n.from(o.publicKey)},o.sign=function(t,r){t=n.from(t),t=new Uint8Array(t.toJSON().data),r=new Uint8Array(r.toJSON().data);var o=e.sign.detached(t,r);return n.from(o)},o.verify=function(t,r,o){return t=n.from(t),t=new Uint8Array(t.toJSON().data),r=new Uint8Array(r.toJSON().data),o=new Uint8Array(o.toJSON().data),e.sign.detached.verify(t,r,o)},!1}},4062:(e,t)=>{\"use strict\";function r(e){return r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},r(e)}function n(e){return function(e){if(Array.isArray(e))return e}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||function(e,t){if(e){if(\"string\"==typeof e)return o(e,t);var r={}.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,a(n.key),n)}}function a(e){var t=function(e,t){if(\"object\"!=r(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,t||\"default\");if(\"object\"!=r(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==r(t)?t:t+\"\"}Object.defineProperty(t,\"__esModule\",{value:!0}),t.Soroban=void 0;t.Soroban=function(){return e=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e)},r=[{key:\"formatTokenAmount\",value:function(e,t){if(e.includes(\".\"))throw new TypeError(\"No decimals are allowed\");var r=e;return t>0&&(r=t>r.length?[\"0\",r.toString().padStart(t,\"0\")].join(\".\"):[r.slice(0,-t),r.slice(-t)].join(\".\")),r.replace(/(\\.\\d*?)0+$/,\"$1\")}},{key:\"parseTokenAmount\",value:function(e,t){var r,o=n(e.split(\".\").slice()),i=o[0],a=o[1];if(o.slice(2).length)throw new Error(\"Invalid decimal value: \".concat(e));return BigInt(i+(null!==(r=null==a?void 0:a.padEnd(t,\"0\"))&&void 0!==r?r:\"0\".repeat(t))).toString()}}],(t=null)&&i(e.prototype,t),r&&i(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e;var e,t,r}()},4842:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.SorobanDataBuilder=void 0;var n,o=(n=r(1918))&&n.__esModule?n:{default:n};function i(e){return i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i(e)}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,s(n.key),n)}}function s(e){var t=function(e,t){if(\"object\"!=i(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=i(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==i(t)?t:t+\"\"}t.SorobanDataBuilder=function(){return function(e,t,r){return t&&a(e.prototype,t),r&&a(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}((function e(t){var r;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),function(e,t,r){(t=s(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r}(this,\"_data\",void 0),r=t?\"string\"==typeof t||ArrayBuffer.isView(t)?e.fromXDR(t):e.fromXDR(t.toXDR()):new o.default.SorobanTransactionData({resources:new o.default.SorobanResources({footprint:new o.default.LedgerFootprint({readOnly:[],readWrite:[]}),instructions:0,readBytes:0,writeBytes:0}),ext:new o.default.ExtensionPoint(0),resourceFee:new o.default.Int64(0)}),this._data=r}),[{key:\"setResourceFee\",value:function(e){return this._data.resourceFee(new o.default.Int64(e)),this}},{key:\"setResources\",value:function(e,t,r){return this._data.resources().instructions(e),this._data.resources().readBytes(t),this._data.resources().writeBytes(r),this}},{key:\"appendFootprint\",value:function(e,t){return this.setFootprint(this.getReadOnly().concat(e),this.getReadWrite().concat(t))}},{key:\"setFootprint\",value:function(e,t){return null!==e&&this.setReadOnly(e),null!==t&&this.setReadWrite(t),this}},{key:\"setReadOnly\",value:function(e){return this._data.resources().footprint().readOnly(null!=e?e:[]),this}},{key:\"setReadWrite\",value:function(e){return this._data.resources().footprint().readWrite(null!=e?e:[]),this}},{key:\"build\",value:function(){return o.default.SorobanTransactionData.fromXDR(this._data.toXDR())}},{key:\"getReadOnly\",value:function(){return this.getFootprint().readOnly()}},{key:\"getReadWrite\",value:function(){return this.getFootprint().readWrite()}},{key:\"getFootprint\",value:function(){return this._data.resources().footprint()}}],[{key:\"fromXDR\",value:function(e){return o.default.SorobanTransactionData.fromXDR(e,\"string\"==typeof e?\"base64\":\"raw\")}}])}()},7120:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.StrKey=void 0,t.decodeCheck=d,t.encodeCheck=h;var o,i=(o=r(5360))&&o.__esModule?o:{default:o},a=r(1346);function s(e){return s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},s(e)}function u(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,c(n.key),n)}}function c(e){var t=function(e,t){if(\"object\"!=s(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=s(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==s(t)?t:t+\"\"}var l={ed25519PublicKey:48,ed25519SecretSeed:144,med25519PublicKey:96,preAuthTx:152,sha256Hash:184,signedPayload:120,contract:16},f={G:\"ed25519PublicKey\",S:\"ed25519SecretSeed\",M:\"med25519PublicKey\",T:\"preAuthTx\",X:\"sha256Hash\",P:\"signedPayload\",C:\"contract\"};t.StrKey=function(){return function(e,t,r){return t&&u(e.prototype,t),r&&u(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}((function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e)}),null,[{key:\"encodeEd25519PublicKey\",value:function(e){return h(\"ed25519PublicKey\",e)}},{key:\"decodeEd25519PublicKey\",value:function(e){return d(\"ed25519PublicKey\",e)}},{key:\"isValidEd25519PublicKey\",value:function(e){return p(\"ed25519PublicKey\",e)}},{key:\"encodeEd25519SecretSeed\",value:function(e){return h(\"ed25519SecretSeed\",e)}},{key:\"decodeEd25519SecretSeed\",value:function(e){return d(\"ed25519SecretSeed\",e)}},{key:\"isValidEd25519SecretSeed\",value:function(e){return p(\"ed25519SecretSeed\",e)}},{key:\"encodeMed25519PublicKey\",value:function(e){return h(\"med25519PublicKey\",e)}},{key:\"decodeMed25519PublicKey\",value:function(e){return d(\"med25519PublicKey\",e)}},{key:\"isValidMed25519PublicKey\",value:function(e){return p(\"med25519PublicKey\",e)}},{key:\"encodePreAuthTx\",value:function(e){return h(\"preAuthTx\",e)}},{key:\"decodePreAuthTx\",value:function(e){return d(\"preAuthTx\",e)}},{key:\"encodeSha256Hash\",value:function(e){return h(\"sha256Hash\",e)}},{key:\"decodeSha256Hash\",value:function(e){return d(\"sha256Hash\",e)}},{key:\"encodeSignedPayload\",value:function(e){return h(\"signedPayload\",e)}},{key:\"decodeSignedPayload\",value:function(e){return d(\"signedPayload\",e)}},{key:\"isValidSignedPayload\",value:function(e){return p(\"signedPayload\",e)}},{key:\"encodeContract\",value:function(e){return h(\"contract\",e)}},{key:\"decodeContract\",value:function(e){return d(\"contract\",e)}},{key:\"isValidContract\",value:function(e){return p(\"contract\",e)}},{key:\"getVersionByteForPrefix\",value:function(e){return f[e[0]]}}])}();function p(e,t){if(\"string\"!=typeof t)return!1;switch(e){case\"ed25519PublicKey\":case\"ed25519SecretSeed\":case\"preAuthTx\":case\"sha256Hash\":case\"contract\":if(56!==t.length)return!1;break;case\"med25519PublicKey\":if(69!==t.length)return!1;break;case\"signedPayload\":if(t.length<56||t.length>165)return!1;break;default:return!1}var r=\"\";try{r=d(e,t)}catch(e){return!1}switch(e){case\"ed25519PublicKey\":case\"ed25519SecretSeed\":case\"preAuthTx\":case\"sha256Hash\":case\"contract\":return 32===r.length;case\"med25519PublicKey\":return 40===r.length;case\"signedPayload\":return r.length>=40&&r.length<=100;default:return!1}}function d(e,t){if(\"string\"!=typeof t)throw new TypeError(\"encoded argument must be of type String\");var r=i.default.decode(t),o=r[0],s=r.slice(0,-2),u=s.slice(1),c=r.slice(-2);if(t!==i.default.encode(r))throw new Error(\"invalid encoded string\");var f=l[e];if(void 0===f)throw new Error(\"\".concat(e,\" is not a valid version byte name. \")+\"Expected one of \".concat(Object.keys(l).join(\", \")));if(o!==f)throw new Error(\"invalid version byte. expected \".concat(f,\", got \").concat(o));var p=y(s);if(!(0,a.verifyChecksum)(p,c))throw new Error(\"invalid checksum\");return n.from(u)}function h(e,t){if(null==t)throw new Error(\"cannot encode null data\");var r=l[e];if(void 0===r)throw new Error(\"\".concat(e,\" is not a valid version byte name. \")+\"Expected one of \".concat(Object.keys(l).join(\", \")));t=n.from(t);var o=n.from([r]),a=n.concat([o,t]),s=n.from(y(a)),u=n.concat([a,s]);return i.default.encode(u)}function y(e){for(var t=[0,4129,8258,12387,16516,20645,24774,28903,33032,37161,41290,45419,49548,53677,57806,61935,4657,528,12915,8786,21173,17044,29431,25302,37689,33560,45947,41818,54205,50076,62463,58334,9314,13379,1056,5121,25830,29895,17572,21637,42346,46411,34088,38153,58862,62927,50604,54669,13907,9842,5649,1584,30423,26358,22165,18100,46939,42874,38681,34616,63455,59390,55197,51132,18628,22757,26758,30887,2112,6241,10242,14371,51660,55789,59790,63919,35144,39273,43274,47403,23285,19156,31415,27286,6769,2640,14899,10770,56317,52188,64447,60318,39801,35672,47931,43802,27814,31879,19684,23749,11298,15363,3168,7233,60846,64911,52716,56781,44330,48395,36200,40265,32407,28342,24277,20212,15891,11826,7761,3696,65439,61374,57309,53244,48923,44858,40793,36728,37256,33193,45514,41451,53516,49453,61774,57711,4224,161,12482,8419,20484,16421,28742,24679,33721,37784,41979,46042,49981,54044,58239,62302,689,4752,8947,13010,16949,21012,25207,29270,46570,42443,38312,34185,62830,58703,54572,50445,13538,9411,5280,1153,29798,25671,21540,17413,42971,47098,34713,38840,59231,63358,50973,55100,9939,14066,1681,5808,26199,30326,17941,22068,55628,51565,63758,59695,39368,35305,47498,43435,22596,18533,30726,26663,6336,2273,14466,10403,52093,56156,60223,64286,35833,39896,43963,48026,19061,23124,27191,31254,2801,6864,10931,14994,64814,60687,56684,52557,48554,44427,40424,36297,31782,27655,23652,19525,15522,11395,7392,3265,61215,65342,53085,57212,44955,49082,36825,40952,28183,32310,20053,24180,11923,16050,3793,7920],r=0,n=0;n<e.length;n+=1){r=r<<8^t[r>>8^e[n]],r&=65535}var o=new Uint8Array(2);return o[0]=255&r,o[1]=r>>8&255,o}},380:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;function o(e){return o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},o(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.Transaction=void 0;var i,a=(i=r(1918))&&i.__esModule?i:{default:i},s=r(9152),u=r(7120),c=r(7237),l=r(4172),f=r(3758),p=r(6160);function d(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,h(n.key),n)}}function h(e){var t=function(e,t){if(\"object\"!=o(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=o(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==o(t)?t:t+\"\"}function y(e,t,r){return t=v(t),function(e,t){if(t&&(\"object\"==o(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,m()?Reflect.construct(t,r||[],v(e).constructor):t.apply(e,r))}function m(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(m=function(){return!!e})()}function v(e){return v=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},v(e)}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}t.Transaction=function(e){function t(e,r){var o;if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),\"string\"==typeof e){var i=n.from(e,\"base64\");e=a.default.TransactionEnvelope.fromXDR(i)}var s=e.switch();if(s!==a.default.EnvelopeType.envelopeTypeTxV0()&&s!==a.default.EnvelopeType.envelopeTypeTx())throw new Error(\"Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an \".concat(s.name,\".\"));var l=e.value(),f=l.tx(),d=f.fee().toString();if((o=y(this,t,[f,(l.signatures()||[]).slice(),d,r]))._envelopeType=s,o._memo=f.memo(),o._sequence=f.seqNum().toString(),o._envelopeType===a.default.EnvelopeType.envelopeTypeTxV0())o._source=u.StrKey.encodeEd25519PublicKey(o.tx.sourceAccountEd25519());else o._source=(0,p.encodeMuxedAccountToAddress)(o.tx.sourceAccount());var h=null,m=null;switch(o._envelopeType){case a.default.EnvelopeType.envelopeTypeTxV0():m=f.timeBounds();break;case a.default.EnvelopeType.envelopeTypeTx():switch(f.cond().switch()){case a.default.PreconditionType.precondTime():m=f.cond().timeBounds();break;case a.default.PreconditionType.precondV2():m=(h=f.cond().v2()).timeBounds()}}if(m&&(o._timeBounds={minTime:m.minTime().toString(),maxTime:m.maxTime().toString()}),h){var v=h.ledgerBounds();v&&(o._ledgerBounds={minLedger:v.minLedger(),maxLedger:v.maxLedger()});var g=h.minSeqNum();g&&(o._minAccountSequence=g.toString()),o._minAccountSequenceAge=h.minSeqAge(),o._minAccountSequenceLedgerGap=h.minSeqLedgerGap(),o._extraSigners=h.extraSigners()}var b=f.operations()||[];return o._operations=b.map((function(e){return c.Operation.fromXDRObject(e)})),o}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&g(e,t)}(t,e),function(e,t,r){return t&&d(e.prototype,t),r&&d(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"timeBounds\",get:function(){return this._timeBounds},set:function(e){throw new Error(\"Transaction is immutable\")}},{key:\"ledgerBounds\",get:function(){return this._ledgerBounds},set:function(e){throw new Error(\"Transaction is immutable\")}},{key:\"minAccountSequence\",get:function(){return this._minAccountSequence},set:function(e){throw new Error(\"Transaction is immutable\")}},{key:\"minAccountSequenceAge\",get:function(){return this._minAccountSequenceAge},set:function(e){throw new Error(\"Transaction is immutable\")}},{key:\"minAccountSequenceLedgerGap\",get:function(){return this._minAccountSequenceLedgerGap},set:function(e){throw new Error(\"Transaction is immutable\")}},{key:\"extraSigners\",get:function(){return this._extraSigners},set:function(e){throw new Error(\"Transaction is immutable\")}},{key:\"sequence\",get:function(){return this._sequence},set:function(e){throw new Error(\"Transaction is immutable\")}},{key:\"source\",get:function(){return this._source},set:function(e){throw new Error(\"Transaction is immutable\")}},{key:\"operations\",get:function(){return this._operations},set:function(e){throw new Error(\"Transaction is immutable\")}},{key:\"memo\",get:function(){return l.Memo.fromXDRObject(this._memo)},set:function(e){throw new Error(\"Transaction is immutable\")}},{key:\"signatureBase\",value:function(){var e=this.tx;this._envelopeType===a.default.EnvelopeType.envelopeTypeTxV0()&&(e=a.default.Transaction.fromXDR(n.concat([a.default.PublicKeyType.publicKeyTypeEd25519().toXDR(),e.toXDR()])));var t=new a.default.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTx(e);return new a.default.TransactionSignaturePayload({networkId:a.default.Hash.fromXDR((0,s.hash)(this.networkPassphrase)),taggedTransaction:t}).toXDR()}},{key:\"toEnvelope\",value:function(){var e,t=this.tx.toXDR(),r=this.signatures.slice();switch(this._envelopeType){case a.default.EnvelopeType.envelopeTypeTxV0():e=new a.default.TransactionEnvelope.envelopeTypeTxV0(new a.default.TransactionV0Envelope({tx:a.default.TransactionV0.fromXDR(t),signatures:r}));break;case a.default.EnvelopeType.envelopeTypeTx():e=new a.default.TransactionEnvelope.envelopeTypeTx(new a.default.TransactionV1Envelope({tx:a.default.Transaction.fromXDR(t),signatures:r}));break;default:throw new Error(\"Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an \".concat(this._envelopeType.name,\".\"))}return e}},{key:\"getClaimableBalanceId\",value:function(e){if(!Number.isInteger(e)||e<0||e>=this.operations.length)throw new RangeError(\"invalid operation index\");var t=this.operations[e];try{t=c.Operation.createClaimableBalance(t)}catch(e){throw new TypeError(\"expected createClaimableBalance, got \".concat(t.type,\": \").concat(e))}var r=u.StrKey.decodeEd25519PublicKey((0,p.extractBaseAddress)(this.source)),n=a.default.HashIdPreimage.envelopeTypeOpId(new a.default.HashIdPreimageOperationId({sourceAccount:a.default.AccountId.publicKeyTypeEd25519(r),seqNum:a.default.SequenceNumber.fromString(this.sequence),opNum:e})),o=(0,s.hash)(n.toXDR(\"raw\"));return a.default.ClaimableBalanceId.claimableBalanceIdTypeV0(o).toXDR(\"hex\")}}])}(f.TransactionBase)},3758:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.TransactionBase=void 0;var o,i=(o=r(1918))&&o.__esModule?o:{default:o},a=r(9152),s=r(6691);function u(e){return u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},u(e)}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,l(n.key),n)}}function l(e){var t=function(e,t){if(\"object\"!=u(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=u(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==u(t)?t:t+\"\"}t.TransactionBase=function(){return function(e,t,r){return t&&c(e.prototype,t),r&&c(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}((function e(t,r,n,o){if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),\"string\"!=typeof o)throw new Error(\"Invalid passphrase provided to Transaction: expected a string but got a \".concat(u(o)));this._networkPassphrase=o,this._tx=t,this._signatures=r,this._fee=n}),[{key:\"signatures\",get:function(){return this._signatures},set:function(e){throw new Error(\"Transaction is immutable\")}},{key:\"tx\",get:function(){return this._tx},set:function(e){throw new Error(\"Transaction is immutable\")}},{key:\"fee\",get:function(){return this._fee},set:function(e){throw new Error(\"Transaction is immutable\")}},{key:\"networkPassphrase\",get:function(){return this._networkPassphrase},set:function(e){this._networkPassphrase=e}},{key:\"sign\",value:function(){for(var e=this,t=this.hash(),r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];n.forEach((function(r){var n=r.signDecorated(t);e.signatures.push(n)}))}},{key:\"getKeypairSignature\",value:function(e){return e.sign(this.hash()).toString(\"base64\")}},{key:\"addSignature\",value:function(){var e,t,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\";if(!o||\"string\"!=typeof o)throw new Error(\"Invalid signature\");if(!r||\"string\"!=typeof r)throw new Error(\"Invalid publicKey\");var a=n.from(o,\"base64\");try{t=(e=s.Keypair.fromPublicKey(r)).signatureHint()}catch(e){throw new Error(\"Invalid publicKey\")}if(!e.verify(this.hash(),a))throw new Error(\"Invalid signature\");this.signatures.push(new i.default.DecoratedSignature({hint:t,signature:a}))}},{key:\"addDecoratedSignature\",value:function(e){this.signatures.push(e)}},{key:\"signHashX\",value:function(e){if(\"string\"==typeof e&&(e=n.from(e,\"hex\")),e.length>64)throw new Error(\"preimage cannnot be longer than 64 bytes\");var t=e,r=(0,a.hash)(e),o=r.slice(r.length-4);this.signatures.push(new i.default.DecoratedSignature({hint:o,signature:t}))}},{key:\"hash\",value:function(){return(0,a.hash)(this.signatureBase())}},{key:\"signatureBase\",value:function(){throw new Error(\"Implement in subclass\")}},{key:\"toEnvelope\",value:function(){throw new Error(\"Implement in subclass\")}},{key:\"toXDR\",value:function(){return this.toEnvelope().toXDR().toString(\"base64\")}}])}()},6396:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.TransactionBuilder=t.TimeoutInfinite=t.BASE_FEE=void 0,t.isValidDate=T;var n=r(3740),o=y(r(1242)),i=y(r(1918)),a=r(2135),s=r(2243),u=r(6160),c=r(380),l=r(9260),f=r(4842),p=r(7120),d=r(225),h=r(4172);function y(e){return e&&e.__esModule?e:{default:e}}function m(e){return m=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},m(e)}function v(e){return function(e){if(Array.isArray(e))return g(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||function(e,t){if(e){if(\"string\"==typeof e)return g(e,t);var r={}.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?g(e,t):void 0}}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function g(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function b(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function w(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?b(Object(r),!0).forEach((function(t){S(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):b(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function S(e,t,r){return(t=_(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function E(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,_(n.key),n)}}function _(e){var t=function(e,t){if(\"object\"!=m(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=m(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==m(t)?t:t+\"\"}var k=t.BASE_FEE=\"100\";t.TimeoutInfinite=0,t.TransactionBuilder=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),!t)throw new Error(\"must specify source account for the transaction\");if(void 0===r.fee)throw new Error(\"must specify fee for the transaction (in stroops)\");this.source=t,this.operations=[],this.baseFee=r.fee,this.timebounds=r.timebounds?w({},r.timebounds):null,this.ledgerbounds=r.ledgerbounds?w({},r.ledgerbounds):null,this.minAccountSequence=r.minAccountSequence||null,this.minAccountSequenceAge=r.minAccountSequenceAge||null,this.minAccountSequenceLedgerGap=r.minAccountSequenceLedgerGap||null,this.extraSigners=r.extraSigners?v(r.extraSigners):null,this.memo=r.memo||h.Memo.none(),this.networkPassphrase=r.networkPassphrase||null,this.sorobanData=r.sorobanData?new f.SorobanDataBuilder(r.sorobanData).build():null}return t=e,y=[{key:\"cloneFrom\",value:function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(t instanceof c.Transaction))throw new TypeError(\"expected a 'Transaction', got: \".concat(t));var n,o=(BigInt(t.sequence)-1n).toString();if(p.StrKey.isValidMed25519PublicKey(t.source))n=s.MuxedAccount.fromAddress(t.source,o);else{if(!p.StrKey.isValidEd25519PublicKey(t.source))throw new TypeError(\"unsupported tx source account: \".concat(t.source));n=new a.Account(t.source,o)}var i=new e(n,w({fee:(parseInt(t.fee,10)/t.operations.length||k).toString(),memo:t.memo,networkPassphrase:t.networkPassphrase,timebounds:t.timeBounds,ledgerbounds:t.ledgerBounds,minAccountSequence:t.minAccountSequence,minAccountSequenceAge:t.minAccountSequenceAge,minAccountSequenceLedgerGap:t.minAccountSequenceLedgerGap,extraSigners:t.extraSigners},r));return t._tx.operations().forEach((function(e){return i.addOperation(e)})),i}},{key:\"buildFeeBumpTransaction\",value:function(e,t,r,n){var a=r.operations.length,s=new o.default(r.fee).div(a),c=new o.default(t);if(c.lt(s))throw new Error(\"Invalid baseFee, it should be at least \".concat(s,\" stroops.\"));var f=new o.default(k);if(c.lt(f))throw new Error(\"Invalid baseFee, it should be at least \".concat(f,\" stroops.\"));var p,d=r.toEnvelope();if(d.switch()===i.default.EnvelopeType.envelopeTypeTxV0()){var h=d.v0().tx(),y=new i.default.Transaction({sourceAccount:new i.default.MuxedAccount.keyTypeEd25519(h.sourceAccountEd25519()),fee:h.fee(),seqNum:h.seqNum(),cond:i.default.Preconditions.precondTime(h.timeBounds()),memo:h.memo(),operations:h.operations(),ext:new i.default.TransactionExt(0)});d=new i.default.TransactionEnvelope.envelopeTypeTx(new i.default.TransactionV1Envelope({tx:y,signatures:d.v0().signatures()}))}p=\"string\"==typeof e?(0,u.decodeAddressToMuxedAccount)(e):e.xdrMuxedAccount();var m=new i.default.FeeBumpTransaction({feeSource:p,fee:i.default.Int64.fromString(c.times(a+1).toString()),innerTx:i.default.FeeBumpTransactionInnerTx.envelopeTypeTx(d.v1()),ext:new i.default.FeeBumpTransactionExt(0)}),v=new i.default.FeeBumpTransactionEnvelope({tx:m,signatures:[]}),g=new i.default.TransactionEnvelope.envelopeTypeTxFeeBump(v);return new l.FeeBumpTransaction(g,n)}},{key:\"fromXDR\",value:function(e,t){return\"string\"==typeof e&&(e=i.default.TransactionEnvelope.fromXDR(e,\"base64\")),e.switch()===i.default.EnvelopeType.envelopeTypeTxFeeBump()?new l.FeeBumpTransaction(e,t):new c.Transaction(e,t)}}],(r=[{key:\"addOperation\",value:function(e){return this.operations.push(e),this}},{key:\"addOperationAt\",value:function(e,t){return this.operations.splice(t,0,e),this}},{key:\"clearOperations\",value:function(){return this.operations=[],this}},{key:\"clearOperationAt\",value:function(e){return this.operations.splice(e,1),this}},{key:\"addMemo\",value:function(e){return this.memo=e,this}},{key:\"setTimeout\",value:function(e){if(null!==this.timebounds&&this.timebounds.maxTime>0)throw new Error(\"TimeBounds.max_time has been already set - setting timeout would overwrite it.\");if(e<0)throw new Error(\"timeout cannot be negative\");if(e>0){var t=Math.floor(Date.now()/1e3)+e;null===this.timebounds?this.timebounds={minTime:0,maxTime:t}:this.timebounds={minTime:this.timebounds.minTime,maxTime:t}}else this.timebounds={minTime:0,maxTime:0};return this}},{key:\"setTimebounds\",value:function(e,t){if(\"number\"==typeof e&&(e=new Date(1e3*e)),\"number\"==typeof t&&(t=new Date(1e3*t)),null!==this.timebounds)throw new Error(\"TimeBounds has been already set - setting timebounds would overwrite it.\");var r=Math.floor(e.valueOf()/1e3),n=Math.floor(t.valueOf()/1e3);if(r<0)throw new Error(\"min_time cannot be negative\");if(n<0)throw new Error(\"max_time cannot be negative\");if(n>0&&r>n)throw new Error(\"min_time cannot be greater than max_time\");return this.timebounds={minTime:r,maxTime:n},this}},{key:\"setLedgerbounds\",value:function(e,t){if(null!==this.ledgerbounds)throw new Error(\"LedgerBounds has been already set - setting ledgerbounds would overwrite it.\");if(e<0)throw new Error(\"min_ledger cannot be negative\");if(t<0)throw new Error(\"max_ledger cannot be negative\");if(t>0&&e>t)throw new Error(\"min_ledger cannot be greater than max_ledger\");return this.ledgerbounds={minLedger:e,maxLedger:t},this}},{key:\"setMinAccountSequence\",value:function(e){if(null!==this.minAccountSequence)throw new Error(\"min_account_sequence has been already set - setting min_account_sequence would overwrite it.\");return this.minAccountSequence=e,this}},{key:\"setMinAccountSequenceAge\",value:function(e){if(\"number\"!=typeof e)throw new Error(\"min_account_sequence_age must be a number\");if(null!==this.minAccountSequenceAge)throw new Error(\"min_account_sequence_age has been already set - setting min_account_sequence_age would overwrite it.\");if(e<0)throw new Error(\"min_account_sequence_age cannot be negative\");return this.minAccountSequenceAge=e,this}},{key:\"setMinAccountSequenceLedgerGap\",value:function(e){if(null!==this.minAccountSequenceLedgerGap)throw new Error(\"min_account_sequence_ledger_gap has been already set - setting min_account_sequence_ledger_gap would overwrite it.\");if(e<0)throw new Error(\"min_account_sequence_ledger_gap cannot be negative\");return this.minAccountSequenceLedgerGap=e,this}},{key:\"setExtraSigners\",value:function(e){if(!Array.isArray(e))throw new Error(\"extra_signers must be an array of strings.\");if(null!==this.extraSigners)throw new Error(\"extra_signers has been already set - setting extra_signers would overwrite it.\");if(e.length>2)throw new Error(\"extra_signers cannot be longer than 2 elements.\");return this.extraSigners=v(e),this}},{key:\"setNetworkPassphrase\",value:function(e){return this.networkPassphrase=e,this}},{key:\"setSorobanData\",value:function(e){return this.sorobanData=new f.SorobanDataBuilder(e).build(),this}},{key:\"build\",value:function(){var e=new o.default(this.source.sequenceNumber()).plus(1),t={fee:new o.default(this.baseFee).times(this.operations.length).toNumber(),seqNum:i.default.SequenceNumber.fromString(e.toString()),memo:this.memo?this.memo.toXDRObject():null};if(null===this.timebounds||void 0===this.timebounds.minTime||void 0===this.timebounds.maxTime)throw new Error(\"TimeBounds has to be set or you must call setTimeout(TimeoutInfinite).\");T(this.timebounds.minTime)&&(this.timebounds.minTime=this.timebounds.minTime.getTime()/1e3),T(this.timebounds.maxTime)&&(this.timebounds.maxTime=this.timebounds.maxTime.getTime()/1e3),this.timebounds.minTime=n.UnsignedHyper.fromString(this.timebounds.minTime.toString()),this.timebounds.maxTime=n.UnsignedHyper.fromString(this.timebounds.maxTime.toString());var r=new i.default.TimeBounds(this.timebounds);if(this.hasV2Preconditions()){var a=null;null!==this.ledgerbounds&&(a=new i.default.LedgerBounds(this.ledgerbounds));var s=this.minAccountSequence||\"0\";s=i.default.SequenceNumber.fromString(s);var l=n.UnsignedHyper.fromString(null!==this.minAccountSequenceAge?this.minAccountSequenceAge.toString():\"0\"),f=this.minAccountSequenceLedgerGap||0,p=null!==this.extraSigners?this.extraSigners.map(d.SignerKey.decodeAddress):[];t.cond=i.default.Preconditions.precondV2(new i.default.PreconditionsV2({timeBounds:r,ledgerBounds:a,minSeqNum:s,minSeqAge:l,minSeqLedgerGap:f,extraSigners:p}))}else t.cond=i.default.Preconditions.precondTime(r);t.sourceAccount=(0,u.decodeAddressToMuxedAccount)(this.source.accountId()),this.sorobanData?t.ext=new i.default.TransactionExt(1,this.sorobanData):t.ext=new i.default.TransactionExt(0,i.default.Void);var h=new i.default.Transaction(t);h.operations(this.operations);var y=new i.default.TransactionEnvelope.envelopeTypeTx(new i.default.TransactionV1Envelope({tx:h})),m=new c.Transaction(y,this.networkPassphrase);return this.source.incrementSequenceNumber(),m}},{key:\"hasV2Preconditions\",value:function(){return null!==this.ledgerbounds||null!==this.minAccountSequence||null!==this.minAccountSequenceAge||null!==this.minAccountSequenceLedgerGap||null!==this.extraSigners&&this.extraSigners.length>0}}])&&E(t.prototype,r),y&&E(t,y),Object.defineProperty(t,\"prototype\",{writable:!1}),t;var t,r,y}();function T(e){return e instanceof Date&&!isNaN(e)}},1242:(e,t,r)=>{\"use strict\";var n;Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var o=((n=r(1594))&&n.__esModule?n:{default:n}).default.clone();o.DEBUG=!0;t.default=o},1346:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.verifyChecksum=function(e,t){if(e.length!==t.length)return!1;if(0===e.length)return!0;for(var r=0;r<e.length;r+=1)if(e[r]!==t[r])return!1;return!0}},4151:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.best_r=function(e){var t,r,n=new o.default(e),s=[[new o.default(0),new o.default(1)],[new o.default(1),new o.default(0)]],u=2;for(;!n.gt(a);){t=n.integerValue(o.default.ROUND_FLOOR),r=n.minus(t);var c=t.times(s[u-1][0]).plus(s[u-2][0]),l=t.times(s[u-1][1]).plus(s[u-2][1]);if(c.gt(a)||l.gt(a))break;if(s.push([c,l]),r.eq(0))break;n=new o.default(1).div(r),u+=1}var f=(h=s[s.length-1],y=2,function(e){if(Array.isArray(e))return e}(h)||function(e,t){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var n,o,i,a,s=[],u=!0,c=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(s.push(n.value),s.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(h,y)||function(e,t){if(e){if(\"string\"==typeof e)return i(e,t);var r={}.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(h,y)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),p=f[0],d=f[1];var h,y;if(p.isZero()||d.isZero())throw new Error(\"Couldn't find approximation\");return[p.toNumber(),d.toNumber()]};var n,o=(n=r(1242))&&n.__esModule?n:{default:n};function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}var a=2147483647},6160:(e,t,r)=>{\"use strict\";var n=r(8287).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.decodeAddressToMuxedAccount=s,t.encodeMuxedAccount=function(e,t){if(!a.StrKey.isValidEd25519PublicKey(e))throw new Error(\"address should be a Stellar account ID (G...)\");if(\"string\"!=typeof t)throw new Error(\"id should be a string representing a number (uint64)\");return i.default.MuxedAccount.keyTypeMuxedEd25519(new i.default.MuxedAccountMed25519({id:i.default.Uint64.fromString(t),ed25519:a.StrKey.decodeEd25519PublicKey(e)}))},t.encodeMuxedAccountToAddress=u,t.extractBaseAddress=function(e){if(a.StrKey.isValidEd25519PublicKey(e))return e;if(!a.StrKey.isValidMed25519PublicKey(e))throw new TypeError(\"expected muxed account (M...), got \".concat(e));var t=s(e);return a.StrKey.encodeEd25519PublicKey(t.med25519().ed25519())};var o,i=(o=r(1918))&&o.__esModule?o:{default:o},a=r(7120);function s(e){return a.StrKey.isValidMed25519PublicKey(e)?function(e){var t=a.StrKey.decodeMed25519PublicKey(e);return i.default.MuxedAccount.keyTypeMuxedEd25519(new i.default.MuxedAccountMed25519({id:i.default.Uint64.fromXDR(t.subarray(-8)),ed25519:t.subarray(0,-8)}))}(e):i.default.MuxedAccount.keyTypeEd25519(a.StrKey.decodeEd25519PublicKey(e))}function u(e){return e.switch().value===i.default.CryptoKeyType.keyTypeMuxedEd25519().value?function(e){if(e.switch()===i.default.CryptoKeyType.keyTypeEd25519())return u(e);var t=e.med25519();return a.StrKey.encodeMed25519PublicKey(n.concat([t.ed25519(),t.id().toXDR(\"raw\")]))}(e):a.StrKey.encodeEd25519PublicKey(e.ed25519())}},645:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.trimEnd=void 0;t.trimEnd=function(e,t){for(var r=\"number\"==typeof e,n=String(e);n.endsWith(t);)n=n.slice(0,-1);return r?Number(n):n}},1918:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n,o=(n=r(7938))&&n.__esModule?n:{default:n};t.default=o.default},4940:(e,t,r)=>{!function(e){\"use strict\";var t=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r},n=function(){throw new Error(\"no PRNG\")},o=new Uint8Array(16),i=new Uint8Array(32);i[0]=9;var a=t(),s=t([1]),u=t([56129,1]),c=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),l=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),f=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),p=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),d=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function h(e,t,r,n){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r,e[t+4]=n>>24&255,e[t+5]=n>>16&255,e[t+6]=n>>8&255,e[t+7]=255&n}function y(e,t,r,n,o){var i,a=0;for(i=0;i<o;i++)a|=e[t+i]^r[n+i];return(1&a-1>>>8)-1}function m(e,t,r,n){return y(e,t,r,n,16)}function v(e,t,r,n){return y(e,t,r,n,32)}function g(e,t,r,n){!function(e,t,r,n){for(var o,i=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,s=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,c=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,f=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,p=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,d=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,h=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,y=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,m=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,v=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,g=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,b=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,w=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,S=i,E=a,_=s,k=u,T=c,O=l,x=f,A=p,P=d,R=h,j=y,C=m,I=v,L=g,B=b,N=w,U=0;U<20;U+=2)S^=(o=(I^=(o=(P^=(o=(T^=(o=S+I|0)<<7|o>>>25)+S|0)<<9|o>>>23)+T|0)<<13|o>>>19)+P|0)<<18|o>>>14,O^=(o=(E^=(o=(L^=(o=(R^=(o=O+E|0)<<7|o>>>25)+O|0)<<9|o>>>23)+R|0)<<13|o>>>19)+L|0)<<18|o>>>14,j^=(o=(x^=(o=(_^=(o=(B^=(o=j+x|0)<<7|o>>>25)+j|0)<<9|o>>>23)+B|0)<<13|o>>>19)+_|0)<<18|o>>>14,N^=(o=(C^=(o=(A^=(o=(k^=(o=N+C|0)<<7|o>>>25)+N|0)<<9|o>>>23)+k|0)<<13|o>>>19)+A|0)<<18|o>>>14,S^=(o=(k^=(o=(_^=(o=(E^=(o=S+k|0)<<7|o>>>25)+S|0)<<9|o>>>23)+E|0)<<13|o>>>19)+_|0)<<18|o>>>14,O^=(o=(T^=(o=(A^=(o=(x^=(o=O+T|0)<<7|o>>>25)+O|0)<<9|o>>>23)+x|0)<<13|o>>>19)+A|0)<<18|o>>>14,j^=(o=(R^=(o=(P^=(o=(C^=(o=j+R|0)<<7|o>>>25)+j|0)<<9|o>>>23)+C|0)<<13|o>>>19)+P|0)<<18|o>>>14,N^=(o=(B^=(o=(L^=(o=(I^=(o=N+B|0)<<7|o>>>25)+N|0)<<9|o>>>23)+I|0)<<13|o>>>19)+L|0)<<18|o>>>14;S=S+i|0,E=E+a|0,_=_+s|0,k=k+u|0,T=T+c|0,O=O+l|0,x=x+f|0,A=A+p|0,P=P+d|0,R=R+h|0,j=j+y|0,C=C+m|0,I=I+v|0,L=L+g|0,B=B+b|0,N=N+w|0,e[0]=S>>>0&255,e[1]=S>>>8&255,e[2]=S>>>16&255,e[3]=S>>>24&255,e[4]=E>>>0&255,e[5]=E>>>8&255,e[6]=E>>>16&255,e[7]=E>>>24&255,e[8]=_>>>0&255,e[9]=_>>>8&255,e[10]=_>>>16&255,e[11]=_>>>24&255,e[12]=k>>>0&255,e[13]=k>>>8&255,e[14]=k>>>16&255,e[15]=k>>>24&255,e[16]=T>>>0&255,e[17]=T>>>8&255,e[18]=T>>>16&255,e[19]=T>>>24&255,e[20]=O>>>0&255,e[21]=O>>>8&255,e[22]=O>>>16&255,e[23]=O>>>24&255,e[24]=x>>>0&255,e[25]=x>>>8&255,e[26]=x>>>16&255,e[27]=x>>>24&255,e[28]=A>>>0&255,e[29]=A>>>8&255,e[30]=A>>>16&255,e[31]=A>>>24&255,e[32]=P>>>0&255,e[33]=P>>>8&255,e[34]=P>>>16&255,e[35]=P>>>24&255,e[36]=R>>>0&255,e[37]=R>>>8&255,e[38]=R>>>16&255,e[39]=R>>>24&255,e[40]=j>>>0&255,e[41]=j>>>8&255,e[42]=j>>>16&255,e[43]=j>>>24&255,e[44]=C>>>0&255,e[45]=C>>>8&255,e[46]=C>>>16&255,e[47]=C>>>24&255,e[48]=I>>>0&255,e[49]=I>>>8&255,e[50]=I>>>16&255,e[51]=I>>>24&255,e[52]=L>>>0&255,e[53]=L>>>8&255,e[54]=L>>>16&255,e[55]=L>>>24&255,e[56]=B>>>0&255,e[57]=B>>>8&255,e[58]=B>>>16&255,e[59]=B>>>24&255,e[60]=N>>>0&255,e[61]=N>>>8&255,e[62]=N>>>16&255,e[63]=N>>>24&255}(e,t,r,n)}function b(e,t,r,n){!function(e,t,r,n){for(var o,i=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,s=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,c=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,f=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,p=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,d=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,h=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,y=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,m=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,v=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,g=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,b=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,w=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,S=0;S<20;S+=2)i^=(o=(v^=(o=(d^=(o=(c^=(o=i+v|0)<<7|o>>>25)+i|0)<<9|o>>>23)+c|0)<<13|o>>>19)+d|0)<<18|o>>>14,l^=(o=(a^=(o=(g^=(o=(h^=(o=l+a|0)<<7|o>>>25)+l|0)<<9|o>>>23)+h|0)<<13|o>>>19)+g|0)<<18|o>>>14,y^=(o=(f^=(o=(s^=(o=(b^=(o=y+f|0)<<7|o>>>25)+y|0)<<9|o>>>23)+b|0)<<13|o>>>19)+s|0)<<18|o>>>14,w^=(o=(m^=(o=(p^=(o=(u^=(o=w+m|0)<<7|o>>>25)+w|0)<<9|o>>>23)+u|0)<<13|o>>>19)+p|0)<<18|o>>>14,i^=(o=(u^=(o=(s^=(o=(a^=(o=i+u|0)<<7|o>>>25)+i|0)<<9|o>>>23)+a|0)<<13|o>>>19)+s|0)<<18|o>>>14,l^=(o=(c^=(o=(p^=(o=(f^=(o=l+c|0)<<7|o>>>25)+l|0)<<9|o>>>23)+f|0)<<13|o>>>19)+p|0)<<18|o>>>14,y^=(o=(h^=(o=(d^=(o=(m^=(o=y+h|0)<<7|o>>>25)+y|0)<<9|o>>>23)+m|0)<<13|o>>>19)+d|0)<<18|o>>>14,w^=(o=(b^=(o=(g^=(o=(v^=(o=w+b|0)<<7|o>>>25)+w|0)<<9|o>>>23)+v|0)<<13|o>>>19)+g|0)<<18|o>>>14;e[0]=i>>>0&255,e[1]=i>>>8&255,e[2]=i>>>16&255,e[3]=i>>>24&255,e[4]=l>>>0&255,e[5]=l>>>8&255,e[6]=l>>>16&255,e[7]=l>>>24&255,e[8]=y>>>0&255,e[9]=y>>>8&255,e[10]=y>>>16&255,e[11]=y>>>24&255,e[12]=w>>>0&255,e[13]=w>>>8&255,e[14]=w>>>16&255,e[15]=w>>>24&255,e[16]=f>>>0&255,e[17]=f>>>8&255,e[18]=f>>>16&255,e[19]=f>>>24&255,e[20]=p>>>0&255,e[21]=p>>>8&255,e[22]=p>>>16&255,e[23]=p>>>24&255,e[24]=d>>>0&255,e[25]=d>>>8&255,e[26]=d>>>16&255,e[27]=d>>>24&255,e[28]=h>>>0&255,e[29]=h>>>8&255,e[30]=h>>>16&255,e[31]=h>>>24&255}(e,t,r,n)}var w=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function S(e,t,r,n,o,i,a){var s,u,c=new Uint8Array(16),l=new Uint8Array(64);for(u=0;u<16;u++)c[u]=0;for(u=0;u<8;u++)c[u]=i[u];for(;o>=64;){for(g(l,c,a,w),u=0;u<64;u++)e[t+u]=r[n+u]^l[u];for(s=1,u=8;u<16;u++)s=s+(255&c[u])|0,c[u]=255&s,s>>>=8;o-=64,t+=64,n+=64}if(o>0)for(g(l,c,a,w),u=0;u<o;u++)e[t+u]=r[n+u]^l[u];return 0}function E(e,t,r,n,o){var i,a,s=new Uint8Array(16),u=new Uint8Array(64);for(a=0;a<16;a++)s[a]=0;for(a=0;a<8;a++)s[a]=n[a];for(;r>=64;){for(g(u,s,o,w),a=0;a<64;a++)e[t+a]=u[a];for(i=1,a=8;a<16;a++)i=i+(255&s[a])|0,s[a]=255&i,i>>>=8;r-=64,t+=64}if(r>0)for(g(u,s,o,w),a=0;a<r;a++)e[t+a]=u[a];return 0}function _(e,t,r,n,o){var i=new Uint8Array(32);b(i,n,o,w);for(var a=new Uint8Array(8),s=0;s<8;s++)a[s]=n[s+16];return E(e,t,r,a,i)}function k(e,t,r,n,o,i,a){var s=new Uint8Array(32);b(s,i,a,w);for(var u=new Uint8Array(8),c=0;c<8;c++)u[c]=i[c+16];return S(e,t,r,n,o,u,s)}var T=function(e){var t,r,n,o,i,a,s,u;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,r=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|r<<3),n=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(r>>>10|n<<6),o=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(n>>>7|o<<9),i=255&e[8]|(255&e[9])<<8,this.r[4]=255&(o>>>4|i<<12),this.r[5]=i>>>1&8190,a=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(i>>>14|a<<2),s=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(a>>>11|s<<5),u=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(s>>>8|u<<8),this.r[9]=u>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function O(e,t,r,n,o,i){var a=new T(i);return a.update(r,n,o),a.finish(e,t),0}function x(e,t,r,n,o,i){var a=new Uint8Array(16);return O(a,0,r,n,o,i),m(e,t,a,0)}function A(e,t,r,n,o){var i;if(r<32)return-1;for(k(e,0,t,0,r,n,o),O(e,16,e,32,r-32,e),i=0;i<16;i++)e[i]=0;return 0}function P(e,t,r,n,o){var i,a=new Uint8Array(32);if(r<32)return-1;if(_(a,0,32,n,o),0!==x(t,16,t,32,r-32,a))return-1;for(k(e,0,t,0,r,n,o),i=0;i<32;i++)e[i]=0;return 0}function R(e,t){var r;for(r=0;r<16;r++)e[r]=0|t[r]}function j(e){var t,r,n=1;for(t=0;t<16;t++)r=e[t]+n+65535,n=Math.floor(r/65536),e[t]=r-65536*n;e[0]+=n-1+37*(n-1)}function C(e,t,r){for(var n,o=~(r-1),i=0;i<16;i++)n=o&(e[i]^t[i]),e[i]^=n,t[i]^=n}function I(e,r){var n,o,i,a=t(),s=t();for(n=0;n<16;n++)s[n]=r[n];for(j(s),j(s),j(s),o=0;o<2;o++){for(a[0]=s[0]-65517,n=1;n<15;n++)a[n]=s[n]-65535-(a[n-1]>>16&1),a[n-1]&=65535;a[15]=s[15]-32767-(a[14]>>16&1),i=a[15]>>16&1,a[14]&=65535,C(s,a,1-i)}for(n=0;n<16;n++)e[2*n]=255&s[n],e[2*n+1]=s[n]>>8}function L(e,t){var r=new Uint8Array(32),n=new Uint8Array(32);return I(r,e),I(n,t),v(r,0,n,0)}function B(e){var t=new Uint8Array(32);return I(t,e),1&t[0]}function N(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}function U(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]+r[n]}function M(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]-r[n]}function D(e,t,r){var n,o,i=0,a=0,s=0,u=0,c=0,l=0,f=0,p=0,d=0,h=0,y=0,m=0,v=0,g=0,b=0,w=0,S=0,E=0,_=0,k=0,T=0,O=0,x=0,A=0,P=0,R=0,j=0,C=0,I=0,L=0,B=0,N=r[0],U=r[1],M=r[2],D=r[3],F=r[4],V=r[5],q=r[6],K=r[7],H=r[8],z=r[9],X=r[10],G=r[11],W=r[12],$=r[13],Q=r[14],Y=r[15];i+=(n=t[0])*N,a+=n*U,s+=n*M,u+=n*D,c+=n*F,l+=n*V,f+=n*q,p+=n*K,d+=n*H,h+=n*z,y+=n*X,m+=n*G,v+=n*W,g+=n*$,b+=n*Q,w+=n*Y,a+=(n=t[1])*N,s+=n*U,u+=n*M,c+=n*D,l+=n*F,f+=n*V,p+=n*q,d+=n*K,h+=n*H,y+=n*z,m+=n*X,v+=n*G,g+=n*W,b+=n*$,w+=n*Q,S+=n*Y,s+=(n=t[2])*N,u+=n*U,c+=n*M,l+=n*D,f+=n*F,p+=n*V,d+=n*q,h+=n*K,y+=n*H,m+=n*z,v+=n*X,g+=n*G,b+=n*W,w+=n*$,S+=n*Q,E+=n*Y,u+=(n=t[3])*N,c+=n*U,l+=n*M,f+=n*D,p+=n*F,d+=n*V,h+=n*q,y+=n*K,m+=n*H,v+=n*z,g+=n*X,b+=n*G,w+=n*W,S+=n*$,E+=n*Q,_+=n*Y,c+=(n=t[4])*N,l+=n*U,f+=n*M,p+=n*D,d+=n*F,h+=n*V,y+=n*q,m+=n*K,v+=n*H,g+=n*z,b+=n*X,w+=n*G,S+=n*W,E+=n*$,_+=n*Q,k+=n*Y,l+=(n=t[5])*N,f+=n*U,p+=n*M,d+=n*D,h+=n*F,y+=n*V,m+=n*q,v+=n*K,g+=n*H,b+=n*z,w+=n*X,S+=n*G,E+=n*W,_+=n*$,k+=n*Q,T+=n*Y,f+=(n=t[6])*N,p+=n*U,d+=n*M,h+=n*D,y+=n*F,m+=n*V,v+=n*q,g+=n*K,b+=n*H,w+=n*z,S+=n*X,E+=n*G,_+=n*W,k+=n*$,T+=n*Q,O+=n*Y,p+=(n=t[7])*N,d+=n*U,h+=n*M,y+=n*D,m+=n*F,v+=n*V,g+=n*q,b+=n*K,w+=n*H,S+=n*z,E+=n*X,_+=n*G,k+=n*W,T+=n*$,O+=n*Q,x+=n*Y,d+=(n=t[8])*N,h+=n*U,y+=n*M,m+=n*D,v+=n*F,g+=n*V,b+=n*q,w+=n*K,S+=n*H,E+=n*z,_+=n*X,k+=n*G,T+=n*W,O+=n*$,x+=n*Q,A+=n*Y,h+=(n=t[9])*N,y+=n*U,m+=n*M,v+=n*D,g+=n*F,b+=n*V,w+=n*q,S+=n*K,E+=n*H,_+=n*z,k+=n*X,T+=n*G,O+=n*W,x+=n*$,A+=n*Q,P+=n*Y,y+=(n=t[10])*N,m+=n*U,v+=n*M,g+=n*D,b+=n*F,w+=n*V,S+=n*q,E+=n*K,_+=n*H,k+=n*z,T+=n*X,O+=n*G,x+=n*W,A+=n*$,P+=n*Q,R+=n*Y,m+=(n=t[11])*N,v+=n*U,g+=n*M,b+=n*D,w+=n*F,S+=n*V,E+=n*q,_+=n*K,k+=n*H,T+=n*z,O+=n*X,x+=n*G,A+=n*W,P+=n*$,R+=n*Q,j+=n*Y,v+=(n=t[12])*N,g+=n*U,b+=n*M,w+=n*D,S+=n*F,E+=n*V,_+=n*q,k+=n*K,T+=n*H,O+=n*z,x+=n*X,A+=n*G,P+=n*W,R+=n*$,j+=n*Q,C+=n*Y,g+=(n=t[13])*N,b+=n*U,w+=n*M,S+=n*D,E+=n*F,_+=n*V,k+=n*q,T+=n*K,O+=n*H,x+=n*z,A+=n*X,P+=n*G,R+=n*W,j+=n*$,C+=n*Q,I+=n*Y,b+=(n=t[14])*N,w+=n*U,S+=n*M,E+=n*D,_+=n*F,k+=n*V,T+=n*q,O+=n*K,x+=n*H,A+=n*z,P+=n*X,R+=n*G,j+=n*W,C+=n*$,I+=n*Q,L+=n*Y,w+=(n=t[15])*N,a+=38*(E+=n*M),s+=38*(_+=n*D),u+=38*(k+=n*F),c+=38*(T+=n*V),l+=38*(O+=n*q),f+=38*(x+=n*K),p+=38*(A+=n*H),d+=38*(P+=n*z),h+=38*(R+=n*X),y+=38*(j+=n*G),m+=38*(C+=n*W),v+=38*(I+=n*$),g+=38*(L+=n*Q),b+=38*(B+=n*Y),i=(n=(i+=38*(S+=n*U))+(o=1)+65535)-65536*(o=Math.floor(n/65536)),a=(n=a+o+65535)-65536*(o=Math.floor(n/65536)),s=(n=s+o+65535)-65536*(o=Math.floor(n/65536)),u=(n=u+o+65535)-65536*(o=Math.floor(n/65536)),c=(n=c+o+65535)-65536*(o=Math.floor(n/65536)),l=(n=l+o+65535)-65536*(o=Math.floor(n/65536)),f=(n=f+o+65535)-65536*(o=Math.floor(n/65536)),p=(n=p+o+65535)-65536*(o=Math.floor(n/65536)),d=(n=d+o+65535)-65536*(o=Math.floor(n/65536)),h=(n=h+o+65535)-65536*(o=Math.floor(n/65536)),y=(n=y+o+65535)-65536*(o=Math.floor(n/65536)),m=(n=m+o+65535)-65536*(o=Math.floor(n/65536)),v=(n=v+o+65535)-65536*(o=Math.floor(n/65536)),g=(n=g+o+65535)-65536*(o=Math.floor(n/65536)),b=(n=b+o+65535)-65536*(o=Math.floor(n/65536)),w=(n=w+o+65535)-65536*(o=Math.floor(n/65536)),i=(n=(i+=o-1+37*(o-1))+(o=1)+65535)-65536*(o=Math.floor(n/65536)),a=(n=a+o+65535)-65536*(o=Math.floor(n/65536)),s=(n=s+o+65535)-65536*(o=Math.floor(n/65536)),u=(n=u+o+65535)-65536*(o=Math.floor(n/65536)),c=(n=c+o+65535)-65536*(o=Math.floor(n/65536)),l=(n=l+o+65535)-65536*(o=Math.floor(n/65536)),f=(n=f+o+65535)-65536*(o=Math.floor(n/65536)),p=(n=p+o+65535)-65536*(o=Math.floor(n/65536)),d=(n=d+o+65535)-65536*(o=Math.floor(n/65536)),h=(n=h+o+65535)-65536*(o=Math.floor(n/65536)),y=(n=y+o+65535)-65536*(o=Math.floor(n/65536)),m=(n=m+o+65535)-65536*(o=Math.floor(n/65536)),v=(n=v+o+65535)-65536*(o=Math.floor(n/65536)),g=(n=g+o+65535)-65536*(o=Math.floor(n/65536)),b=(n=b+o+65535)-65536*(o=Math.floor(n/65536)),w=(n=w+o+65535)-65536*(o=Math.floor(n/65536)),i+=o-1+37*(o-1),e[0]=i,e[1]=a,e[2]=s,e[3]=u,e[4]=c,e[5]=l,e[6]=f,e[7]=p,e[8]=d,e[9]=h,e[10]=y,e[11]=m,e[12]=v,e[13]=g,e[14]=b,e[15]=w}function F(e,t){D(e,t,t)}function V(e,r){var n,o=t();for(n=0;n<16;n++)o[n]=r[n];for(n=253;n>=0;n--)F(o,o),2!==n&&4!==n&&D(o,o,r);for(n=0;n<16;n++)e[n]=o[n]}function q(e,r){var n,o=t();for(n=0;n<16;n++)o[n]=r[n];for(n=250;n>=0;n--)F(o,o),1!==n&&D(o,o,r);for(n=0;n<16;n++)e[n]=o[n]}function K(e,r,n){var o,i,a=new Uint8Array(32),s=new Float64Array(80),c=t(),l=t(),f=t(),p=t(),d=t(),h=t();for(i=0;i<31;i++)a[i]=r[i];for(a[31]=127&r[31]|64,a[0]&=248,N(s,n),i=0;i<16;i++)l[i]=s[i],p[i]=c[i]=f[i]=0;for(c[0]=p[0]=1,i=254;i>=0;--i)C(c,l,o=a[i>>>3]>>>(7&i)&1),C(f,p,o),U(d,c,f),M(c,c,f),U(f,l,p),M(l,l,p),F(p,d),F(h,c),D(c,f,c),D(f,l,d),U(d,c,f),M(c,c,f),F(l,c),M(f,p,h),D(c,f,u),U(c,c,p),D(f,f,c),D(c,p,h),D(p,l,s),F(l,d),C(c,l,o),C(f,p,o);for(i=0;i<16;i++)s[i+16]=c[i],s[i+32]=f[i],s[i+48]=l[i],s[i+64]=p[i];var y=s.subarray(32),m=s.subarray(16);return V(y,y),D(m,m,y),I(e,m),0}function H(e,t){return K(e,t,i)}function z(e,t){return n(t,32),H(e,t)}function X(e,t,r){var n=new Uint8Array(32);return K(n,r,t),b(e,o,n,w)}T.prototype.blocks=function(e,t,r){for(var n,o,i,a,s,u,c,l,f,p,d,h,y,m,v,g,b,w,S,E=this.fin?0:2048,_=this.h[0],k=this.h[1],T=this.h[2],O=this.h[3],x=this.h[4],A=this.h[5],P=this.h[6],R=this.h[7],j=this.h[8],C=this.h[9],I=this.r[0],L=this.r[1],B=this.r[2],N=this.r[3],U=this.r[4],M=this.r[5],D=this.r[6],F=this.r[7],V=this.r[8],q=this.r[9];r>=16;)p=f=0,p+=(_+=8191&(n=255&e[t+0]|(255&e[t+1])<<8))*I,p+=(k+=8191&(n>>>13|(o=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*q),p+=(T+=8191&(o>>>10|(i=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*V),p+=(O+=8191&(i>>>7|(a=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*F),f=(p+=(x+=8191&(a>>>4|(s=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*D))>>>13,p&=8191,p+=(A+=s>>>1&8191)*(5*M),p+=(P+=8191&(s>>>14|(u=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*U),p+=(R+=8191&(u>>>11|(c=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*N),p+=(j+=8191&(c>>>8|(l=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*B),d=f+=(p+=(C+=l>>>5|E)*(5*L))>>>13,d+=_*L,d+=k*I,d+=T*(5*q),d+=O*(5*V),f=(d+=x*(5*F))>>>13,d&=8191,d+=A*(5*D),d+=P*(5*M),d+=R*(5*U),d+=j*(5*N),f+=(d+=C*(5*B))>>>13,d&=8191,h=f,h+=_*B,h+=k*L,h+=T*I,h+=O*(5*q),f=(h+=x*(5*V))>>>13,h&=8191,h+=A*(5*F),h+=P*(5*D),h+=R*(5*M),h+=j*(5*U),y=f+=(h+=C*(5*N))>>>13,y+=_*N,y+=k*B,y+=T*L,y+=O*I,f=(y+=x*(5*q))>>>13,y&=8191,y+=A*(5*V),y+=P*(5*F),y+=R*(5*D),y+=j*(5*M),m=f+=(y+=C*(5*U))>>>13,m+=_*U,m+=k*N,m+=T*B,m+=O*L,f=(m+=x*I)>>>13,m&=8191,m+=A*(5*q),m+=P*(5*V),m+=R*(5*F),m+=j*(5*D),v=f+=(m+=C*(5*M))>>>13,v+=_*M,v+=k*U,v+=T*N,v+=O*B,f=(v+=x*L)>>>13,v&=8191,v+=A*I,v+=P*(5*q),v+=R*(5*V),v+=j*(5*F),g=f+=(v+=C*(5*D))>>>13,g+=_*D,g+=k*M,g+=T*U,g+=O*N,f=(g+=x*B)>>>13,g&=8191,g+=A*L,g+=P*I,g+=R*(5*q),g+=j*(5*V),b=f+=(g+=C*(5*F))>>>13,b+=_*F,b+=k*D,b+=T*M,b+=O*U,f=(b+=x*N)>>>13,b&=8191,b+=A*B,b+=P*L,b+=R*I,b+=j*(5*q),w=f+=(b+=C*(5*V))>>>13,w+=_*V,w+=k*F,w+=T*D,w+=O*M,f=(w+=x*U)>>>13,w&=8191,w+=A*N,w+=P*B,w+=R*L,w+=j*I,S=f+=(w+=C*(5*q))>>>13,S+=_*q,S+=k*V,S+=T*F,S+=O*D,f=(S+=x*M)>>>13,S&=8191,S+=A*U,S+=P*N,S+=R*B,S+=j*L,_=p=8191&(f=(f=((f+=(S+=C*I)>>>13)<<2)+f|0)+(p&=8191)|0),k=d+=f>>>=13,T=h&=8191,O=y&=8191,x=m&=8191,A=v&=8191,P=g&=8191,R=b&=8191,j=w&=8191,C=S&=8191,t+=16,r-=16;this.h[0]=_,this.h[1]=k,this.h[2]=T,this.h[3]=O,this.h[4]=x,this.h[5]=A,this.h[6]=P,this.h[7]=R,this.h[8]=j,this.h[9]=C},T.prototype.finish=function(e,t){var r,n,o,i,a=new Uint16Array(10);if(this.leftover){for(i=this.leftover,this.buffer[i++]=1;i<16;i++)this.buffer[i]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(r=this.h[1]>>>13,this.h[1]&=8191,i=2;i<10;i++)this.h[i]+=r,r=this.h[i]>>>13,this.h[i]&=8191;for(this.h[0]+=5*r,r=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=r,r=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=r,a[0]=this.h[0]+5,r=a[0]>>>13,a[0]&=8191,i=1;i<10;i++)a[i]=this.h[i]+r,r=a[i]>>>13,a[i]&=8191;for(a[9]-=8192,n=(1^r)-1,i=0;i<10;i++)a[i]&=n;for(n=~n,i=0;i<10;i++)this.h[i]=this.h[i]&n|a[i];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),o=this.h[0]+this.pad[0],this.h[0]=65535&o,i=1;i<8;i++)o=(this.h[i]+this.pad[i]|0)+(o>>>16)|0,this.h[i]=65535&o;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},T.prototype.update=function(e,t,r){var n,o;if(this.leftover){for((o=16-this.leftover)>r&&(o=r),n=0;n<o;n++)this.buffer[this.leftover+n]=e[t+n];if(r-=o,t+=o,this.leftover+=o,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(r>=16&&(o=r-r%16,this.blocks(e,t,o),t+=o,r-=o),r){for(n=0;n<r;n++)this.buffer[this.leftover+n]=e[t+n];this.leftover+=r}};var G=A,W=P;var $=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function Q(e,t,r,n){for(var o,i,a,s,u,c,l,f,p,d,h,y,m,v,g,b,w,S,E,_,k,T,O,x,A,P,R=new Int32Array(16),j=new Int32Array(16),C=e[0],I=e[1],L=e[2],B=e[3],N=e[4],U=e[5],M=e[6],D=e[7],F=t[0],V=t[1],q=t[2],K=t[3],H=t[4],z=t[5],X=t[6],G=t[7],W=0;n>=128;){for(E=0;E<16;E++)_=8*E+W,R[E]=r[_+0]<<24|r[_+1]<<16|r[_+2]<<8|r[_+3],j[E]=r[_+4]<<24|r[_+5]<<16|r[_+6]<<8|r[_+7];for(E=0;E<80;E++)if(o=C,i=I,a=L,s=B,u=N,c=U,l=M,D,p=F,d=V,h=q,y=K,m=H,v=z,g=X,G,O=65535&(T=G),x=T>>>16,A=65535&(k=D),P=k>>>16,O+=65535&(T=(H>>>14|N<<18)^(H>>>18|N<<14)^(N>>>9|H<<23)),x+=T>>>16,A+=65535&(k=(N>>>14|H<<18)^(N>>>18|H<<14)^(H>>>9|N<<23)),P+=k>>>16,O+=65535&(T=H&z^~H&X),x+=T>>>16,A+=65535&(k=N&U^~N&M),P+=k>>>16,O+=65535&(T=$[2*E+1]),x+=T>>>16,A+=65535&(k=$[2*E]),P+=k>>>16,k=R[E%16],x+=(T=j[E%16])>>>16,A+=65535&k,P+=k>>>16,A+=(x+=(O+=65535&T)>>>16)>>>16,O=65535&(T=S=65535&O|x<<16),x=T>>>16,A=65535&(k=w=65535&A|(P+=A>>>16)<<16),P=k>>>16,O+=65535&(T=(F>>>28|C<<4)^(C>>>2|F<<30)^(C>>>7|F<<25)),x+=T>>>16,A+=65535&(k=(C>>>28|F<<4)^(F>>>2|C<<30)^(F>>>7|C<<25)),P+=k>>>16,x+=(T=F&V^F&q^V&q)>>>16,A+=65535&(k=C&I^C&L^I&L),P+=k>>>16,f=65535&(A+=(x+=(O+=65535&T)>>>16)>>>16)|(P+=A>>>16)<<16,b=65535&O|x<<16,O=65535&(T=y),x=T>>>16,A=65535&(k=s),P=k>>>16,x+=(T=S)>>>16,A+=65535&(k=w),P+=k>>>16,I=o,L=i,B=a,N=s=65535&(A+=(x+=(O+=65535&T)>>>16)>>>16)|(P+=A>>>16)<<16,U=u,M=c,D=l,C=f,V=p,q=d,K=h,H=y=65535&O|x<<16,z=m,X=v,G=g,F=b,E%16==15)for(_=0;_<16;_++)k=R[_],O=65535&(T=j[_]),x=T>>>16,A=65535&k,P=k>>>16,k=R[(_+9)%16],O+=65535&(T=j[(_+9)%16]),x+=T>>>16,A+=65535&k,P+=k>>>16,w=R[(_+1)%16],O+=65535&(T=((S=j[(_+1)%16])>>>1|w<<31)^(S>>>8|w<<24)^(S>>>7|w<<25)),x+=T>>>16,A+=65535&(k=(w>>>1|S<<31)^(w>>>8|S<<24)^w>>>7),P+=k>>>16,w=R[(_+14)%16],x+=(T=((S=j[(_+14)%16])>>>19|w<<13)^(w>>>29|S<<3)^(S>>>6|w<<26))>>>16,A+=65535&(k=(w>>>19|S<<13)^(S>>>29|w<<3)^w>>>6),P+=k>>>16,P+=(A+=(x+=(O+=65535&T)>>>16)>>>16)>>>16,R[_]=65535&A|P<<16,j[_]=65535&O|x<<16;O=65535&(T=F),x=T>>>16,A=65535&(k=C),P=k>>>16,k=e[0],x+=(T=t[0])>>>16,A+=65535&k,P+=k>>>16,P+=(A+=(x+=(O+=65535&T)>>>16)>>>16)>>>16,e[0]=C=65535&A|P<<16,t[0]=F=65535&O|x<<16,O=65535&(T=V),x=T>>>16,A=65535&(k=I),P=k>>>16,k=e[1],x+=(T=t[1])>>>16,A+=65535&k,P+=k>>>16,P+=(A+=(x+=(O+=65535&T)>>>16)>>>16)>>>16,e[1]=I=65535&A|P<<16,t[1]=V=65535&O|x<<16,O=65535&(T=q),x=T>>>16,A=65535&(k=L),P=k>>>16,k=e[2],x+=(T=t[2])>>>16,A+=65535&k,P+=k>>>16,P+=(A+=(x+=(O+=65535&T)>>>16)>>>16)>>>16,e[2]=L=65535&A|P<<16,t[2]=q=65535&O|x<<16,O=65535&(T=K),x=T>>>16,A=65535&(k=B),P=k>>>16,k=e[3],x+=(T=t[3])>>>16,A+=65535&k,P+=k>>>16,P+=(A+=(x+=(O+=65535&T)>>>16)>>>16)>>>16,e[3]=B=65535&A|P<<16,t[3]=K=65535&O|x<<16,O=65535&(T=H),x=T>>>16,A=65535&(k=N),P=k>>>16,k=e[4],x+=(T=t[4])>>>16,A+=65535&k,P+=k>>>16,P+=(A+=(x+=(O+=65535&T)>>>16)>>>16)>>>16,e[4]=N=65535&A|P<<16,t[4]=H=65535&O|x<<16,O=65535&(T=z),x=T>>>16,A=65535&(k=U),P=k>>>16,k=e[5],x+=(T=t[5])>>>16,A+=65535&k,P+=k>>>16,P+=(A+=(x+=(O+=65535&T)>>>16)>>>16)>>>16,e[5]=U=65535&A|P<<16,t[5]=z=65535&O|x<<16,O=65535&(T=X),x=T>>>16,A=65535&(k=M),P=k>>>16,k=e[6],x+=(T=t[6])>>>16,A+=65535&k,P+=k>>>16,P+=(A+=(x+=(O+=65535&T)>>>16)>>>16)>>>16,e[6]=M=65535&A|P<<16,t[6]=X=65535&O|x<<16,O=65535&(T=G),x=T>>>16,A=65535&(k=D),P=k>>>16,k=e[7],x+=(T=t[7])>>>16,A+=65535&k,P+=k>>>16,P+=(A+=(x+=(O+=65535&T)>>>16)>>>16)>>>16,e[7]=D=65535&A|P<<16,t[7]=G=65535&O|x<<16,W+=128,n-=128}return n}function Y(e,t,r){var n,o=new Int32Array(8),i=new Int32Array(8),a=new Uint8Array(256),s=r;for(o[0]=1779033703,o[1]=3144134277,o[2]=1013904242,o[3]=2773480762,o[4]=1359893119,o[5]=2600822924,o[6]=528734635,o[7]=1541459225,i[0]=4089235720,i[1]=2227873595,i[2]=4271175723,i[3]=1595750129,i[4]=2917565137,i[5]=725511199,i[6]=4215389547,i[7]=327033209,Q(o,i,t,r),r%=128,n=0;n<r;n++)a[n]=t[s-r+n];for(a[r]=128,a[(r=256-128*(r<112?1:0))-9]=0,h(a,r-8,s/536870912|0,s<<3),Q(o,i,a,r),n=0;n<8;n++)h(e,8*n,o[n],i[n]);return 0}function J(e,r){var n=t(),o=t(),i=t(),a=t(),s=t(),u=t(),c=t(),f=t(),p=t();M(n,e[1],e[0]),M(p,r[1],r[0]),D(n,n,p),U(o,e[0],e[1]),U(p,r[0],r[1]),D(o,o,p),D(i,e[3],r[3]),D(i,i,l),D(a,e[2],r[2]),U(a,a,a),M(s,o,n),M(u,a,i),U(c,a,i),U(f,o,n),D(e[0],s,u),D(e[1],f,c),D(e[2],c,u),D(e[3],s,f)}function Z(e,t,r){var n;for(n=0;n<4;n++)C(e[n],t[n],r)}function ee(e,r){var n=t(),o=t(),i=t();V(i,r[2]),D(n,r[0],i),D(o,r[1],i),I(e,o),e[31]^=B(n)<<7}function te(e,t,r){var n,o;for(R(e[0],a),R(e[1],s),R(e[2],s),R(e[3],a),o=255;o>=0;--o)Z(e,t,n=r[o/8|0]>>(7&o)&1),J(t,e),J(e,e),Z(e,t,n)}function re(e,r){var n=[t(),t(),t(),t()];R(n[0],f),R(n[1],p),R(n[2],s),D(n[3],f,p),te(e,n,r)}function ne(e,r,o){var i,a=new Uint8Array(64),s=[t(),t(),t(),t()];for(o||n(r,32),Y(a,r,32),a[0]&=248,a[31]&=127,a[31]|=64,re(s,a),ee(e,s),i=0;i<32;i++)r[i+32]=e[i];return 0}var oe=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function ie(e,t){var r,n,o,i;for(n=63;n>=32;--n){for(r=0,o=n-32,i=n-12;o<i;++o)t[o]+=r-16*t[n]*oe[o-(n-32)],r=Math.floor((t[o]+128)/256),t[o]-=256*r;t[o]+=r,t[n]=0}for(r=0,o=0;o<32;o++)t[o]+=r-(t[31]>>4)*oe[o],r=t[o]>>8,t[o]&=255;for(o=0;o<32;o++)t[o]-=r*oe[o];for(n=0;n<32;n++)t[n+1]+=t[n]>>8,e[n]=255&t[n]}function ae(e){var t,r=new Float64Array(64);for(t=0;t<64;t++)r[t]=e[t];for(t=0;t<64;t++)e[t]=0;ie(e,r)}function se(e,r,n,o){var i,a,s=new Uint8Array(64),u=new Uint8Array(64),c=new Uint8Array(64),l=new Float64Array(64),f=[t(),t(),t(),t()];Y(s,o,32),s[0]&=248,s[31]&=127,s[31]|=64;var p=n+64;for(i=0;i<n;i++)e[64+i]=r[i];for(i=0;i<32;i++)e[32+i]=s[32+i];for(Y(c,e.subarray(32),n+32),ae(c),re(f,c),ee(e,f),i=32;i<64;i++)e[i]=o[i];for(Y(u,e,n+64),ae(u),i=0;i<64;i++)l[i]=0;for(i=0;i<32;i++)l[i]=c[i];for(i=0;i<32;i++)for(a=0;a<32;a++)l[i+a]+=u[i]*s[a];return ie(e.subarray(32),l),p}function ue(e,r,n,o){var i,u=new Uint8Array(32),l=new Uint8Array(64),f=[t(),t(),t(),t()],p=[t(),t(),t(),t()];if(n<64)return-1;if(function(e,r){var n=t(),o=t(),i=t(),u=t(),l=t(),f=t(),p=t();return R(e[2],s),N(e[1],r),F(i,e[1]),D(u,i,c),M(i,i,e[2]),U(u,e[2],u),F(l,u),F(f,l),D(p,f,l),D(n,p,i),D(n,n,u),q(n,n),D(n,n,i),D(n,n,u),D(n,n,u),D(e[0],n,u),F(o,e[0]),D(o,o,u),L(o,i)&&D(e[0],e[0],d),F(o,e[0]),D(o,o,u),L(o,i)?-1:(B(e[0])===r[31]>>7&&M(e[0],a,e[0]),D(e[3],e[0],e[1]),0)}(p,o))return-1;for(i=0;i<n;i++)e[i]=r[i];for(i=0;i<32;i++)e[i+32]=o[i];if(Y(l,e,n),ae(l),te(f,p,l),re(p,r.subarray(32)),J(f,p),ee(u,f),n-=64,v(r,0,u,0)){for(i=0;i<n;i++)e[i]=0;return-1}for(i=0;i<n;i++)e[i]=r[i+64];return n}var ce=16,le=64,fe=32,pe=64;function de(e,t){if(32!==e.length)throw new Error(\"bad key size\");if(24!==t.length)throw new Error(\"bad nonce size\")}function he(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError(\"unexpected type, use Uint8Array\")}function ye(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:b,crypto_stream_xor:k,crypto_stream:_,crypto_stream_salsa20_xor:S,crypto_stream_salsa20:E,crypto_onetimeauth:O,crypto_onetimeauth_verify:x,crypto_verify_16:m,crypto_verify_32:v,crypto_secretbox:A,crypto_secretbox_open:P,crypto_scalarmult:K,crypto_scalarmult_base:H,crypto_box_beforenm:X,crypto_box_afternm:G,crypto_box:function(e,t,r,n,o,i){var a=new Uint8Array(32);return X(a,o,i),G(e,t,r,n,a)},crypto_box_open:function(e,t,r,n,o,i){var a=new Uint8Array(32);return X(a,o,i),W(e,t,r,n,a)},crypto_box_keypair:z,crypto_hash:Y,crypto_sign:se,crypto_sign_keypair:ne,crypto_sign_open:ue,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:ce,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:le,crypto_sign_PUBLICKEYBYTES:fe,crypto_sign_SECRETKEYBYTES:pe,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:c,L:oe,pack25519:I,unpack25519:N,M:D,A:U,S:F,Z:M,pow2523:q,add:J,set25519:R,modL:ie,scalarmult:te,scalarbase:re},e.randomBytes=function(e){var t=new Uint8Array(e);return n(t,e),t},e.secretbox=function(e,t,r){he(e,t,r),de(r,t);for(var n=new Uint8Array(32+e.length),o=new Uint8Array(n.length),i=0;i<e.length;i++)n[i+32]=e[i];return A(o,n,n.length,t,r),o.subarray(ce)},e.secretbox.open=function(e,t,r){he(e,t,r),de(r,t);for(var n=new Uint8Array(ce+e.length),o=new Uint8Array(n.length),i=0;i<e.length;i++)n[i+ce]=e[i];return n.length<32||0!==P(o,n,n.length,t,r)?null:o.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=ce,e.scalarMult=function(e,t){if(he(e,t),32!==e.length)throw new Error(\"bad n size\");if(32!==t.length)throw new Error(\"bad p size\");var r=new Uint8Array(32);return K(r,e,t),r},e.scalarMult.base=function(e){if(he(e),32!==e.length)throw new Error(\"bad n size\");var t=new Uint8Array(32);return H(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,r,n,o){var i=e.box.before(n,o);return e.secretbox(t,r,i)},e.box.before=function(e,t){he(e,t),function(e,t){if(32!==e.length)throw new Error(\"bad public key size\");if(32!==t.length)throw new Error(\"bad secret key size\")}(e,t);var r=new Uint8Array(32);return X(r,e,t),r},e.box.after=e.secretbox,e.box.open=function(t,r,n,o){var i=e.box.before(n,o);return e.secretbox.open(t,r,i)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(32);return z(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(he(e),32!==e.length)throw new Error(\"bad secret key size\");var t=new Uint8Array(32);return H(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(he(e,t),t.length!==pe)throw new Error(\"bad secret key size\");var r=new Uint8Array(le+e.length);return se(r,e,e.length,t),r},e.sign.open=function(e,t){if(he(e,t),t.length!==fe)throw new Error(\"bad public key size\");var r=new Uint8Array(e.length),n=ue(r,e,e.length,t);if(n<0)return null;for(var o=new Uint8Array(n),i=0;i<o.length;i++)o[i]=r[i];return o},e.sign.detached=function(t,r){for(var n=e.sign(t,r),o=new Uint8Array(le),i=0;i<o.length;i++)o[i]=n[i];return o},e.sign.detached.verify=function(e,t,r){if(he(e,t,r),t.length!==le)throw new Error(\"bad signature size\");if(r.length!==fe)throw new Error(\"bad public key size\");var n,o=new Uint8Array(le+e.length),i=new Uint8Array(le+e.length);for(n=0;n<le;n++)o[n]=t[n];for(n=0;n<e.length;n++)o[n+le]=e[n];return ue(i,o,o.length,r)>=0},e.sign.keyPair=function(){var e=new Uint8Array(fe),t=new Uint8Array(pe);return ne(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(he(e),e.length!==pe)throw new Error(\"bad secret key size\");for(var t=new Uint8Array(fe),r=0;r<t.length;r++)t[r]=e[32+r];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(he(e),32!==e.length)throw new Error(\"bad seed size\");for(var t=new Uint8Array(fe),r=new Uint8Array(pe),n=0;n<32;n++)r[n]=e[n];return ne(t,r,!0),{publicKey:t,secretKey:r}},e.sign.publicKeyLength=fe,e.sign.secretKeyLength=pe,e.sign.seedLength=32,e.sign.signatureLength=le,e.hash=function(e){he(e);var t=new Uint8Array(64);return Y(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return he(e,t),0!==e.length&&0!==t.length&&(e.length===t.length&&0===y(e,0,t,0,e.length))},e.setPRNG=function(e){n=e},function(){var t=\"undefined\"!=typeof self?self.crypto||self.msCrypto:null;if(t&&t.getRandomValues){e.setPRNG((function(e,r){var n,o=new Uint8Array(r);for(n=0;n<r;n+=65536)t.getRandomValues(o.subarray(n,n+Math.min(r-n,65536)));for(n=0;n<r;n++)e[n]=o[n];ye(o)}))}else(t=r(2894))&&t.randomBytes&&e.setPRNG((function(e,r){var n,o=t.randomBytes(r);for(n=0;n<r;n++)e[n]=o[n];ye(o)}))}()}(e.exports?e.exports:self.nacl=self.nacl||{})},1924:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{StellarBase:()=>a,default:()=>s,httpClient:()=>n.ok});var n=r(9983),o=r(4356),i={};for(const e in o)[\"default\",\"StellarBase\",\"httpClient\"].indexOf(e)<0&&(i[e]=()=>o[e]);r.d(t,i);var a=r(356);const s=(e=r.hmd(e)).exports},8732:(e,t,r)=>{\"use strict\";function n(e){return n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,u(n.key),n)}}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t,r){return(t=u(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function u(e){var t=function(e,t){if(\"object\"!=n(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,t||\"default\");if(\"object\"!=n(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==n(t)?t:t+\"\"}r.d(t,{T:()=>h});var c,l,f,p={allowHttp:!1,timeout:0},d=a({},p),h=(c=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e)},f=[{key:\"setAllowHttp\",value:function(e){d.allowHttp=e}},{key:\"setTimeout\",value:function(e){d.timeout=e}},{key:\"isAllowHttp\",value:function(){return d.allowHttp}},{key:\"getTimeout\",value:function(){return d.timeout}},{key:\"setDefault\",value:function(){d=a({},p)}}],(l=null)&&o(c.prototype,l),f&&o(c,f),Object.defineProperty(c,\"prototype\",{writable:!1}),c)},6299:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{AssembledTransaction:()=>de,Client:()=>tt,DEFAULT_TIMEOUT:()=>h,Err:()=>d,NULL_ACCOUNT:()=>y,Ok:()=>p,SentTransaction:()=>K,Spec:()=>Ne,basicNodeSigner:()=>be});var n=r(356),o=r(3496),i=r(4076),a=r(8680);function s(e){return s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},s(e)}function u(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,f(n.key),n)}}function l(e,t,r){return t&&c(e.prototype,t),r&&c(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}function f(e){var t=function(e,t){if(\"object\"!=s(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=s(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==s(t)?t:t+\"\"}var p=l((function e(t){u(this,e),this.value=t}),[{key:\"unwrapErr\",value:function(){throw new Error(\"No error\")}},{key:\"unwrap\",value:function(){return this.value}},{key:\"isOk\",value:function(){return!0}},{key:\"isErr\",value:function(){return!1}}]),d=l((function e(t){u(this,e),this.error=t}),[{key:\"unwrapErr\",value:function(){return this.error}},{key:\"unwrap\",value:function(){throw new Error(this.error.message)}},{key:\"isOk\",value:function(){return!1}},{key:\"isErr\",value:function(){return!0}}]),h=300,y=\"GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF\";function m(){m=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(e,t,r){e[t]=r.value},i=\"function\"==typeof Symbol?Symbol:{},a=i.iterator||\"@@iterator\",s=i.asyncIterator||\"@@asyncIterator\",u=i.toStringTag||\"@@toStringTag\";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},\"\")}catch(e){c=function(e,t,r){return e[t]=r}}function l(e,t,r,n){var i=t&&t.prototype instanceof b?t:b,a=Object.create(i.prototype),s=new C(n||[]);return o(a,\"_invoke\",{value:A(e,r,s)}),a}function f(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}t.wrap=l;var p=\"suspendedStart\",d=\"suspendedYield\",h=\"executing\",y=\"completed\",g={};function b(){}function w(){}function S(){}var E={};c(E,a,(function(){return this}));var _=Object.getPrototypeOf,k=_&&_(_(I([])));k&&k!==r&&n.call(k,a)&&(E=k);var T=S.prototype=b.prototype=Object.create(E);function O(e){[\"next\",\"throw\",\"return\"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){function r(o,i,a,s){var u=f(e[o],e,i);if(\"throw\"!==u.type){var c=u.arg,l=c.value;return l&&\"object\"==v(l)&&n.call(l,\"__await\")?t.resolve(l.__await).then((function(e){r(\"next\",e,a,s)}),(function(e){r(\"throw\",e,a,s)})):t.resolve(l).then((function(e){c.value=e,a(c)}),(function(e){return r(\"throw\",e,a,s)}))}s(u.arg)}var i;o(this,\"_invoke\",{value:function(e,n){function o(){return new t((function(t,o){r(e,n,t,o)}))}return i=i?i.then(o,o):o()}})}function A(t,r,n){var o=p;return function(i,a){if(o===h)throw Error(\"Generator is already running\");if(o===y){if(\"throw\"===i)throw a;return{value:e,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var u=P(s,n);if(u){if(u===g)continue;return u}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===p)throw o=y,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=h;var c=f(t,r,n);if(\"normal\"===c.type){if(o=n.done?y:d,c.arg===g)continue;return{value:c.arg,done:n.done}}\"throw\"===c.type&&(o=y,n.method=\"throw\",n.arg=c.arg)}}}function P(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,\"throw\"===n&&t.iterator.return&&(r.method=\"return\",r.arg=e,P(t,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),g;var i=f(o,t.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,g;var a=i.arg;return a?a.done?(r[t.resultName]=a.value,r.next=t.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=e),r.delegate=null,g):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,g)}function R(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function j(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(R,this),this.reset(!0)}function I(t){if(t||\"\"===t){var r=t[a];if(r)return r.call(t);if(\"function\"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,i=function r(){for(;++o<t.length;)if(n.call(t,o))return r.value=t[o],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(v(t)+\" is not iterable\")}return w.prototype=S,o(T,\"constructor\",{value:S,configurable:!0}),o(S,\"constructor\",{value:w,configurable:!0}),w.displayName=c(S,u,\"GeneratorFunction\"),t.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===w||\"GeneratorFunction\"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,S):(e.__proto__=S,c(e,u,\"GeneratorFunction\")),e.prototype=Object.create(T),e},t.awrap=function(e){return{__await:e}},O(x.prototype),c(x.prototype,s,(function(){return this})),t.AsyncIterator=x,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new x(l(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},O(T),c(T,u,\"Generator\"),c(T,a,(function(){return this})),c(T,\"toString\",(function(){return\"[object Generator]\"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=I,C.prototype={constructor:C,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=e,this.tryEntries.forEach(j),!t)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function o(n,o){return s.type=\"throw\",s.arg=t,r.next=n,o&&(r.method=\"next\",r.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if(\"root\"===a.tryLoc)return o(\"end\");if(a.tryLoc<=this.prev){var u=n.call(a,\"catchLoc\"),c=n.call(a,\"finallyLoc\");if(u&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw Error(\"try statement without catch or finally\");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var i=o;break}}i&&(\"break\"===e||\"continue\"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method=\"next\",this.next=i.finallyLoc,g):this.complete(a)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),j(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;j(r)}return o}}throw Error(\"illegal catch attempt\")},delegateYield:function(t,r,n){return this.delegate={iterator:I(t),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=e),g}},t}function v(e){return v=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},v(e)}function g(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function b(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){g(i,n,o,a,s,\"next\",e)}function s(e){g(i,n,o,a,s,\"throw\",e)}a(void 0)}))}}function w(e,t,r){return S.apply(this,arguments)}function S(){return S=b(m().mark((function e(t,r,n){var o,i,a,s,u,c,l,f=arguments;return m().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o=f.length>3&&void 0!==f[3]?f[3]:1.5,i=f.length>4&&void 0!==f[4]&&f[4],a=[],s=0,e.t0=a,e.next=7,t();case 7:if(e.t1=e.sent,e.t0.push.call(e.t0,e.t1),r(a[a.length-1])){e.next=11;break}return e.abrupt(\"return\",a);case 11:u=new Date(Date.now()+1e3*n).valueOf(),l=c=1e3;case 14:if(!(Date.now()<u&&r(a[a.length-1]))){e.next=30;break}return s+=1,i&&console.info(\"Waiting \".concat(c,\"ms before trying again (bringing the total wait time to \").concat(l,\"ms so far, of total \").concat(1e3*n,\"ms)\")),e.next=19,new Promise((function(e){return setTimeout(e,c)}));case 19:return c*=o,new Date(Date.now()+c).valueOf()>u&&(c=u-Date.now(),i&&console.info(\"was gonna wait too long; new waitTime: \".concat(c,\"ms\"))),l=c+l,e.t2=a,e.next=25,t(a[a.length-1]);case 25:e.t3=e.sent,e.t2.push.call(e.t2,e.t3),i&&r(a[a.length-1])&&console.info(\"\".concat(s,\". Called \").concat(t,\"; \").concat(a.length,\" prev attempts. Most recent: \").concat(JSON.stringify(a[a.length-1],null,2))),e.next=14;break;case 30:return e.abrupt(\"return\",a);case 31:case\"end\":return e.stop()}}),e)}))),S.apply(this,arguments)}var E,_=/Error\\(Contract, #(\\d+)\\)/;function k(e){for(var t=new n.cereal.XdrReader(e),r=[];!t.eof;)r.push(n.xdr.ScSpecEntry.read(t));return r}function T(e,t){return O.apply(this,arguments)}function O(){return(O=b(m().mark((function e(t,r){return m().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",t.publicKey?r.getAccount(t.publicKey):new n.Account(y,\"0\"));case 1:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function x(e,t,r){return t=C(t),function(e,t){if(t&&(\"object\"==I(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,R()?Reflect.construct(t,r||[],C(e).constructor):t.apply(e,r))}function A(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&j(e,t)}function P(e){var t=\"function\"==typeof Map?new Map:void 0;return P=function(e){if(null===e||!function(e){try{return-1!==Function.toString.call(e).indexOf(\"[native code]\")}catch(t){return\"function\"==typeof e}}(e))return e;if(\"function\"!=typeof e)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return function(e,t,r){if(R())return Reflect.construct.apply(null,arguments);var n=[null];n.push.apply(n,t);var o=new(e.bind.apply(e,n));return r&&j(o,r.prototype),o}(e,arguments,C(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),j(r,e)},P(e)}function R(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(R=function(){return!!e})()}function j(e,t){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},j(e,t)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}function I(e){return I=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},I(e)}function L(){L=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(e,t,r){e[t]=r.value},i=\"function\"==typeof Symbol?Symbol:{},a=i.iterator||\"@@iterator\",s=i.asyncIterator||\"@@asyncIterator\",u=i.toStringTag||\"@@toStringTag\";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},\"\")}catch(e){c=function(e,t,r){return e[t]=r}}function l(e,t,r,n){var i=t&&t.prototype instanceof v?t:v,a=Object.create(i.prototype),s=new R(n||[]);return o(a,\"_invoke\",{value:O(e,r,s)}),a}function f(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}t.wrap=l;var p=\"suspendedStart\",d=\"suspendedYield\",h=\"executing\",y=\"completed\",m={};function v(){}function g(){}function b(){}var w={};c(w,a,(function(){return this}));var S=Object.getPrototypeOf,E=S&&S(S(j([])));E&&E!==r&&n.call(E,a)&&(w=E);var _=b.prototype=v.prototype=Object.create(w);function k(e){[\"next\",\"throw\",\"return\"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function T(e,t){function r(o,i,a,s){var u=f(e[o],e,i);if(\"throw\"!==u.type){var c=u.arg,l=c.value;return l&&\"object\"==I(l)&&n.call(l,\"__await\")?t.resolve(l.__await).then((function(e){r(\"next\",e,a,s)}),(function(e){r(\"throw\",e,a,s)})):t.resolve(l).then((function(e){c.value=e,a(c)}),(function(e){return r(\"throw\",e,a,s)}))}s(u.arg)}var i;o(this,\"_invoke\",{value:function(e,n){function o(){return new t((function(t,o){r(e,n,t,o)}))}return i=i?i.then(o,o):o()}})}function O(t,r,n){var o=p;return function(i,a){if(o===h)throw Error(\"Generator is already running\");if(o===y){if(\"throw\"===i)throw a;return{value:e,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var u=x(s,n);if(u){if(u===m)continue;return u}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===p)throw o=y,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=h;var c=f(t,r,n);if(\"normal\"===c.type){if(o=n.done?y:d,c.arg===m)continue;return{value:c.arg,done:n.done}}\"throw\"===c.type&&(o=y,n.method=\"throw\",n.arg=c.arg)}}}function x(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,\"throw\"===n&&t.iterator.return&&(r.method=\"return\",r.arg=e,x(t,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),m;var i=f(o,t.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,m;var a=i.arg;return a?a.done?(r[t.resultName]=a.value,r.next=t.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=e),r.delegate=null,m):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,m)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function R(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(A,this),this.reset(!0)}function j(t){if(t||\"\"===t){var r=t[a];if(r)return r.call(t);if(\"function\"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,i=function r(){for(;++o<t.length;)if(n.call(t,o))return r.value=t[o],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(I(t)+\" is not iterable\")}return g.prototype=b,o(_,\"constructor\",{value:b,configurable:!0}),o(b,\"constructor\",{value:g,configurable:!0}),g.displayName=c(b,u,\"GeneratorFunction\"),t.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===g||\"GeneratorFunction\"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,c(e,u,\"GeneratorFunction\")),e.prototype=Object.create(_),e},t.awrap=function(e){return{__await:e}},k(T.prototype),c(T.prototype,s,(function(){return this})),t.AsyncIterator=T,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new T(l(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},k(_),c(_,u,\"Generator\"),c(_,a,(function(){return this})),c(_,\"toString\",(function(){return\"[object Generator]\"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=j,R.prototype={constructor:R,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=e,this.tryEntries.forEach(P),!t)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function o(n,o){return s.type=\"throw\",s.arg=t,r.next=n,o&&(r.method=\"next\",r.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if(\"root\"===a.tryLoc)return o(\"end\");if(a.tryLoc<=this.prev){var u=n.call(a,\"catchLoc\"),c=n.call(a,\"finallyLoc\");if(u&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw Error(\"try statement without catch or finally\");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var i=o;break}}i&&(\"break\"===e||\"continue\"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method=\"next\",this.next=i.finallyLoc,m):this.complete(a)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),P(r),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;P(r)}return o}}throw Error(\"illegal catch attempt\")},delegateYield:function(t,r,n){return this.delegate={iterator:j(t),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=e),m}},t}function B(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function N(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){B(i,n,o,a,s,\"next\",e)}function s(e){B(i,n,o,a,s,\"throw\",e)}a(void 0)}))}}function U(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function M(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,V(n.key),n)}}function D(e,t,r){return t&&M(e.prototype,t),r&&M(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}function F(e,t,r){return(t=V(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function V(e){var t=function(e,t){if(\"object\"!=I(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=I(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==I(t)?t:t+\"\"}var q,K=function(){function e(t){var r,n=this;U(this,e),F(this,\"send\",N(L().mark((function t(){var r,o,a;return L().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,n.server.sendTransaction(n.assembled.signed);case 2:if(n.sendTransactionResponse=t.sent,\"PENDING\"===n.sendTransactionResponse.status){t.next=5;break}throw new e.Errors.SendFailed(\"Sending the transaction to the network failed!\\n\".concat(JSON.stringify(n.sendTransactionResponse,null,2)));case 5:return o=n.sendTransactionResponse.hash,a=null!==(r=n.assembled.options.timeoutInSeconds)&&void 0!==r?r:h,t.next=9,w((function(){return n.server.getTransaction(o)}),(function(e){return e.status===i.j.GetTransactionStatus.NOT_FOUND}),a);case 9:if(n.getTransactionResponseAll=t.sent,n.getTransactionResponse=n.getTransactionResponseAll[n.getTransactionResponseAll.length-1],n.getTransactionResponse.status!==i.j.GetTransactionStatus.NOT_FOUND){t.next=13;break}throw new e.Errors.TransactionStillPending(\"Waited \".concat(a,\" seconds for transaction to complete, but it did not. \")+\"Returning anyway. Check the transaction status manually. \"+\"Sent transaction: \".concat(JSON.stringify(n.sendTransactionResponse,null,2),\"\\n\")+\"All attempts to get the result: \".concat(JSON.stringify(n.getTransactionResponseAll,null,2)));case 13:return t.abrupt(\"return\",n);case 14:case\"end\":return t.stop()}}),t)})))),this.assembled=t,this.server=new o.Server(this.assembled.options.rpcUrl,{allowHttp:null!==(r=this.assembled.options.allowHttp)&&void 0!==r&&r})}return D(e,[{key:\"result\",get:function(){if(\"getTransactionResponse\"in this&&this.getTransactionResponse){if(\"returnValue\"in this.getTransactionResponse)return this.assembled.options.parseResultXdr(this.getTransactionResponse.returnValue);throw new Error(\"Transaction failed! Cannot parse result.\")}if(this.sendTransactionResponse){var t,r=null===(t=this.sendTransactionResponse.errorResult)||void 0===t?void 0:t.result();if(r)throw new e.Errors.SendFailed(\"Transaction simulation looked correct, but attempting to send the transaction failed. Check `simulation` and `sendTransactionResponseAll` to troubleshoot. Decoded `sendTransactionResponse.errorResultXdr`: \".concat(r));throw new e.Errors.SendResultOnly(\"Transaction was sent to the network, but not yet awaited. No result to show. Await transaction completion with `getTransaction(sendTransactionResponse.hash)`\")}throw new Error(\"Sending transaction failed: \".concat(JSON.stringify(this.assembled.signed)))}}])}();E=K,F(K,\"Errors\",{SendFailed:function(e){function t(){return U(this,t),x(this,t,arguments)}return A(t,e),D(t)}(P(Error)),SendResultOnly:function(e){function t(){return U(this,t),x(this,t,arguments)}return A(t,e),D(t)}(P(Error)),TransactionStillPending:function(e){function t(){return U(this,t),x(this,t,arguments)}return A(t,e),D(t)}(P(Error))}),F(K,\"init\",(q=N(L().mark((function e(t){var r,n;return L().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=new E(t),e.next=3,r.send();case 3:return n=e.sent,e.abrupt(\"return\",n);case 5:case\"end\":return e.stop()}}),e)}))),function(e){return q.apply(this,arguments)}));var H=r(8287).Buffer;function z(e,t,r){return t=Q(t),function(e,t){if(t&&(\"object\"==Y(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,W()?Reflect.construct(t,r||[],Q(e).constructor):t.apply(e,r))}function X(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&$(e,t)}function G(e){var t=\"function\"==typeof Map?new Map:void 0;return G=function(e){if(null===e||!function(e){try{return-1!==Function.toString.call(e).indexOf(\"[native code]\")}catch(t){return\"function\"==typeof e}}(e))return e;if(\"function\"!=typeof e)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return function(e,t,r){if(W())return Reflect.construct.apply(null,arguments);var n=[null];n.push.apply(n,t);var o=new(e.bind.apply(e,n));return r&&$(o,r.prototype),o}(e,arguments,Q(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),$(r,e)},G(e)}function W(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(W=function(){return!!e})()}function $(e,t){return $=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},$(e,t)}function Q(e){return Q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Q(e)}function Y(e){return Y=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Y(e)}function J(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Z(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?J(Object(r),!0).forEach((function(t){fe(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):J(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function ee(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var n,o,i,a,s=[],u=!0,c=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(s.push(n.value),s.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,t)||oe(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function te(e,t){var r=\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(!r){if(Array.isArray(e)||(r=oe(e))||t&&e&&\"number\"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var i,a=!0,s=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return a=e.done,e},e:function(e){s=!0,i=e},f:function(){try{a||null==r.return||r.return()}finally{if(s)throw i}}}}function re(){re=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(e,t,r){e[t]=r.value},i=\"function\"==typeof Symbol?Symbol:{},a=i.iterator||\"@@iterator\",s=i.asyncIterator||\"@@asyncIterator\",u=i.toStringTag||\"@@toStringTag\";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},\"\")}catch(e){c=function(e,t,r){return e[t]=r}}function l(e,t,r,n){var i=t&&t.prototype instanceof v?t:v,a=Object.create(i.prototype),s=new R(n||[]);return o(a,\"_invoke\",{value:O(e,r,s)}),a}function f(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}t.wrap=l;var p=\"suspendedStart\",d=\"suspendedYield\",h=\"executing\",y=\"completed\",m={};function v(){}function g(){}function b(){}var w={};c(w,a,(function(){return this}));var S=Object.getPrototypeOf,E=S&&S(S(j([])));E&&E!==r&&n.call(E,a)&&(w=E);var _=b.prototype=v.prototype=Object.create(w);function k(e){[\"next\",\"throw\",\"return\"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function T(e,t){function r(o,i,a,s){var u=f(e[o],e,i);if(\"throw\"!==u.type){var c=u.arg,l=c.value;return l&&\"object\"==Y(l)&&n.call(l,\"__await\")?t.resolve(l.__await).then((function(e){r(\"next\",e,a,s)}),(function(e){r(\"throw\",e,a,s)})):t.resolve(l).then((function(e){c.value=e,a(c)}),(function(e){return r(\"throw\",e,a,s)}))}s(u.arg)}var i;o(this,\"_invoke\",{value:function(e,n){function o(){return new t((function(t,o){r(e,n,t,o)}))}return i=i?i.then(o,o):o()}})}function O(t,r,n){var o=p;return function(i,a){if(o===h)throw Error(\"Generator is already running\");if(o===y){if(\"throw\"===i)throw a;return{value:e,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var u=x(s,n);if(u){if(u===m)continue;return u}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===p)throw o=y,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=h;var c=f(t,r,n);if(\"normal\"===c.type){if(o=n.done?y:d,c.arg===m)continue;return{value:c.arg,done:n.done}}\"throw\"===c.type&&(o=y,n.method=\"throw\",n.arg=c.arg)}}}function x(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,\"throw\"===n&&t.iterator.return&&(r.method=\"return\",r.arg=e,x(t,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),m;var i=f(o,t.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,m;var a=i.arg;return a?a.done?(r[t.resultName]=a.value,r.next=t.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=e),r.delegate=null,m):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,m)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function R(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(A,this),this.reset(!0)}function j(t){if(t||\"\"===t){var r=t[a];if(r)return r.call(t);if(\"function\"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,i=function r(){for(;++o<t.length;)if(n.call(t,o))return r.value=t[o],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(Y(t)+\" is not iterable\")}return g.prototype=b,o(_,\"constructor\",{value:b,configurable:!0}),o(b,\"constructor\",{value:g,configurable:!0}),g.displayName=c(b,u,\"GeneratorFunction\"),t.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===g||\"GeneratorFunction\"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,c(e,u,\"GeneratorFunction\")),e.prototype=Object.create(_),e},t.awrap=function(e){return{__await:e}},k(T.prototype),c(T.prototype,s,(function(){return this})),t.AsyncIterator=T,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new T(l(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},k(_),c(_,u,\"Generator\"),c(_,a,(function(){return this})),c(_,\"toString\",(function(){return\"[object Generator]\"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=j,R.prototype={constructor:R,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=e,this.tryEntries.forEach(P),!t)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function o(n,o){return s.type=\"throw\",s.arg=t,r.next=n,o&&(r.method=\"next\",r.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if(\"root\"===a.tryLoc)return o(\"end\");if(a.tryLoc<=this.prev){var u=n.call(a,\"catchLoc\"),c=n.call(a,\"finallyLoc\");if(u&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw Error(\"try statement without catch or finally\");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var i=o;break}}i&&(\"break\"===e||\"continue\"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method=\"next\",this.next=i.finallyLoc,m):this.complete(a)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),P(r),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;P(r)}return o}}throw Error(\"illegal catch attempt\")},delegateYield:function(t,r,n){return this.delegate={iterator:j(t),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=e),m}},t}function ne(e){return function(e){if(Array.isArray(e))return ie(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||oe(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function oe(e,t){if(e){if(\"string\"==typeof e)return ie(e,t);var r={}.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ie(e,t):void 0}}function ie(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function ae(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function se(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){ae(i,n,o,a,s,\"next\",e)}function s(e){ae(i,n,o,a,s,\"throw\",e)}a(void 0)}))}}function ue(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function ce(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,pe(n.key),n)}}function le(e,t,r){return t&&ce(e.prototype,t),r&&ce(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}function fe(e,t,r){return(t=pe(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function pe(e){var t=function(e,t){if(\"object\"!=Y(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=Y(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==Y(t)?t:t+\"\"}var de=function(){function e(t){var r,s,u=this;ue(this,e),fe(this,\"simulate\",se(re().mark((function t(){var r,o,s,c,l,f,p,d,y=arguments;return re().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(o=(y.length>0&&void 0!==y[0]?y[0]:{}).restore,u.built){t.next=5;break}if(u.raw){t.next=4;break}throw new Error(\"Transaction has not yet been assembled; call `AssembledTransaction.build` first.\");case 4:u.built=u.raw.build();case 5:return o=null!==(r=o)&&void 0!==r?r:u.options.restore,delete u.simulationResult,delete u.simulationTransactionData,t.next=10,u.server.simulateTransaction(u.built);case 10:if(u.simulation=t.sent,!o||!i.j.isSimulationRestore(u.simulation)){t.next=25;break}return t.next=14,T(u.options,u.server);case 14:return s=t.sent,t.next=17,u.restoreFootprint(u.simulation.restorePreamble,s);case 17:if((c=t.sent).status!==i.j.GetTransactionStatus.SUCCESS){t.next=24;break}return d=new n.Contract(u.options.contractId),u.raw=new n.TransactionBuilder(s,{fee:null!==(l=u.options.fee)&&void 0!==l?l:n.BASE_FEE,networkPassphrase:u.options.networkPassphrase}).addOperation(d.call.apply(d,[u.options.method].concat(ne(null!==(f=u.options.args)&&void 0!==f?f:[])))).setTimeout(null!==(p=u.options.timeoutInSeconds)&&void 0!==p?p:h),t.next=23,u.simulate();case 23:return t.abrupt(\"return\",u);case 24:throw new e.Errors.RestorationFailure(\"Automatic restore failed! You set 'restore: true' but the attempted restore did not work. Result:\\n\".concat(JSON.stringify(c)));case 25:return i.j.isSimulationSuccess(u.simulation)&&(u.built=(0,a.X)(u.built,u.simulation).build()),t.abrupt(\"return\",u);case 27:case\"end\":return t.stop()}}),t)})))),fe(this,\"sign\",se(re().mark((function t(){var r,o,i,a,s,c,l,f,p,d,y,m,v=arguments;return re().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(i=(o=v.length>0&&void 0!==v[0]?v[0]:{}).force,a=void 0!==i&&i,s=o.signTransaction,c=void 0===s?u.options.signTransaction:s,u.built){t.next=3;break}throw new Error(\"Transaction has not yet been simulated\");case 3:if(a||!u.isReadCall){t.next=5;break}throw new e.Errors.NoSignatureNeeded(\"This is a read call. It requires no signature or sending. Use `force: true` to sign and send anyway.\");case 5:if(c){t.next=7;break}throw new e.Errors.NoSigner(\"You must provide a signTransaction function, either when calling `signAndSend` or when initializing your Client\");case 7:if(!(l=u.needsNonInvokerSigningBy().filter((function(e){return!e.startsWith(\"C\")}))).length){t.next=10;break}throw new e.Errors.NeedsMoreSignatures(\"Transaction requires signatures from \".concat(l,\". \")+\"See `needsNonInvokerSigningBy` for details.\");case 10:return f=null!==(r=u.options.timeoutInSeconds)&&void 0!==r?r:h,u.built=n.TransactionBuilder.cloneFrom(u.built,{fee:u.built.fee,timebounds:void 0,sorobanData:u.simulationData.transactionData}).setTimeout(f).build(),p={networkPassphrase:u.options.networkPassphrase},u.options.address&&(p.address=u.options.address),void 0!==u.options.submit&&(p.submit=u.options.submit),u.options.submitUrl&&(p.submitUrl=u.options.submitUrl),t.next=18,c(u.built.toXDR(),p);case 18:d=t.sent,y=d.signedTxXdr,m=d.error,u.handleWalletError(m),u.signed=n.TransactionBuilder.fromXDR(y,u.options.networkPassphrase);case 23:case\"end\":return t.stop()}}),t)})))),fe(this,\"signAndSend\",se(re().mark((function e(){var t,r,n,o,i,a,s=arguments;return re().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=(t=s.length>0&&void 0!==s[0]?s[0]:{}).force,n=void 0!==r&&r,o=t.signTransaction,i=void 0===o?u.options.signTransaction:o,u.signed){e.next=10;break}return a=u.options.submit,u.options.submit&&(u.options.submit=!1),e.prev=4,e.next=7,u.sign({force:n,signTransaction:i});case 7:return e.prev=7,u.options.submit=a,e.finish(7);case 10:return e.abrupt(\"return\",u.send());case 11:case\"end\":return e.stop()}}),e,null,[[4,,7,10]])})))),fe(this,\"needsNonInvokerSigningBy\",(function(){var e,t=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).includeAlreadySigned,r=void 0!==t&&t;if(!u.built)throw new Error(\"Transaction has not yet been simulated\");if(!(\"operations\"in u.built))throw new Error(\"Unexpected Transaction type; no operations: \".concat(JSON.stringify(u.built)));var o=u.built.operations[0];return ne(new Set((null!==(e=o.auth)&&void 0!==e?e:[]).filter((function(e){return e.credentials().switch()===n.xdr.SorobanCredentialsType.sorobanCredentialsAddress()&&(r||\"scvVoid\"===e.credentials().address().signature().switch().name)})).map((function(e){return n.Address.fromScAddress(e.credentials().address().address()).toString()}))))})),fe(this,\"signAuthEntries\",se(re().mark((function t(){var r,o,i,a,s,c,l,f,p,d,h,y,m,v,g,b,w=arguments;return re().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(i=(o=w.length>0&&void 0!==w[0]?w[0]:{}).expiration,a=void 0===i?se(re().mark((function e(){return re().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u.server.getLatestLedger();case 2:return e.t0=e.sent.sequence,e.abrupt(\"return\",e.t0+100);case 4:case\"end\":return e.stop()}}),e)})))():i,s=o.signAuthEntry,c=void 0===s?u.options.signAuthEntry:s,l=o.address,f=void 0===l?u.options.publicKey:l,p=o.authorizeEntry,d=void 0===p?n.authorizeEntry:p,u.built){t.next=3;break}throw new Error(\"Transaction has not yet been assembled or simulated\");case 3:if(d!==n.authorizeEntry){t.next=11;break}if(0!==(h=u.needsNonInvokerSigningBy()).length){t.next=7;break}throw new e.Errors.NoUnsignedNonInvokerAuthEntries(\"No unsigned non-invoker auth entries; maybe you already signed?\");case 7:if(-1!==h.indexOf(null!=f?f:\"\")){t.next=9;break}throw new e.Errors.NoSignatureNeeded('No auth entries for public key \"'.concat(f,'\"'));case 9:if(c){t.next=11;break}throw new e.Errors.NoSigner(\"You must provide `signAuthEntry` or a custom `authorizeEntry`\");case 11:y=u.built.operations[0],m=null!==(r=y.auth)&&void 0!==r?r:[],v=te(m.entries()),t.prev=14,b=re().mark((function e(){var t,r,o,i,s;return re().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=ee(g.value,2),r=t[0],o=t[1],(i=n.xdr.SorobanCredentials.fromXDR(o.credentials().toXDR())).switch()===n.xdr.SorobanCredentialsType.sorobanCredentialsAddress()){e.next=4;break}return e.abrupt(\"return\",0);case 4:if(n.Address.fromScAddress(i.address().address()).toString()===f){e.next=7;break}return e.abrupt(\"return\",0);case 7:return s=null!=c?c:Promise.resolve,e.t0=d,e.t1=o,e.t2=function(){var e=se(re().mark((function e(t){var r,n,o;return re().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,s(t.toXDR(\"base64\"),{address:f});case 2:return r=e.sent,n=r.signedAuthEntry,o=r.error,u.handleWalletError(o),e.abrupt(\"return\",H.from(n,\"base64\"));case 7:case\"end\":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),e.next=13,a;case 13:return e.t3=e.sent,e.t4=u.options.networkPassphrase,e.next=17,(0,e.t0)(e.t1,e.t2,e.t3,e.t4);case 17:m[r]=e.sent;case 18:case\"end\":return e.stop()}}),e)})),v.s();case 17:if((g=v.n()).done){t.next=24;break}return t.delegateYield(b(),\"t0\",19);case 19:if(0!==t.t0){t.next=22;break}return t.abrupt(\"continue\",22);case 22:t.next=17;break;case 24:t.next=29;break;case 26:t.prev=26,t.t1=t.catch(14),v.e(t.t1);case 29:return t.prev=29,v.f(),t.finish(29);case 32:case\"end\":return t.stop()}}),t,null,[[14,26,29,32]])})))),this.options=t,this.options.simulate=null===(r=this.options.simulate)||void 0===r||r,this.server=new o.Server(this.options.rpcUrl,{allowHttp:null!==(s=this.options.allowHttp)&&void 0!==s&&s})}return le(e,[{key:\"toJSON\",value:function(){var e;return JSON.stringify({method:this.options.method,tx:null===(e=this.built)||void 0===e?void 0:e.toXDR(),simulationResult:{auth:this.simulationData.result.auth.map((function(e){return e.toXDR(\"base64\")})),retval:this.simulationData.result.retval.toXDR(\"base64\")},simulationTransactionData:this.simulationData.transactionData.toXDR(\"base64\")})}},{key:\"toXDR\",value:function(){var e;if(!this.built)throw new Error(\"Transaction has not yet been simulated; call `AssembledTransaction.simulate` first.\");return null===(e=this.built)||void 0===e?void 0:e.toEnvelope().toXDR(\"base64\")}},{key:\"handleWalletError\",value:function(t){if(t){var r=t.message,n=t.code,o=\"\".concat(r).concat(t.ext?\" (\".concat(t.ext.join(\", \"),\")\"):\"\");switch(n){case-1:throw new e.Errors.InternalWalletError(o);case-2:throw new e.Errors.ExternalServiceError(o);case-3:throw new e.Errors.InvalidClientRequest(o);case-4:throw new e.Errors.UserRejected(o);default:throw new Error(\"Unhandled error: \".concat(o))}}}},{key:\"simulationData\",get:function(){var t;if(this.simulationResult&&this.simulationTransactionData)return{result:this.simulationResult,transactionData:this.simulationTransactionData};var r=this.simulation;if(!r)throw new e.Errors.NotYetSimulated(\"Transaction has not yet been simulated\");if(i.j.isSimulationError(r))throw new e.Errors.SimulationFailed('Transaction simulation failed: \"'.concat(r.error,'\"'));if(i.j.isSimulationRestore(r))throw new e.Errors.ExpiredState(\"You need to restore some contract state before you can invoke this method.\\nYou can set `restore` to true in the method options in order to automatically restore the contract state when needed.\");return this.simulationResult=null!==(t=r.result)&&void 0!==t?t:{auth:[],retval:n.xdr.ScVal.scvVoid()},this.simulationTransactionData=r.transactionData.build(),{result:this.simulationResult,transactionData:this.simulationTransactionData}}},{key:\"result\",get:function(){try{if(!this.simulationData.result)throw new Error(\"No simulation result!\");return this.options.parseResultXdr(this.simulationData.result.retval)}catch(r){if(\"object\"!==v(t=r)||null===t||!(\"toString\"in t))throw r;var e=this.parseError(r.toString());if(e)return e;throw r}var t}},{key:\"parseError\",value:function(e){if(this.options.errorTypes){var t=e.match(_);if(t){var r=parseInt(t[1],10),n=this.options.errorTypes[r];if(n)return new d(n)}}}},{key:\"send\",value:(u=se(re().mark((function e(){var t;return re().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.signed){e.next=2;break}throw new Error(\"The transaction has not yet been signed. Run `sign` first, or use `signAndSend` instead.\");case 2:return e.next=4,K.init(this);case 4:return t=e.sent,e.abrupt(\"return\",t);case 6:case\"end\":return e.stop()}}),e,this)}))),function(){return u.apply(this,arguments)})},{key:\"isReadCall\",get:function(){var e=this.simulationData.result.auth.length,t=this.simulationData.transactionData.resources().footprint().readWrite().length;return 0===e&&0===t}},{key:\"restoreFootprint\",value:(s=se(re().mark((function t(r,n){var o,i,a;return re().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.options.signTransaction){t.next=2;break}throw new Error(\"For automatic restore to work you must provide a signTransaction function when initializing your Client\");case 2:if(null===(o=n)||void 0===o){t.next=6;break}t.t0=o,t.next=9;break;case 6:return t.next=8,T(this.options,this.server);case 8:t.t0=t.sent;case 9:return n=t.t0,t.next=12,e.buildFootprintRestoreTransaction(Z({},this.options),r.transactionData,n,r.minResourceFee);case 12:return i=t.sent,t.next=15,i.signAndSend();case 15:if((a=t.sent).getTransactionResponse){t.next=18;break}throw new e.Errors.RestorationFailure(\"The attempt at automatic restore failed. \\n\".concat(JSON.stringify(a)));case 18:return t.abrupt(\"return\",a.getTransactionResponse);case 19:case\"end\":return t.stop()}}),t,this)}))),function(e,t){return s.apply(this,arguments)})}],[{key:\"fromJSON\",value:function(t,r){var o=r.tx,i=r.simulationResult,a=r.simulationTransactionData,s=new e(t);return s.built=n.TransactionBuilder.fromXDR(o,t.networkPassphrase),s.simulationResult={auth:i.auth.map((function(e){return n.xdr.SorobanAuthorizationEntry.fromXDR(e,\"base64\")})),retval:n.xdr.ScVal.fromXDR(i.retval,\"base64\")},s.simulationTransactionData=n.xdr.SorobanTransactionData.fromXDR(a,\"base64\"),s}},{key:\"fromXDR\",value:function(t,r,o){var i,a=n.xdr.TransactionEnvelope.fromXDR(r,\"base64\"),s=n.TransactionBuilder.fromXDR(a,t.networkPassphrase),u=s.operations[0];if(null==u||null===(i=u.func)||void 0===i||!i.value||\"function\"!=typeof u.func.value)throw new Error(\"Could not extract the method from the transaction envelope.\");var c=u.func.value();if(null==c||!c.functionName)throw new Error(\"Could not extract the method name from the transaction envelope.\");var l=c.functionName().toString(\"utf-8\"),f=new e(Z(Z({},t),{},{method:l,parseResultXdr:function(e){return o.funcResToNative(l,e)}}));return f.built=s,f}},{key:\"build\",value:function(t){var r,o=new n.Contract(t.contractId);return e.buildWithOp(o.call.apply(o,[t.method].concat(ne(null!==(r=t.args)&&void 0!==r?r:[]))),t)}},{key:\"buildWithOp\",value:(r=se(re().mark((function t(r,o){var i,a,s,u;return re().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return s=new e(o),t.next=3,T(o,s.server);case 3:if(u=t.sent,s.raw=new n.TransactionBuilder(u,{fee:null!==(i=o.fee)&&void 0!==i?i:n.BASE_FEE,networkPassphrase:o.networkPassphrase}).setTimeout(null!==(a=o.timeoutInSeconds)&&void 0!==a?a:h).addOperation(r),!o.simulate){t.next=8;break}return t.next=8,s.simulate();case 8:return t.abrupt(\"return\",s);case 9:case\"end\":return t.stop()}}),t)}))),function(e,t){return r.apply(this,arguments)})},{key:\"buildFootprintRestoreTransaction\",value:(t=se(re().mark((function t(r,o,i,a){var s,u;return re().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return(u=new e(r)).raw=new n.TransactionBuilder(i,{fee:a,networkPassphrase:r.networkPassphrase}).setSorobanData(o instanceof n.SorobanDataBuilder?o.build():o).addOperation(n.Operation.restoreFootprint({})).setTimeout(null!==(s=r.timeoutInSeconds)&&void 0!==s?s:h),t.next=4,u.simulate({restore:!1});case 4:return t.abrupt(\"return\",u);case 5:case\"end\":return t.stop()}}),t)}))),function(e,r,n,o){return t.apply(this,arguments)})}]);var t,r,s,u}();fe(de,\"Errors\",{ExpiredState:function(e){function t(){return ue(this,t),z(this,t,arguments)}return X(t,e),le(t)}(G(Error)),RestorationFailure:function(e){function t(){return ue(this,t),z(this,t,arguments)}return X(t,e),le(t)}(G(Error)),NeedsMoreSignatures:function(e){function t(){return ue(this,t),z(this,t,arguments)}return X(t,e),le(t)}(G(Error)),NoSignatureNeeded:function(e){function t(){return ue(this,t),z(this,t,arguments)}return X(t,e),le(t)}(G(Error)),NoUnsignedNonInvokerAuthEntries:function(e){function t(){return ue(this,t),z(this,t,arguments)}return X(t,e),le(t)}(G(Error)),NoSigner:function(e){function t(){return ue(this,t),z(this,t,arguments)}return X(t,e),le(t)}(G(Error)),NotYetSimulated:function(e){function t(){return ue(this,t),z(this,t,arguments)}return X(t,e),le(t)}(G(Error)),FakeAccount:function(e){function t(){return ue(this,t),z(this,t,arguments)}return X(t,e),le(t)}(G(Error)),SimulationFailed:function(e){function t(){return ue(this,t),z(this,t,arguments)}return X(t,e),le(t)}(G(Error)),InternalWalletError:function(e){function t(){return ue(this,t),z(this,t,arguments)}return X(t,e),le(t)}(G(Error)),ExternalServiceError:function(e){function t(){return ue(this,t),z(this,t,arguments)}return X(t,e),le(t)}(G(Error)),InvalidClientRequest:function(e){function t(){return ue(this,t),z(this,t,arguments)}return X(t,e),le(t)}(G(Error)),UserRejected:function(e){function t(){return ue(this,t),z(this,t,arguments)}return X(t,e),le(t)}(G(Error))});var he=r(8287).Buffer;function ye(e){return ye=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},ye(e)}function me(){me=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(e,t,r){e[t]=r.value},i=\"function\"==typeof Symbol?Symbol:{},a=i.iterator||\"@@iterator\",s=i.asyncIterator||\"@@asyncIterator\",u=i.toStringTag||\"@@toStringTag\";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},\"\")}catch(e){c=function(e,t,r){return e[t]=r}}function l(e,t,r,n){var i=t&&t.prototype instanceof v?t:v,a=Object.create(i.prototype),s=new R(n||[]);return o(a,\"_invoke\",{value:O(e,r,s)}),a}function f(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}t.wrap=l;var p=\"suspendedStart\",d=\"suspendedYield\",h=\"executing\",y=\"completed\",m={};function v(){}function g(){}function b(){}var w={};c(w,a,(function(){return this}));var S=Object.getPrototypeOf,E=S&&S(S(j([])));E&&E!==r&&n.call(E,a)&&(w=E);var _=b.prototype=v.prototype=Object.create(w);function k(e){[\"next\",\"throw\",\"return\"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function T(e,t){function r(o,i,a,s){var u=f(e[o],e,i);if(\"throw\"!==u.type){var c=u.arg,l=c.value;return l&&\"object\"==ye(l)&&n.call(l,\"__await\")?t.resolve(l.__await).then((function(e){r(\"next\",e,a,s)}),(function(e){r(\"throw\",e,a,s)})):t.resolve(l).then((function(e){c.value=e,a(c)}),(function(e){return r(\"throw\",e,a,s)}))}s(u.arg)}var i;o(this,\"_invoke\",{value:function(e,n){function o(){return new t((function(t,o){r(e,n,t,o)}))}return i=i?i.then(o,o):o()}})}function O(t,r,n){var o=p;return function(i,a){if(o===h)throw Error(\"Generator is already running\");if(o===y){if(\"throw\"===i)throw a;return{value:e,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var u=x(s,n);if(u){if(u===m)continue;return u}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===p)throw o=y,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=h;var c=f(t,r,n);if(\"normal\"===c.type){if(o=n.done?y:d,c.arg===m)continue;return{value:c.arg,done:n.done}}\"throw\"===c.type&&(o=y,n.method=\"throw\",n.arg=c.arg)}}}function x(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,\"throw\"===n&&t.iterator.return&&(r.method=\"return\",r.arg=e,x(t,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),m;var i=f(o,t.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,m;var a=i.arg;return a?a.done?(r[t.resultName]=a.value,r.next=t.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=e),r.delegate=null,m):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,m)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function R(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(A,this),this.reset(!0)}function j(t){if(t||\"\"===t){var r=t[a];if(r)return r.call(t);if(\"function\"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,i=function r(){for(;++o<t.length;)if(n.call(t,o))return r.value=t[o],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(ye(t)+\" is not iterable\")}return g.prototype=b,o(_,\"constructor\",{value:b,configurable:!0}),o(b,\"constructor\",{value:g,configurable:!0}),g.displayName=c(b,u,\"GeneratorFunction\"),t.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===g||\"GeneratorFunction\"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,c(e,u,\"GeneratorFunction\")),e.prototype=Object.create(_),e},t.awrap=function(e){return{__await:e}},k(T.prototype),c(T.prototype,s,(function(){return this})),t.AsyncIterator=T,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new T(l(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},k(_),c(_,u,\"Generator\"),c(_,a,(function(){return this})),c(_,\"toString\",(function(){return\"[object Generator]\"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=j,R.prototype={constructor:R,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=e,this.tryEntries.forEach(P),!t)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function o(n,o){return s.type=\"throw\",s.arg=t,r.next=n,o&&(r.method=\"next\",r.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if(\"root\"===a.tryLoc)return o(\"end\");if(a.tryLoc<=this.prev){var u=n.call(a,\"catchLoc\"),c=n.call(a,\"finallyLoc\");if(u&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw Error(\"try statement without catch or finally\");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var i=o;break}}i&&(\"break\"===e||\"continue\"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method=\"next\",this.next=i.finallyLoc,m):this.complete(a)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),P(r),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;P(r)}return o}}throw Error(\"illegal catch attempt\")},delegateYield:function(t,r,n){return this.delegate={iterator:j(t),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=e),m}},t}function ve(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function ge(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){ve(i,n,o,a,s,\"next\",e)}function s(e){ve(i,n,o,a,s,\"throw\",e)}a(void 0)}))}}var be=function(e,t){return{signTransaction:(o=ge(me().mark((function r(o,i){var a;return me().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return(a=n.TransactionBuilder.fromXDR(o,(null==i?void 0:i.networkPassphrase)||t)).sign(e),r.abrupt(\"return\",{signedTxXdr:a.toXDR(),signerAddress:e.publicKey()});case 3:case\"end\":return r.stop()}}),r)}))),function(e,t){return o.apply(this,arguments)}),signAuthEntry:(r=ge(me().mark((function t(r){var o;return me().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return o=e.sign((0,n.hash)(he.from(r,\"base64\"))).toString(\"base64\"),t.abrupt(\"return\",{signedAuthEntry:o,signerAddress:e.publicKey()});case 2:case\"end\":return t.stop()}}),t)}))),function(e){return r.apply(this,arguments)})};var r,o},we=r(8287).Buffer;function Se(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Ee(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Se(Object(r),!0).forEach((function(t){Te(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Se(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function _e(e){return _e=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},_e(e)}function ke(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,Oe(n.key),n)}}function Te(e,t,r){return(t=Oe(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Oe(e){var t=function(e,t){if(\"object\"!=_e(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=_e(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==_e(t)?t:t+\"\"}function xe(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var n,o,i,a,s=[],u=!0,c=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(s.push(n.value),s.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return Ae(e,t);var r={}.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ae(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function Ae(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function Pe(e){return/^\\d+$/.test(e.name().toString())}var Re={U32:{type:\"integer\",minimum:0,maximum:4294967295},I32:{type:\"integer\",minimum:-2147483648,maximum:2147483647},U64:{type:\"string\",pattern:\"^([1-9][0-9]*|0)$\",minLength:1,maxLength:20},I64:{type:\"string\",pattern:\"^(-?[1-9][0-9]*|0)$\",minLength:1,maxLength:21},U128:{type:\"string\",pattern:\"^([1-9][0-9]*|0)$\",minLength:1,maxLength:39},I128:{type:\"string\",pattern:\"^(-?[1-9][0-9]*|0)$\",minLength:1,maxLength:40},U256:{type:\"string\",pattern:\"^([1-9][0-9]*|0)$\",minLength:1,maxLength:78},I256:{type:\"string\",pattern:\"^(-?[1-9][0-9]*|0)$\",minLength:1,maxLength:79},Address:{type:\"string\",format:\"address\",description:\"Address can be a public key or contract id\"},ScString:{type:\"string\",description:\"ScString is a string\"},ScSymbol:{type:\"string\",description:\"ScString is a string\"},DataUrl:{type:\"string\",pattern:\"^(?:[A-Za-z0-9+\\\\/]{4})*(?:[A-Za-z0-9+\\\\/]{2}==|[A-Za-z0-9+\\\\/]{3}=)?$\"}};function je(e){var t;switch(e.switch().value){case n.xdr.ScSpecType.scSpecTypeVal().value:t=\"Val\";break;case n.xdr.ScSpecType.scSpecTypeBool().value:return{type:\"boolean\"};case n.xdr.ScSpecType.scSpecTypeVoid().value:return{type:\"null\"};case n.xdr.ScSpecType.scSpecTypeError().value:t=\"Error\";break;case n.xdr.ScSpecType.scSpecTypeU32().value:t=\"U32\";break;case n.xdr.ScSpecType.scSpecTypeI32().value:t=\"I32\";break;case n.xdr.ScSpecType.scSpecTypeU64().value:t=\"U64\";break;case n.xdr.ScSpecType.scSpecTypeI64().value:t=\"I64\";break;case n.xdr.ScSpecType.scSpecTypeTimepoint().value:throw new Error(\"Timepoint type not supported\");case n.xdr.ScSpecType.scSpecTypeDuration().value:throw new Error(\"Duration not supported\");case n.xdr.ScSpecType.scSpecTypeU128().value:t=\"U128\";break;case n.xdr.ScSpecType.scSpecTypeI128().value:t=\"I128\";break;case n.xdr.ScSpecType.scSpecTypeU256().value:t=\"U256\";break;case n.xdr.ScSpecType.scSpecTypeI256().value:t=\"I256\";break;case n.xdr.ScSpecType.scSpecTypeBytes().value:t=\"DataUrl\";break;case n.xdr.ScSpecType.scSpecTypeString().value:t=\"ScString\";break;case n.xdr.ScSpecType.scSpecTypeSymbol().value:t=\"ScSymbol\";break;case n.xdr.ScSpecType.scSpecTypeAddress().value:t=\"Address\";break;case n.xdr.ScSpecType.scSpecTypeOption().value:return je(e.option().valueType());case n.xdr.ScSpecType.scSpecTypeResult().value:break;case n.xdr.ScSpecType.scSpecTypeVec().value:return{type:\"array\",items:je(e.vec().elementType())};case n.xdr.ScSpecType.scSpecTypeMap().value:var r=e.map();return{type:\"array\",items:{type:\"array\",items:[je(r.keyType()),je(r.valueType())],minItems:2,maxItems:2}};case n.xdr.ScSpecType.scSpecTypeTuple().value:var o=e.tuple(),i=o.valueTypes().length,a=i;return{type:\"array\",items:o.valueTypes().map(je),minItems:i,maxItems:a};case n.xdr.ScSpecType.scSpecTypeBytesN().value:return{$ref:\"#/definitions/DataUrl\",maxLength:e.bytesN().n()};case n.xdr.ScSpecType.scSpecTypeUdt().value:t=e.udt().name().toString()}return{$ref:\"#/definitions/\".concat(t)}}function Ce(e){var t={},r=[];e.forEach((function(e){var o=e.type(),i=e.name().toString();t[i]=je(o),o.switch().value!==n.xdr.ScSpecType.scSpecTypeOption().value&&r.push(i)}));var o={properties:t};return r.length>0&&(o.required=r),o}var Ie,Le,Be,Ne=(Ie=function e(t){if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),Te(this,\"entries\",[]),0===t.length)throw new Error(\"Contract spec must have at least one entry\");var r=t[0];this.entries=\"string\"==typeof r?t.map((function(e){return n.xdr.ScSpecEntry.fromXDR(e,\"base64\")})):t},Le=[{key:\"funcs\",value:function(){return this.entries.filter((function(e){return e.switch().value===n.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value})).map((function(e){return e.functionV0()}))}},{key:\"getFunc\",value:function(e){var t=this.findEntry(e);if(t.switch().value!==n.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value)throw new Error(\"\".concat(e,\" is not a function\"));return t.functionV0()}},{key:\"funcArgsToScVals\",value:function(e,t){var r=this;return this.getFunc(e).inputs().map((function(e){return r.nativeToScVal(function(e,t){var r=t.name().toString(),n=Object.entries(e).find((function(e){return xe(e,1)[0]===r}));if(!n)throw new Error(\"Missing field \".concat(r));return n[1]}(t,e),e.type())}))}},{key:\"funcResToNative\",value:function(e,t){var r=\"string\"==typeof t?n.xdr.ScVal.fromXDR(t,\"base64\"):t,o=this.getFunc(e).outputs();if(0===o.length){var i=r.switch();if(i.value!==n.xdr.ScValType.scvVoid().value)throw new Error(\"Expected void, got \".concat(i.name));return null}if(o.length>1)throw new Error(\"Multiple outputs not supported\");var a=o[0];return a.switch().value===n.xdr.ScSpecType.scSpecTypeResult().value?new p(this.scValToNative(r,a.result().okType())):this.scValToNative(r,a)}},{key:\"findEntry\",value:function(e){var t=this.entries.find((function(t){return t.value().name().toString()===e}));if(!t)throw new Error(\"no such entry: \".concat(e));return t}},{key:\"nativeToScVal\",value:function(e,t){var r=this,o=t.switch(),i=o.value;if(o.value===n.xdr.ScSpecType.scSpecTypeUdt().value){var a=t.udt();return this.nativeToUdt(e,a.name().toString())}if(i===n.xdr.ScSpecType.scSpecTypeOption().value){var s=t.option();return void 0===e?n.xdr.ScVal.scvVoid():this.nativeToScVal(e,s.valueType())}switch(_e(e)){case\"object\":var u,c,l;if(null===e){if(i===n.xdr.ScSpecType.scSpecTypeVoid().value)return n.xdr.ScVal.scvVoid();throw new TypeError(\"Type \".concat(t,\" was not void, but value was null\"))}if(e instanceof n.xdr.ScVal)return e;if(e instanceof n.Address){if(t.switch().value!==n.xdr.ScSpecType.scSpecTypeAddress().value)throw new TypeError(\"Type \".concat(t,\" was not address, but value was Address\"));return e.toScVal()}if(e instanceof n.Contract){if(t.switch().value!==n.xdr.ScSpecType.scSpecTypeAddress().value)throw new TypeError(\"Type \".concat(t,\" was not address, but value was Address\"));return e.address().toScVal()}if(e instanceof Uint8Array||we.isBuffer(e)){var f=Uint8Array.from(e);switch(i){case n.xdr.ScSpecType.scSpecTypeBytesN().value:var p=t.bytesN();if(f.length!==p.n())throw new TypeError(\"expected \".concat(p.n(),\" bytes, but got \").concat(f.length));return n.xdr.ScVal.scvBytes(f);case n.xdr.ScSpecType.scSpecTypeBytes().value:return n.xdr.ScVal.scvBytes(f);default:throw new TypeError(\"invalid type (\".concat(t,\") specified for Bytes and BytesN\"))}}if(Array.isArray(e))switch(i){case n.xdr.ScSpecType.scSpecTypeVec().value:var d=t.vec().elementType();return n.xdr.ScVal.scvVec(e.map((function(e){return r.nativeToScVal(e,d)})));case n.xdr.ScSpecType.scSpecTypeTuple().value:var h=t.tuple().valueTypes();if(e.length!==h.length)throw new TypeError(\"Tuple expects \".concat(h.length,\" values, but \").concat(e.length,\" were provided\"));return n.xdr.ScVal.scvVec(e.map((function(e,t){return r.nativeToScVal(e,h[t])})));case n.xdr.ScSpecType.scSpecTypeMap().value:var y=t.map(),m=y.keyType(),v=y.valueType();return n.xdr.ScVal.scvMap(e.map((function(e){var t=r.nativeToScVal(e[0],m),o=r.nativeToScVal(e[1],v);return new n.xdr.ScMapEntry({key:t,val:o})})));default:throw new TypeError(\"Type \".concat(t,\" was not vec, but value was Array\"))}if(e.constructor===Map){if(i!==n.xdr.ScSpecType.scSpecTypeMap().value)throw new TypeError(\"Type \".concat(t,\" was not map, but value was Map\"));for(var g=t.map(),b=[],w=e.entries(),S=w.next();!S.done;){var E=xe(S.value,2),_=E[0],k=E[1],T=this.nativeToScVal(_,g.keyType()),O=this.nativeToScVal(k,g.valueType());b.push(new n.xdr.ScMapEntry({key:T,val:O})),S=w.next()}return n.xdr.ScVal.scvMap(b)}if(\"Object\"!==(null!==(u=null===(c=e.constructor)||void 0===c?void 0:c.name)&&void 0!==u?u:\"\"))throw new TypeError(\"cannot interpret \".concat(null===(l=e.constructor)||void 0===l?void 0:l.name,\" value as ScVal (\").concat(JSON.stringify(e),\")\"));throw new TypeError(\"Received object \".concat(e,\"  did not match the provided type \").concat(t));case\"number\":case\"bigint\":switch(i){case n.xdr.ScSpecType.scSpecTypeU32().value:return n.xdr.ScVal.scvU32(e);case n.xdr.ScSpecType.scSpecTypeI32().value:return n.xdr.ScVal.scvI32(e);case n.xdr.ScSpecType.scSpecTypeU64().value:case n.xdr.ScSpecType.scSpecTypeI64().value:case n.xdr.ScSpecType.scSpecTypeU128().value:case n.xdr.ScSpecType.scSpecTypeI128().value:case n.xdr.ScSpecType.scSpecTypeU256().value:case n.xdr.ScSpecType.scSpecTypeI256().value:var x=o.name.substring(10).toLowerCase();return new n.XdrLargeInt(x,e).toScVal();default:throw new TypeError(\"invalid type (\".concat(t,\") specified for integer\"))}case\"string\":return function(e,t){switch(t.value){case n.xdr.ScSpecType.scSpecTypeString().value:return n.xdr.ScVal.scvString(e);case n.xdr.ScSpecType.scSpecTypeSymbol().value:return n.xdr.ScVal.scvSymbol(e);case n.xdr.ScSpecType.scSpecTypeAddress().value:var r=n.Address.fromString(e);return n.xdr.ScVal.scvAddress(r.toScAddress());case n.xdr.ScSpecType.scSpecTypeU64().value:return new n.XdrLargeInt(\"u64\",e).toScVal();case n.xdr.ScSpecType.scSpecTypeI64().value:return new n.XdrLargeInt(\"i64\",e).toScVal();case n.xdr.ScSpecType.scSpecTypeU128().value:return new n.XdrLargeInt(\"u128\",e).toScVal();case n.xdr.ScSpecType.scSpecTypeI128().value:return new n.XdrLargeInt(\"i128\",e).toScVal();case n.xdr.ScSpecType.scSpecTypeU256().value:return new n.XdrLargeInt(\"u256\",e).toScVal();case n.xdr.ScSpecType.scSpecTypeI256().value:return new n.XdrLargeInt(\"i256\",e).toScVal();case n.xdr.ScSpecType.scSpecTypeBytes().value:case n.xdr.ScSpecType.scSpecTypeBytesN().value:return n.xdr.ScVal.scvBytes(we.from(e,\"base64\"));default:throw new TypeError(\"invalid type \".concat(t.name,\" specified for string value\"))}}(e,o);case\"boolean\":if(i!==n.xdr.ScSpecType.scSpecTypeBool().value)throw TypeError(\"Type \".concat(t,\" was not bool, but value was bool\"));return n.xdr.ScVal.scvBool(e);case\"undefined\":if(!t)return n.xdr.ScVal.scvVoid();switch(i){case n.xdr.ScSpecType.scSpecTypeVoid().value:case n.xdr.ScSpecType.scSpecTypeOption().value:return n.xdr.ScVal.scvVoid();default:throw new TypeError(\"Type \".concat(t,\" was not void, but value was undefined\"))}case\"function\":return this.nativeToScVal(e(),t);default:throw new TypeError(\"failed to convert typeof \".concat(_e(e),\" (\").concat(e,\")\"))}}},{key:\"nativeToUdt\",value:function(e,t){var r=this.findEntry(t);switch(r.switch()){case n.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():if(\"number\"!=typeof e)throw new TypeError(\"expected number for enum \".concat(t,\", but got \").concat(_e(e)));return this.nativeToEnum(e,r.udtEnumV0());case n.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():return this.nativeToStruct(e,r.udtStructV0());case n.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():return this.nativeToUnion(e,r.udtUnionV0());default:throw new Error(\"failed to parse udt \".concat(t))}}},{key:\"nativeToUnion\",value:function(e,t){var r=this,o=e.tag,i=t.cases().find((function(e){return e.value().name().toString()===o}));if(!i)throw new TypeError(\"no such enum entry: \".concat(o,\" in \").concat(t));var a=n.xdr.ScVal.scvSymbol(o);switch(i.switch()){case n.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0():return n.xdr.ScVal.scvVec([a]);case n.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0():var s=i.tupleCase().type();if(Array.isArray(e.values)){if(e.values.length!==s.length)throw new TypeError(\"union \".concat(t,\" expects \").concat(s.length,\" values, but got \").concat(e.values.length));var u=e.values.map((function(e,t){return r.nativeToScVal(e,s[t])}));return u.unshift(a),n.xdr.ScVal.scvVec(u)}throw new Error(\"failed to parse union case \".concat(i,\" with \").concat(e));default:throw new Error(\"failed to parse union \".concat(t,\" with \").concat(e))}}},{key:\"nativeToStruct\",value:function(e,t){var r=this,o=t.fields();if(o.some(Pe)){if(!o.every(Pe))throw new Error(\"mixed numeric and non-numeric field names are not allowed\");return n.xdr.ScVal.scvVec(o.map((function(t,n){return r.nativeToScVal(e[n],o[n].type())})))}return n.xdr.ScVal.scvMap(o.map((function(t){var o=t.name().toString();return new n.xdr.ScMapEntry({key:r.nativeToScVal(o,n.xdr.ScSpecTypeDef.scSpecTypeSymbol()),val:r.nativeToScVal(e[o],t.type())})})))}},{key:\"nativeToEnum\",value:function(e,t){if(t.cases().some((function(t){return t.value()===e})))return n.xdr.ScVal.scvU32(e);throw new TypeError(\"no such enum entry: \".concat(e,\" in \").concat(t))}},{key:\"scValStrToNative\",value:function(e,t){return this.scValToNative(n.xdr.ScVal.fromXDR(e,\"base64\"),t)}},{key:\"scValToNative\",value:function(e,t){var r=this,o=t.switch(),i=o.value;if(i===n.xdr.ScSpecType.scSpecTypeUdt().value)return this.scValUdtToNative(e,t.udt());switch(e.switch().value){case n.xdr.ScValType.scvVoid().value:return;case n.xdr.ScValType.scvU64().value:case n.xdr.ScValType.scvI64().value:case n.xdr.ScValType.scvU128().value:case n.xdr.ScValType.scvI128().value:case n.xdr.ScValType.scvU256().value:case n.xdr.ScValType.scvI256().value:return(0,n.scValToBigInt)(e);case n.xdr.ScValType.scvVec().value:if(i===n.xdr.ScSpecType.scSpecTypeVec().value){var a,s=t.vec();return(null!==(a=e.vec())&&void 0!==a?a:[]).map((function(e){return r.scValToNative(e,s.elementType())}))}if(i===n.xdr.ScSpecType.scSpecTypeTuple().value){var u,c=t.tuple().valueTypes();return(null!==(u=e.vec())&&void 0!==u?u:[]).map((function(e,t){return r.scValToNative(e,c[t])}))}throw new TypeError(\"Type \".concat(t,\" was not vec, but \").concat(e,\" is\"));case n.xdr.ScValType.scvAddress().value:return n.Address.fromScVal(e).toString();case n.xdr.ScValType.scvMap().value:var l,f=null!==(l=e.map())&&void 0!==l?l:[];if(i===n.xdr.ScSpecType.scSpecTypeMap().value){var p=t.map(),d=p.keyType(),h=p.valueType();return f.map((function(e){return[r.scValToNative(e.key(),d),r.scValToNative(e.val(),h)]}))}throw new TypeError(\"ScSpecType \".concat(o.name,\" was not map, but \").concat(JSON.stringify(e,null,2),\" is\"));case n.xdr.ScValType.scvBool().value:case n.xdr.ScValType.scvU32().value:case n.xdr.ScValType.scvI32().value:case n.xdr.ScValType.scvBytes().value:return e.value();case n.xdr.ScValType.scvString().value:case n.xdr.ScValType.scvSymbol().value:var y;if(i!==n.xdr.ScSpecType.scSpecTypeString().value&&i!==n.xdr.ScSpecType.scSpecTypeSymbol().value)throw new Error(\"ScSpecType \".concat(o.name,\" was not string or symbol, but \").concat(JSON.stringify(e,null,2),\" is\"));return null===(y=e.value())||void 0===y?void 0:y.toString();case n.xdr.ScValType.scvTimepoint().value:case n.xdr.ScValType.scvDuration().value:return(0,n.scValToBigInt)(n.xdr.ScVal.scvU64(e.u64()));default:throw new TypeError(\"failed to convert \".concat(JSON.stringify(e,null,2),\" to native type from type \").concat(o.name))}}},{key:\"scValUdtToNative\",value:function(e,t){var r=this.findEntry(t.name().toString());switch(r.switch()){case n.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():return this.enumToNative(e);case n.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():return this.structToNative(e,r.udtStructV0());case n.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():return this.unionToNative(e,r.udtUnionV0());default:throw new Error(\"failed to parse udt \".concat(t.name().toString(),\": \").concat(r))}}},{key:\"unionToNative\",value:function(e,t){var r=this,o=e.vec();if(!o)throw new Error(\"\".concat(JSON.stringify(e,null,2),\" is not a vec\"));if(0===o.length&&0!==t.cases.length)throw new Error(\"\".concat(e,\" has length 0, but the there are at least one case in the union\"));var i=o[0].sym().toString();if(o[0].switch().value!==n.xdr.ScValType.scvSymbol().value)throw new Error(\"{vec[0]} is not a symbol\");var a=t.cases().find(function(e){return function(t){switch(t.switch().value){case n.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value:return t.tupleCase().name().toString()===e;case n.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value:return t.voidCase().name().toString()===e;default:return!1}}}(i));if(!a)throw new Error(\"failed to find entry \".concat(i,\" in union {udt.name().toString()}\"));var s={tag:i};if(a.switch().value===n.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value){var u=a.tupleCase().type().map((function(e,t){return r.scValToNative(o[t+1],e)}));s.values=u}return s}},{key:\"structToNative\",value:function(e,t){var r,n,o=this,i={},a=t.fields();return a.some(Pe)?null===(n=e.vec())||void 0===n?void 0:n.map((function(e,t){return o.scValToNative(e,a[t].type())})):(null===(r=e.map())||void 0===r||r.forEach((function(e,t){var r=a[t];i[r.name().toString()]=o.scValToNative(e.val(),r.type())})),i)}},{key:\"enumToNative\",value:function(e){if(e.switch().value!==n.xdr.ScValType.scvU32().value)throw new Error(\"Enum must have a u32 value\");return e.u32()}},{key:\"errorCases\",value:function(){return this.entries.filter((function(e){return e.switch().value===n.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value})).flatMap((function(e){return e.value().cases()}))}},{key:\"jsonSchema\",value:function(e){var t={};this.entries.forEach((function(e){switch(e.switch().value){case n.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0().value:var r=e.udtEnumV0();t[r.name().toString()]=function(e){var t=e.doc().toString(),r=e.cases(),n=[];r.forEach((function(e){var t=e.name().toString(),r=e.doc().toString();n.push({description:r,title:t,enum:[e.value()],type:\"number\"})}));var o={oneOf:n};return t.length>0&&(o.description=t),o}(r);break;case n.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0().value:var o=e.udtStructV0();t[o.name().toString()]=function(e){var t=e.fields();if(t.some(Pe)){if(!t.every(Pe))throw new Error(\"mixed numeric and non-numeric field names are not allowed\");return{type:\"array\",items:t.map((function(e,r){return je(t[r].type())})),minItems:t.length,maxItems:t.length}}var r=e.doc().toString(),n=Ce(t),o=n.properties,i=n.required;return o.additionalProperties=!1,{description:r,properties:o,required:i,type:\"object\"}}(o);break;case n.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0().value:var i=e.udtUnionV0();t[i.name().toString()]=function(e){var t=e.doc().toString(),r=e.cases(),o=[];r.forEach((function(e){switch(e.switch().value){case n.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value:var t=e.voidCase().name().toString();o.push({type:\"object\",title:t,properties:{tag:t},additionalProperties:!1,required:[\"tag\"]});break;case n.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value:var r=e.tupleCase(),i=r.name().toString();o.push({type:\"object\",title:i,properties:{tag:i,values:{type:\"array\",items:r.type().map(je)}},required:[\"tag\",\"values\"],additionalProperties:!1})}}));var i={oneOf:o};return t.length>0&&(i.description=t),i}(i);break;case n.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value:var a=e.functionV0(),s=a.name().toString(),u=function(e){var t=Ce(e.inputs()),r=t.properties,o=t.required,i={additionalProperties:!1,properties:r,type:\"object\"};(null==o?void 0:o.length)>0&&(i.required=o);var a={properties:{args:i}},s=e.outputs(),u=s.length>0?je(s[0]):je(n.xdr.ScSpecTypeDef.scSpecTypeVoid()),c=e.doc().toString();return c.length>0&&(a.description=c),a.additionalProperties=!1,u.additionalProperties=!1,{input:a,output:u}}(a),c=u.input;t[s]=c;case n.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value:}}));var r={$schema:\"http://json-schema.org/draft-07/schema#\",definitions:Ee(Ee({},Re),t)};return e&&(r.$ref=\"#/definitions/\".concat(e)),r}}],Le&&ke(Ie.prototype,Le),Be&&ke(Ie,Be),Object.defineProperty(Ie,\"prototype\",{writable:!1}),Ie),Ue=r(8287).Buffer;function Me(e){return Me=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Me(e)}var De=[\"method\"],Fe=[\"wasmHash\",\"salt\",\"format\",\"fee\",\"timeoutInSeconds\",\"simulate\"];function Ve(){Ve=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(e,t,r){e[t]=r.value},i=\"function\"==typeof Symbol?Symbol:{},a=i.iterator||\"@@iterator\",s=i.asyncIterator||\"@@asyncIterator\",u=i.toStringTag||\"@@toStringTag\";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},\"\")}catch(e){c=function(e,t,r){return e[t]=r}}function l(e,t,r,n){var i=t&&t.prototype instanceof v?t:v,a=Object.create(i.prototype),s=new R(n||[]);return o(a,\"_invoke\",{value:O(e,r,s)}),a}function f(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}t.wrap=l;var p=\"suspendedStart\",d=\"suspendedYield\",h=\"executing\",y=\"completed\",m={};function v(){}function g(){}function b(){}var w={};c(w,a,(function(){return this}));var S=Object.getPrototypeOf,E=S&&S(S(j([])));E&&E!==r&&n.call(E,a)&&(w=E);var _=b.prototype=v.prototype=Object.create(w);function k(e){[\"next\",\"throw\",\"return\"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function T(e,t){function r(o,i,a,s){var u=f(e[o],e,i);if(\"throw\"!==u.type){var c=u.arg,l=c.value;return l&&\"object\"==Me(l)&&n.call(l,\"__await\")?t.resolve(l.__await).then((function(e){r(\"next\",e,a,s)}),(function(e){r(\"throw\",e,a,s)})):t.resolve(l).then((function(e){c.value=e,a(c)}),(function(e){return r(\"throw\",e,a,s)}))}s(u.arg)}var i;o(this,\"_invoke\",{value:function(e,n){function o(){return new t((function(t,o){r(e,n,t,o)}))}return i=i?i.then(o,o):o()}})}function O(t,r,n){var o=p;return function(i,a){if(o===h)throw Error(\"Generator is already running\");if(o===y){if(\"throw\"===i)throw a;return{value:e,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var u=x(s,n);if(u){if(u===m)continue;return u}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===p)throw o=y,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=h;var c=f(t,r,n);if(\"normal\"===c.type){if(o=n.done?y:d,c.arg===m)continue;return{value:c.arg,done:n.done}}\"throw\"===c.type&&(o=y,n.method=\"throw\",n.arg=c.arg)}}}function x(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,\"throw\"===n&&t.iterator.return&&(r.method=\"return\",r.arg=e,x(t,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),m;var i=f(o,t.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,m;var a=i.arg;return a?a.done?(r[t.resultName]=a.value,r.next=t.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=e),r.delegate=null,m):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,m)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function R(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(A,this),this.reset(!0)}function j(t){if(t||\"\"===t){var r=t[a];if(r)return r.call(t);if(\"function\"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,i=function r(){for(;++o<t.length;)if(n.call(t,o))return r.value=t[o],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(Me(t)+\" is not iterable\")}return g.prototype=b,o(_,\"constructor\",{value:b,configurable:!0}),o(b,\"constructor\",{value:g,configurable:!0}),g.displayName=c(b,u,\"GeneratorFunction\"),t.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===g||\"GeneratorFunction\"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,c(e,u,\"GeneratorFunction\")),e.prototype=Object.create(_),e},t.awrap=function(e){return{__await:e}},k(T.prototype),c(T.prototype,s,(function(){return this})),t.AsyncIterator=T,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new T(l(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},k(_),c(_,u,\"Generator\"),c(_,a,(function(){return this})),c(_,\"toString\",(function(){return\"[object Generator]\"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=j,R.prototype={constructor:R,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=e,this.tryEntries.forEach(P),!t)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function o(n,o){return s.type=\"throw\",s.arg=t,r.next=n,o&&(r.method=\"next\",r.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if(\"root\"===a.tryLoc)return o(\"end\");if(a.tryLoc<=this.prev){var u=n.call(a,\"catchLoc\"),c=n.call(a,\"finallyLoc\");if(u&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw Error(\"try statement without catch or finally\");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var i=o;break}}i&&(\"break\"===e||\"continue\"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method=\"next\",this.next=i.finallyLoc,m):this.complete(a)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),P(r),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;P(r)}return o}}throw Error(\"illegal catch attempt\")},delegateYield:function(t,r,n){return this.delegate={iterator:j(t),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=e),m}},t}function qe(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Ke(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?qe(Object(r),!0).forEach((function(t){Xe(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):qe(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function He(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if({}.hasOwnProperty.call(e,n)){if(t.includes(n))continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.includes(r)||{}.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function ze(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,Ge(n.key),n)}}function Xe(e,t,r){return(t=Ge(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Ge(e){var t=function(e,t){if(\"object\"!=Me(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=Me(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==Me(t)?t:t+\"\"}function We(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function $e(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){We(i,n,o,a,s,\"next\",e)}function s(e){We(i,n,o,a,s,\"throw\",e)}a(void 0)}))}}var Qe=\"__constructor\";function Ye(e){return Je.apply(this,arguments)}function Je(){return(Je=$e(Ve().mark((function e(t){var r,n,o,i,a;return Ve().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,WebAssembly.compile(t);case 2:if(r=e.sent,0!==(n=WebAssembly.Module.customSections(r,\"contractspecv0\")).length){e.next=6;break}throw new Error(\"Could not obtain contract spec from wasm\");case 6:return o=Ue.from(n[0]),i=k(o),a=new Ne(i),e.abrupt(\"return\",a);case 10:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function Ze(e,t){return et.apply(this,arguments)}function et(){return et=$e(Ve().mark((function e(t,r){var n,i,a,s,u,c,l=arguments;return Ve().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=l.length>2&&void 0!==l[2]?l[2]:\"hex\",r&&r.rpcUrl){e.next=3;break}throw new TypeError(\"options must contain rpcUrl\");case 3:return i=r.rpcUrl,a=r.allowHttp,s={allowHttp:a},u=new o.Server(i,s),e.next=8,u.getContractWasmByHash(t,n);case 8:return c=e.sent,e.abrupt(\"return\",Ye(c));case 10:case\"end\":return e.stop()}}),e)}))),et.apply(this,arguments)}var tt=function(){function e(t,r){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),Xe(this,\"txFromJSON\",(function(e){var t=JSON.parse(e),r=t.method,o=He(t,De);return de.fromJSON(Ke(Ke({},n.options),{},{method:r,parseResultXdr:function(e){return n.spec.funcResToNative(r,e)}}),o)})),Xe(this,\"txFromXDR\",(function(e){return de.fromXDR(n.options,e,n.spec)})),this.spec=t,this.options=r,this.spec.funcs().forEach((function(e){var o=e.name().toString();if(o!==Qe){var i=function(e,n){return de.build(Ke(Ke(Ke({method:o,args:e&&t.funcArgsToScVals(o,e)},r),n),{},{errorTypes:t.errorCases().reduce((function(e,t){return Ke(Ke({},e),{},Xe({},t.value(),{message:t.doc().toString()}))}),{}),parseResultXdr:function(e){return t.funcResToNative(o,e)}}))};n[o]=0===t.getFunc(o).inputs().length?function(e){return i(void 0,e)}:i}}))}return function(e,t,r){return t&&ze(e.prototype,t),r&&ze(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(e,null,[{key:\"deploy\",value:(a=$e(Ve().mark((function t(r,o){var i,a,s,u,c,l,f,p,d;return Ve().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return i=o.wasmHash,a=o.salt,s=o.format,u=o.fee,c=o.timeoutInSeconds,l=o.simulate,f=He(o,Fe),t.next=3,Ze(i,f,s);case 3:return p=t.sent,d=n.Operation.createCustomContract({address:new n.Address(o.publicKey),wasmHash:\"string\"==typeof i?Ue.from(i,null!=s?s:\"hex\"):i,salt:a,constructorArgs:r?p.funcArgsToScVals(Qe,r):[]}),t.abrupt(\"return\",de.buildWithOp(d,Ke(Ke({fee:u,timeoutInSeconds:c,simulate:l},f),{},{contractId:\"ignored\",method:Qe,parseResultXdr:function(t){return new e(p,Ke(Ke({},f),{},{contractId:n.Address.fromScVal(t).toString()}))}})));case 6:case\"end\":return t.stop()}}),t)}))),function(e,t){return a.apply(this,arguments)})},{key:\"fromWasmHash\",value:(i=$e(Ve().mark((function t(r,n){var i,a,s,u,c,l,f=arguments;return Ve().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(i=f.length>2&&void 0!==f[2]?f[2]:\"hex\",n&&n.rpcUrl){t.next=3;break}throw new TypeError(\"options must contain rpcUrl\");case 3:return a=n.rpcUrl,s=n.allowHttp,u={allowHttp:s},c=new o.Server(a,u),t.next=8,c.getContractWasmByHash(r,i);case 8:return l=t.sent,t.abrupt(\"return\",e.fromWasm(l,n));case 10:case\"end\":return t.stop()}}),t)}))),function(e,t){return i.apply(this,arguments)})},{key:\"fromWasm\",value:(r=$e(Ve().mark((function t(r,n){var o;return Ve().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Ye(r);case 2:return o=t.sent,t.abrupt(\"return\",new e(o,n));case 4:case\"end\":return t.stop()}}),t)}))),function(e,t){return r.apply(this,arguments)})},{key:\"from\",value:(t=$e(Ve().mark((function t(r){var n,i,a,s,u,c;return Ve().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r&&r.rpcUrl&&r.contractId){t.next=2;break}throw new TypeError(\"options must contain rpcUrl and contractId\");case 2:return n=r.rpcUrl,i=r.contractId,a=r.allowHttp,s={allowHttp:a},u=new o.Server(n,s),t.next=7,u.getContractWasmByContractId(i);case 7:return c=t.sent,t.abrupt(\"return\",e.fromWasm(c,r));case 9:case\"end\":return t.stop()}}),t)}))),function(e){return t.apply(this,arguments)})}]);var t,r,i,a}()},5976:(e,t,r)=>{\"use strict\";function n(e){return n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,i(n.key),n)}}function i(e){var t=function(e,t){if(\"object\"!=n(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,t||\"default\");if(\"object\"!=n(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==n(t)?t:t+\"\"}function a(e,t,r){return t=l(t),function(e,t){if(t&&(\"object\"==n(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,u()?Reflect.construct(t,r||[],l(e).constructor):t.apply(e,r))}function s(e){var t=\"function\"==typeof Map?new Map:void 0;return s=function(e){if(null===e||!function(e){try{return-1!==Function.toString.call(e).indexOf(\"[native code]\")}catch(t){return\"function\"==typeof e}}(e))return e;if(\"function\"!=typeof e)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return function(e,t,r){if(u())return Reflect.construct.apply(null,arguments);var n=[null];n.push.apply(n,t);var o=new(e.bind.apply(e,n));return r&&c(o,r.prototype),o}(e,arguments,l(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),c(r,e)},s(e)}function u(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(u=function(){return!!e})()}function c(e,t){return c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},c(e,t)}function l(e){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},l(e)}r.d(t,{Cu:()=>H,v7:()=>x,nS:()=>B,Dr:()=>f,m_:()=>b});var f=function(e){function t(e,r){var n;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var o=(this instanceof t?this.constructor:void 0).prototype;return(n=a(this,t,[e])).__proto__=o,n.constructor=t,n.response=r,n}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&c(e,t)}(t,e),r=t,(n=[{key:\"getResponse\",value:function(){return this.response}}])&&o(r.prototype,n),i&&o(r,i),Object.defineProperty(r,\"prototype\",{writable:!1}),r;var r,n,i}(s(Error));function p(e){return p=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},p(e)}function d(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,h(n.key),n)}}function h(e){var t=function(e,t){if(\"object\"!=p(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=p(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==p(t)?t:t+\"\"}function y(e,t,r){return t=v(t),function(e,t){if(t&&(\"object\"==p(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,m()?Reflect.construct(t,r||[],v(e).constructor):t.apply(e,r))}function m(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(m=function(){return!!e})()}function v(e){return v=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},v(e)}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}var b=function(e){function t(e,r){var n;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var o=(this instanceof t?this.constructor:void 0).prototype;return(n=y(this,t,[e,r])).__proto__=o,n.constructor=t,n.name=\"NotFoundError\",n}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&g(e,t)}(t,e),r=t,n&&d(r.prototype,n),o&&d(r,o),Object.defineProperty(r,\"prototype\",{writable:!1}),r;var r,n,o}(f);function w(e){return w=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},w(e)}function S(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,E(n.key),n)}}function E(e){var t=function(e,t){if(\"object\"!=w(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=w(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==w(t)?t:t+\"\"}function _(e,t,r){return t=T(t),function(e,t){if(t&&(\"object\"==w(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,k()?Reflect.construct(t,r||[],T(e).constructor):t.apply(e,r))}function k(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(k=function(){return!!e})()}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}function O(e,t){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},O(e,t)}var x=function(e){function t(e,r){var n;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var o=(this instanceof t?this.constructor:void 0).prototype;return(n=_(this,t,[e,r])).__proto__=o,n.constructor=t,n.name=\"BadRequestError\",n}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&O(e,t)}(t,e),r=t,n&&S(r.prototype,n),o&&S(r,o),Object.defineProperty(r,\"prototype\",{writable:!1}),r;var r,n,o}(f);function A(e){return A=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},A(e)}function P(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,R(n.key),n)}}function R(e){var t=function(e,t){if(\"object\"!=A(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=A(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==A(t)?t:t+\"\"}function j(e,t,r){return t=I(t),function(e,t){if(t&&(\"object\"==A(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,C()?Reflect.construct(t,r||[],I(e).constructor):t.apply(e,r))}function C(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(C=function(){return!!e})()}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}function L(e,t){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},L(e,t)}var B=function(e){function t(e,r){var n;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var o=(this instanceof t?this.constructor:void 0).prototype;return(n=j(this,t,[e,r])).__proto__=o,n.constructor=t,n.name=\"BadResponseError\",n}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&L(e,t)}(t,e),r=t,n&&P(r.prototype,n),o&&P(r,o),Object.defineProperty(r,\"prototype\",{writable:!1}),r;var r,n,o}(f);function N(e){return N=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},N(e)}function U(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,M(n.key),n)}}function M(e){var t=function(e,t){if(\"object\"!=N(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=N(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==N(t)?t:t+\"\"}function D(e,t,r){return t=K(t),function(e,t){if(t&&(\"object\"==N(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,V()?Reflect.construct(t,r||[],K(e).constructor):t.apply(e,r))}function F(e){var t=\"function\"==typeof Map?new Map:void 0;return F=function(e){if(null===e||!function(e){try{return-1!==Function.toString.call(e).indexOf(\"[native code]\")}catch(t){return\"function\"==typeof e}}(e))return e;if(\"function\"!=typeof e)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return function(e,t,r){if(V())return Reflect.construct.apply(null,arguments);var n=[null];n.push.apply(n,t);var o=new(e.bind.apply(e,n));return r&&q(o,r.prototype),o}(e,arguments,K(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),q(r,e)},F(e)}function V(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(V=function(){return!!e})()}function q(e,t){return q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},q(e,t)}function K(e){return K=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},K(e)}var H=function(e){function t(e,r,n){var o;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var i=(this instanceof t?this.constructor:void 0).prototype;return(o=D(this,t,[e])).__proto__=i,o.constructor=t,o.name=\"AccountRequiresMemoError\",o.accountId=r,o.operationIndex=n,o}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&q(e,t)}(t,e),r=t,n&&U(r.prototype,n),o&&U(r,o),Object.defineProperty(r,\"prototype\",{writable:!1}),r;var r,n,o}(F(Error))},7600:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{Api:()=>{},FEDERATION_RESPONSE_MAX_SIZE:()=>g,Server:()=>b});var n=r(356),o=r(4193),i=r.n(o),a=r(8732),s=r(5976),u=r(3898),c=r(9983);function l(e){return l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},l(e)}function f(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var n,o,i,a,s=[],u=!0,c=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(s.push(n.value),s.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return p(e,t);var r={}.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?p(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function p(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function d(){d=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(e,t,r){e[t]=r.value},i=\"function\"==typeof Symbol?Symbol:{},a=i.iterator||\"@@iterator\",s=i.asyncIterator||\"@@asyncIterator\",u=i.toStringTag||\"@@toStringTag\";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},\"\")}catch(e){c=function(e,t,r){return e[t]=r}}function f(e,t,r,n){var i=t&&t.prototype instanceof b?t:b,a=Object.create(i.prototype),s=new C(n||[]);return o(a,\"_invoke\",{value:A(e,r,s)}),a}function p(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}t.wrap=f;var h=\"suspendedStart\",y=\"suspendedYield\",m=\"executing\",v=\"completed\",g={};function b(){}function w(){}function S(){}var E={};c(E,a,(function(){return this}));var _=Object.getPrototypeOf,k=_&&_(_(I([])));k&&k!==r&&n.call(k,a)&&(E=k);var T=S.prototype=b.prototype=Object.create(E);function O(e){[\"next\",\"throw\",\"return\"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){function r(o,i,a,s){var u=p(e[o],e,i);if(\"throw\"!==u.type){var c=u.arg,f=c.value;return f&&\"object\"==l(f)&&n.call(f,\"__await\")?t.resolve(f.__await).then((function(e){r(\"next\",e,a,s)}),(function(e){r(\"throw\",e,a,s)})):t.resolve(f).then((function(e){c.value=e,a(c)}),(function(e){return r(\"throw\",e,a,s)}))}s(u.arg)}var i;o(this,\"_invoke\",{value:function(e,n){function o(){return new t((function(t,o){r(e,n,t,o)}))}return i=i?i.then(o,o):o()}})}function A(t,r,n){var o=h;return function(i,a){if(o===m)throw Error(\"Generator is already running\");if(o===v){if(\"throw\"===i)throw a;return{value:e,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var u=P(s,n);if(u){if(u===g)continue;return u}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===h)throw o=v,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=m;var c=p(t,r,n);if(\"normal\"===c.type){if(o=n.done?v:y,c.arg===g)continue;return{value:c.arg,done:n.done}}\"throw\"===c.type&&(o=v,n.method=\"throw\",n.arg=c.arg)}}}function P(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,\"throw\"===n&&t.iterator.return&&(r.method=\"return\",r.arg=e,P(t,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),g;var i=p(o,t.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,g;var a=i.arg;return a?a.done?(r[t.resultName]=a.value,r.next=t.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=e),r.delegate=null,g):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,g)}function R(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function j(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(R,this),this.reset(!0)}function I(t){if(t||\"\"===t){var r=t[a];if(r)return r.call(t);if(\"function\"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,i=function r(){for(;++o<t.length;)if(n.call(t,o))return r.value=t[o],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(l(t)+\" is not iterable\")}return w.prototype=S,o(T,\"constructor\",{value:S,configurable:!0}),o(S,\"constructor\",{value:w,configurable:!0}),w.displayName=c(S,u,\"GeneratorFunction\"),t.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===w||\"GeneratorFunction\"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,S):(e.__proto__=S,c(e,u,\"GeneratorFunction\")),e.prototype=Object.create(T),e},t.awrap=function(e){return{__await:e}},O(x.prototype),c(x.prototype,s,(function(){return this})),t.AsyncIterator=x,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new x(f(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},O(T),c(T,u,\"Generator\"),c(T,a,(function(){return this})),c(T,\"toString\",(function(){return\"[object Generator]\"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=I,C.prototype={constructor:C,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=e,this.tryEntries.forEach(j),!t)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function o(n,o){return s.type=\"throw\",s.arg=t,r.next=n,o&&(r.method=\"next\",r.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if(\"root\"===a.tryLoc)return o(\"end\");if(a.tryLoc<=this.prev){var u=n.call(a,\"catchLoc\"),c=n.call(a,\"finallyLoc\");if(u&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw Error(\"try statement without catch or finally\");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var i=o;break}}i&&(\"break\"===e||\"continue\"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method=\"next\",this.next=i.finallyLoc,g):this.complete(a)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),j(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;j(r)}return o}}throw Error(\"illegal catch attempt\")},delegateYield:function(t,r,n){return this.delegate={iterator:I(t),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=e),g}},t}function h(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function y(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){h(i,n,o,a,s,\"next\",e)}function s(e){h(i,n,o,a,s,\"throw\",e)}a(void 0)}))}}function m(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,v(n.key),n)}}function v(e){var t=function(e,t){if(\"object\"!=l(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=l(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==l(t)?t:t+\"\"}var g=102400,b=function(){function e(t,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.serverURL=i()(t),this.domain=r;var o=void 0===n.allowHttp?a.T.isAllowHttp():n.allowHttp;if(this.timeout=void 0===n.timeout?a.T.getTimeout():n.timeout,\"https\"!==this.serverURL.protocol()&&!o)throw new Error(\"Cannot connect to insecure federation server\")}return t=e,r=[{key:\"resolveAddress\",value:(w=y(d().mark((function e(t){var r,n;return d().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=t,!(t.indexOf(\"*\")<0)){e.next=5;break}if(this.domain){e.next=4;break}return e.abrupt(\"return\",Promise.reject(new Error(\"Unknown domain. Make sure `address` contains a domain (ex. `bob*stellar.org`) or pass `domain` parameter when instantiating the server object.\")));case 4:r=\"\".concat(t,\"*\").concat(this.domain);case 5:return n=this.serverURL.query({type:\"name\",q:r}),e.abrupt(\"return\",this._sendRequest(n));case 7:case\"end\":return e.stop()}}),e,this)}))),function(e){return w.apply(this,arguments)})},{key:\"resolveAccountId\",value:(b=y(d().mark((function e(t){var r;return d().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=this.serverURL.query({type:\"id\",q:t}),e.abrupt(\"return\",this._sendRequest(r));case 2:case\"end\":return e.stop()}}),e,this)}))),function(e){return b.apply(this,arguments)})},{key:\"resolveTransactionId\",value:(v=y(d().mark((function e(t){var r;return d().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=this.serverURL.query({type:\"txid\",q:t}),e.abrupt(\"return\",this._sendRequest(r));case 2:case\"end\":return e.stop()}}),e,this)}))),function(e){return v.apply(this,arguments)})},{key:\"_sendRequest\",value:(h=y(d().mark((function e(t){var r;return d().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=this.timeout,e.abrupt(\"return\",c.ok.get(t.toString(),{maxContentLength:g,timeout:r}).then((function(e){if(void 0!==e.data.memo&&\"string\"!=typeof e.data.memo)throw new Error(\"memo value should be of type string\");return e.data})).catch((function(e){if(e instanceof Error){if(e.message.match(/^maxContentLength size/))throw new Error(\"federation response exceeds allowed size of \".concat(g));return Promise.reject(e)}return Promise.reject(new s.nS(\"Server query failed. Server responded: \".concat(e.status,\" \").concat(e.statusText),e.data))})));case 2:case\"end\":return e.stop()}}),e,this)}))),function(e){return h.apply(this,arguments)})}],o=[{key:\"resolve\",value:(p=y(d().mark((function t(r){var o,i,a,s,u,c=arguments;return d().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(o=c.length>1&&void 0!==c[1]?c[1]:{},!(r.indexOf(\"*\")<0)){t.next=5;break}if(n.StrKey.isValidEd25519PublicKey(r)){t.next=4;break}return t.abrupt(\"return\",Promise.reject(new Error(\"Invalid Account ID\")));case 4:return t.abrupt(\"return\",Promise.resolve({account_id:r}));case 5:if(i=r.split(\"*\"),a=f(i,2),s=a[1],2===i.length&&s){t.next=9;break}return t.abrupt(\"return\",Promise.reject(new Error(\"Invalid Stellar address\")));case 9:return t.next=11,e.createForDomain(s,o);case 11:return u=t.sent,t.abrupt(\"return\",u.resolveAddress(r));case 13:case\"end\":return t.stop()}}),t)}))),function(e){return p.apply(this,arguments)})},{key:\"createForDomain\",value:(l=y(d().mark((function t(r){var n,o,i=arguments;return d().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=i.length>1&&void 0!==i[1]?i[1]:{},t.next=3,u.Resolver.resolve(r,n);case 3:if((o=t.sent).FEDERATION_SERVER){t.next=6;break}return t.abrupt(\"return\",Promise.reject(new Error(\"stellar.toml does not contain FEDERATION_SERVER field\")));case 6:return t.abrupt(\"return\",new e(o.FEDERATION_SERVER,r,n));case 7:case\"end\":return t.stop()}}),t)}))),function(e){return l.apply(this,arguments)})}],r&&m(t.prototype,r),o&&m(t,o),Object.defineProperty(t,\"prototype\",{writable:!1}),t;var t,r,o,l,p,h,v,b,w}()},8242:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{Api:()=>{}})},8733:(e,t,r)=>{\"use strict\";var n;r.r(t),r.d(t,{AccountResponse:()=>m,AxiosClient:()=>W,HorizonApi:()=>n,SERVER_TIME_MAP:()=>z,Server:()=>Yr,ServerApi:()=>i,default:()=>Jr,getCurrentServerTime:()=>$}),function(e){var t=function(e){return e.constantProduct=\"constant_product\",e}({});e.LiquidityPoolType=t;var r=function(e){return e.createAccount=\"create_account\",e.payment=\"payment\",e.pathPayment=\"path_payment_strict_receive\",e.createPassiveOffer=\"create_passive_sell_offer\",e.manageOffer=\"manage_sell_offer\",e.setOptions=\"set_options\",e.changeTrust=\"change_trust\",e.allowTrust=\"allow_trust\",e.accountMerge=\"account_merge\",e.inflation=\"inflation\",e.manageData=\"manage_data\",e.bumpSequence=\"bump_sequence\",e.manageBuyOffer=\"manage_buy_offer\",e.pathPaymentStrictSend=\"path_payment_strict_send\",e.createClaimableBalance=\"create_claimable_balance\",e.claimClaimableBalance=\"claim_claimable_balance\",e.beginSponsoringFutureReserves=\"begin_sponsoring_future_reserves\",e.endSponsoringFutureReserves=\"end_sponsoring_future_reserves\",e.revokeSponsorship=\"revoke_sponsorship\",e.clawback=\"clawback\",e.clawbackClaimableBalance=\"clawback_claimable_balance\",e.setTrustLineFlags=\"set_trust_line_flags\",e.liquidityPoolDeposit=\"liquidity_pool_deposit\",e.liquidityPoolWithdraw=\"liquidity_pool_withdraw\",e.invokeHostFunction=\"invoke_host_function\",e.bumpFootprintExpiration=\"bump_footprint_expiration\",e.restoreFootprint=\"restore_footprint\",e}({});e.OperationResponseType=r;var n=function(e){return e[e.createAccount=0]=\"createAccount\",e[e.payment=1]=\"payment\",e[e.pathPayment=2]=\"pathPayment\",e[e.createPassiveOffer=3]=\"createPassiveOffer\",e[e.manageOffer=4]=\"manageOffer\",e[e.setOptions=5]=\"setOptions\",e[e.changeTrust=6]=\"changeTrust\",e[e.allowTrust=7]=\"allowTrust\",e[e.accountMerge=8]=\"accountMerge\",e[e.inflation=9]=\"inflation\",e[e.manageData=10]=\"manageData\",e[e.bumpSequence=11]=\"bumpSequence\",e[e.manageBuyOffer=12]=\"manageBuyOffer\",e[e.pathPaymentStrictSend=13]=\"pathPaymentStrictSend\",e[e.createClaimableBalance=14]=\"createClaimableBalance\",e[e.claimClaimableBalance=15]=\"claimClaimableBalance\",e[e.beginSponsoringFutureReserves=16]=\"beginSponsoringFutureReserves\",e[e.endSponsoringFutureReserves=17]=\"endSponsoringFutureReserves\",e[e.revokeSponsorship=18]=\"revokeSponsorship\",e[e.clawback=19]=\"clawback\",e[e.clawbackClaimableBalance=20]=\"clawbackClaimableBalance\",e[e.setTrustLineFlags=21]=\"setTrustLineFlags\",e[e.liquidityPoolDeposit=22]=\"liquidityPoolDeposit\",e[e.liquidityPoolWithdraw=23]=\"liquidityPoolWithdraw\",e[e.invokeHostFunction=24]=\"invokeHostFunction\",e[e.bumpFootprintExpiration=25]=\"bumpFootprintExpiration\",e[e.restoreFootprint=26]=\"restoreFootprint\",e}({});e.OperationResponseTypeI=n;var o=function(e){return e.TX_FAILED=\"tx_failed\",e.TX_BAD_SEQ=\"tx_bad_seq\",e.TX_BAD_AUTH=\"tx_bad_auth\",e.TX_BAD_AUTH_EXTRA=\"tx_bad_auth_extra\",e.TX_FEE_BUMP_INNER_SUCCESS=\"tx_fee_bump_inner_success\",e.TX_FEE_BUMP_INNER_FAILED=\"tx_fee_bump_inner_failed\",e.TX_NOT_SUPPORTED=\"tx_not_supported\",e.TX_SUCCESS=\"tx_success\",e.TX_TOO_EARLY=\"tx_too_early\",e.TX_TOO_LATE=\"tx_too_late\",e.TX_MISSING_OPERATION=\"tx_missing_operation\",e.TX_INSUFFICIENT_BALANCE=\"tx_insufficient_balance\",e.TX_NO_SOURCE_ACCOUNT=\"tx_no_source_account\",e.TX_INSUFFICIENT_FEE=\"tx_insufficient_fee\",e.TX_INTERNAL_ERROR=\"tx_internal_error\",e}({});e.TransactionFailedResultCodes=o}(n||(n={}));var o,i,a=((o={})[o.account_created=0]=\"account_created\",o[o.account_removed=1]=\"account_removed\",o[o.account_credited=2]=\"account_credited\",o[o.account_debited=3]=\"account_debited\",o[o.account_thresholds_updated=4]=\"account_thresholds_updated\",o[o.account_home_domain_updated=5]=\"account_home_domain_updated\",o[o.account_flags_updated=6]=\"account_flags_updated\",o[o.account_inflation_destination_updated=7]=\"account_inflation_destination_updated\",o[o.signer_created=10]=\"signer_created\",o[o.signer_removed=11]=\"signer_removed\",o[o.signer_updated=12]=\"signer_updated\",o[o.trustline_created=20]=\"trustline_created\",o[o.trustline_removed=21]=\"trustline_removed\",o[o.trustline_updated=22]=\"trustline_updated\",o[o.trustline_authorized=23]=\"trustline_authorized\",o[o.trustline_deauthorized=24]=\"trustline_deauthorized\",o[o.trustline_authorized_to_maintain_liabilities=25]=\"trustline_authorized_to_maintain_liabilities\",o[o.trustline_flags_updated=26]=\"trustline_flags_updated\",o[o.offer_created=30]=\"offer_created\",o[o.offer_removed=31]=\"offer_removed\",o[o.offer_updated=32]=\"offer_updated\",o[o.trade=33]=\"trade\",o[o.data_created=40]=\"data_created\",o[o.data_removed=41]=\"data_removed\",o[o.data_updated=42]=\"data_updated\",o[o.sequence_bumped=43]=\"sequence_bumped\",o[o.claimable_balance_created=50]=\"claimable_balance_created\",o[o.claimable_balance_claimant_created=51]=\"claimable_balance_claimant_created\",o[o.claimable_balance_claimed=52]=\"claimable_balance_claimed\",o[o.account_sponsorship_created=60]=\"account_sponsorship_created\",o[o.account_sponsorship_updated=61]=\"account_sponsorship_updated\",o[o.account_sponsorship_removed=62]=\"account_sponsorship_removed\",o[o.trustline_sponsorship_created=63]=\"trustline_sponsorship_created\",o[o.trustline_sponsorship_updated=64]=\"trustline_sponsorship_updated\",o[o.trustline_sponsorship_removed=65]=\"trustline_sponsorship_removed\",o[o.data_sponsorship_created=66]=\"data_sponsorship_created\",o[o.data_sponsorship_updated=67]=\"data_sponsorship_updated\",o[o.data_sponsorship_removed=68]=\"data_sponsorship_removed\",o[o.claimable_balance_sponsorship_created=69]=\"claimable_balance_sponsorship_created\",o[o.claimable_balance_sponsorship_updated=70]=\"claimable_balance_sponsorship_updated\",o[o.claimable_balance_sponsorship_removed=71]=\"claimable_balance_sponsorship_removed\",o[o.signer_sponsorship_created=72]=\"signer_sponsorship_created\",o[o.signer_sponsorship_updated=73]=\"signer_sponsorship_updated\",o[o.signer_sponsorship_removed=74]=\"signer_sponsorship_removed\",o[o.claimable_balance_clawed_back=80]=\"claimable_balance_clawed_back\",o[o.liquidity_pool_deposited=90]=\"liquidity_pool_deposited\",o[o.liquidity_pool_withdrew=91]=\"liquidity_pool_withdrew\",o[o.liquidity_pool_trade=92]=\"liquidity_pool_trade\",o[o.liquidity_pool_created=93]=\"liquidity_pool_created\",o[o.liquidity_pool_removed=94]=\"liquidity_pool_removed\",o[o.liquidity_pool_revoked=95]=\"liquidity_pool_revoked\",o[o.contract_credited=96]=\"contract_credited\",o[o.contract_debited=97]=\"contract_debited\",o);!function(e){e.EffectType=a;var t=function(e){return e.all=\"all\",e.liquidityPools=\"liquidity_pool\",e.orderbook=\"orderbook\",e}({});e.TradeType=t;n.OperationResponseType,n.OperationResponseTypeI}(i||(i={}));var s=r(356);function u(e){return u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},u(e)}function c(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var n,o,i,a,s=[],u=!0,c=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(s.push(n.value),s.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return l(e,t);var r={}.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?l(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function l(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,p(n.key),n)}}function p(e){var t=function(e,t){if(\"object\"!=u(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=u(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==u(t)?t:t+\"\"}var d,h,y,m=(d=function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._baseAccount=new s.Account(t.account_id,t.sequence),Object.entries(t).forEach((function(e){var t=c(e,2),n=t[0],o=t[1];r[n]=o}))},(h=[{key:\"accountId\",value:function(){return this._baseAccount.accountId()}},{key:\"sequenceNumber\",value:function(){return this._baseAccount.sequenceNumber()}},{key:\"incrementSequenceNumber\",value:function(){this._baseAccount.incrementSequenceNumber(),this.sequence=this._baseAccount.sequenceNumber()}}])&&f(d.prototype,h),y&&f(d,y),Object.defineProperty(d,\"prototype\",{writable:!1}),d),v=/^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,g=Math.ceil,b=Math.floor,w=\"[BigNumber Error] \",S=w+\"Number primitive has more than 15 significant digits: \",E=1e14,_=14,k=9007199254740991,T=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],O=1e7,x=1e9;function A(e){var t=0|e;return e>0||e===t?t:t-1}function P(e){for(var t,r,n=1,o=e.length,i=e[0]+\"\";n<o;){for(t=e[n++]+\"\",r=_-t.length;r--;t=\"0\"+t);i+=t}for(o=i.length;48===i.charCodeAt(--o););return i.slice(0,o+1||1)}function R(e,t){var r,n,o=e.c,i=t.c,a=e.s,s=t.s,u=e.e,c=t.e;if(!a||!s)return null;if(r=o&&!o[0],n=i&&!i[0],r||n)return r?n?0:-s:a;if(a!=s)return a;if(r=a<0,n=u==c,!o||!i)return n?0:!o^r?1:-1;if(!n)return u>c^r?1:-1;for(s=(u=o.length)<(c=i.length)?u:c,a=0;a<s;a++)if(o[a]!=i[a])return o[a]>i[a]^r?1:-1;return u==c?0:u>c^r?1:-1}function j(e,t,r,n){if(e<t||e>r||e!==b(e))throw Error(w+(n||\"Argument\")+(\"number\"==typeof e?e<t||e>r?\" out of range: \":\" not an integer: \":\" not a primitive number: \")+String(e))}function C(e){var t=e.c.length-1;return A(e.e/_)==t&&e.c[t]%2!=0}function I(e,t){return(e.length>1?e.charAt(0)+\".\"+e.slice(1):e)+(t<0?\"e\":\"e+\")+t}function L(e,t,r){var n,o;if(t<0){for(o=r+\".\";++t;o+=r);e=o+e}else if(++t>(n=e.length)){for(o=r,t-=n;--t;o+=r);e+=o}else t<n&&(e=e.slice(0,t)+\".\"+e.slice(t));return e}var B=function e(t){var r,n,o,i,a,s,u,c,l,f,p=H.prototype={constructor:H,toString:null,valueOf:null},d=new H(1),h=20,y=4,m=-7,B=21,N=-1e7,U=1e7,M=!1,D=1,F=0,V={prefix:\"\",groupSize:3,secondaryGroupSize:0,groupSeparator:\",\",decimalSeparator:\".\",fractionGroupSize:0,fractionGroupSeparator:\"\\xa0\",suffix:\"\"},q=\"0123456789abcdefghijklmnopqrstuvwxyz\",K=!0;function H(e,t){var r,i,a,s,u,c,l,f,p=this;if(!(p instanceof H))return new H(e,t);if(null==t){if(e&&!0===e._isBigNumber)return p.s=e.s,void(!e.c||e.e>U?p.c=p.e=null:e.e<N?p.c=[p.e=0]:(p.e=e.e,p.c=e.c.slice()));if((c=\"number\"==typeof e)&&0*e==0){if(p.s=1/e<0?(e=-e,-1):1,e===~~e){for(s=0,u=e;u>=10;u/=10,s++);return void(s>U?p.c=p.e=null:(p.e=s,p.c=[e]))}f=String(e)}else{if(!v.test(f=String(e)))return o(p,f,c);p.s=45==f.charCodeAt(0)?(f=f.slice(1),-1):1}(s=f.indexOf(\".\"))>-1&&(f=f.replace(\".\",\"\")),(u=f.search(/e/i))>0?(s<0&&(s=u),s+=+f.slice(u+1),f=f.substring(0,u)):s<0&&(s=f.length)}else{if(j(t,2,q.length,\"Base\"),10==t&&K)return W(p=new H(e),h+p.e+1,y);if(f=String(e),c=\"number\"==typeof e){if(0*e!=0)return o(p,f,c,t);if(p.s=1/e<0?(f=f.slice(1),-1):1,H.DEBUG&&f.replace(/^0\\.0*|\\./,\"\").length>15)throw Error(S+e)}else p.s=45===f.charCodeAt(0)?(f=f.slice(1),-1):1;for(r=q.slice(0,t),s=u=0,l=f.length;u<l;u++)if(r.indexOf(i=f.charAt(u))<0){if(\".\"==i){if(u>s){s=l;continue}}else if(!a&&(f==f.toUpperCase()&&(f=f.toLowerCase())||f==f.toLowerCase()&&(f=f.toUpperCase()))){a=!0,u=-1,s=0;continue}return o(p,String(e),c,t)}c=!1,(s=(f=n(f,t,10,p.s)).indexOf(\".\"))>-1?f=f.replace(\".\",\"\"):s=f.length}for(u=0;48===f.charCodeAt(u);u++);for(l=f.length;48===f.charCodeAt(--l););if(f=f.slice(u,++l)){if(l-=u,c&&H.DEBUG&&l>15&&(e>k||e!==b(e)))throw Error(S+p.s*e);if((s=s-u-1)>U)p.c=p.e=null;else if(s<N)p.c=[p.e=0];else{if(p.e=s,p.c=[],u=(s+1)%_,s<0&&(u+=_),u<l){for(u&&p.c.push(+f.slice(0,u)),l-=_;u<l;)p.c.push(+f.slice(u,u+=_));u=_-(f=f.slice(u)).length}else u-=l;for(;u--;f+=\"0\");p.c.push(+f)}}else p.c=[p.e=0]}function z(e,t,r,n){var o,i,a,s,u;if(null==r?r=y:j(r,0,8),!e.c)return e.toString();if(o=e.c[0],a=e.e,null==t)u=P(e.c),u=1==n||2==n&&(a<=m||a>=B)?I(u,a):L(u,a,\"0\");else if(i=(e=W(new H(e),t,r)).e,s=(u=P(e.c)).length,1==n||2==n&&(t<=i||i<=m)){for(;s<t;u+=\"0\",s++);u=I(u,i)}else if(t-=a,u=L(u,i,\"0\"),i+1>s){if(--t>0)for(u+=\".\";t--;u+=\"0\");}else if((t+=i-s)>0)for(i+1==s&&(u+=\".\");t--;u+=\"0\");return e.s<0&&o?\"-\"+u:u}function X(e,t){for(var r,n,o=1,i=new H(e[0]);o<e.length;o++)(!(n=new H(e[o])).s||(r=R(i,n))===t||0===r&&i.s===t)&&(i=n);return i}function G(e,t,r){for(var n=1,o=t.length;!t[--o];t.pop());for(o=t[0];o>=10;o/=10,n++);return(r=n+r*_-1)>U?e.c=e.e=null:r<N?e.c=[e.e=0]:(e.e=r,e.c=t),e}function W(e,t,r,n){var o,i,a,s,u,c,l,f=e.c,p=T;if(f){e:{for(o=1,s=f[0];s>=10;s/=10,o++);if((i=t-o)<0)i+=_,a=t,u=f[c=0],l=b(u/p[o-a-1]%10);else if((c=g((i+1)/_))>=f.length){if(!n)break e;for(;f.length<=c;f.push(0));u=l=0,o=1,a=(i%=_)-_+1}else{for(u=s=f[c],o=1;s>=10;s/=10,o++);l=(a=(i%=_)-_+o)<0?0:b(u/p[o-a-1]%10)}if(n=n||t<0||null!=f[c+1]||(a<0?u:u%p[o-a-1]),n=r<4?(l||n)&&(0==r||r==(e.s<0?3:2)):l>5||5==l&&(4==r||n||6==r&&(i>0?a>0?u/p[o-a]:0:f[c-1])%10&1||r==(e.s<0?8:7)),t<1||!f[0])return f.length=0,n?(t-=e.e+1,f[0]=p[(_-t%_)%_],e.e=-t||0):f[0]=e.e=0,e;if(0==i?(f.length=c,s=1,c--):(f.length=c+1,s=p[_-i],f[c]=a>0?b(u/p[o-a]%p[a])*s:0),n)for(;;){if(0==c){for(i=1,a=f[0];a>=10;a/=10,i++);for(a=f[0]+=s,s=1;a>=10;a/=10,s++);i!=s&&(e.e++,f[0]==E&&(f[0]=1));break}if(f[c]+=s,f[c]!=E)break;f[c--]=0,s=1}for(i=f.length;0===f[--i];f.pop());}e.e>U?e.c=e.e=null:e.e<N&&(e.c=[e.e=0])}return e}function $(e){var t,r=e.e;return null===r?e.toString():(t=P(e.c),t=r<=m||r>=B?I(t,r):L(t,r,\"0\"),e.s<0?\"-\"+t:t)}return H.clone=e,H.ROUND_UP=0,H.ROUND_DOWN=1,H.ROUND_CEIL=2,H.ROUND_FLOOR=3,H.ROUND_HALF_UP=4,H.ROUND_HALF_DOWN=5,H.ROUND_HALF_EVEN=6,H.ROUND_HALF_CEIL=7,H.ROUND_HALF_FLOOR=8,H.EUCLID=9,H.config=H.set=function(e){var t,r;if(null!=e){if(\"object\"!=typeof e)throw Error(w+\"Object expected: \"+e);if(e.hasOwnProperty(t=\"DECIMAL_PLACES\")&&(j(r=e[t],0,x,t),h=r),e.hasOwnProperty(t=\"ROUNDING_MODE\")&&(j(r=e[t],0,8,t),y=r),e.hasOwnProperty(t=\"EXPONENTIAL_AT\")&&((r=e[t])&&r.pop?(j(r[0],-x,0,t),j(r[1],0,x,t),m=r[0],B=r[1]):(j(r,-x,x,t),m=-(B=r<0?-r:r))),e.hasOwnProperty(t=\"RANGE\"))if((r=e[t])&&r.pop)j(r[0],-x,-1,t),j(r[1],1,x,t),N=r[0],U=r[1];else{if(j(r,-x,x,t),!r)throw Error(w+t+\" cannot be zero: \"+r);N=-(U=r<0?-r:r)}if(e.hasOwnProperty(t=\"CRYPTO\")){if((r=e[t])!==!!r)throw Error(w+t+\" not true or false: \"+r);if(r){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw M=!r,Error(w+\"crypto unavailable\");M=r}else M=r}if(e.hasOwnProperty(t=\"MODULO_MODE\")&&(j(r=e[t],0,9,t),D=r),e.hasOwnProperty(t=\"POW_PRECISION\")&&(j(r=e[t],0,x,t),F=r),e.hasOwnProperty(t=\"FORMAT\")){if(\"object\"!=typeof(r=e[t]))throw Error(w+t+\" not an object: \"+r);V=r}if(e.hasOwnProperty(t=\"ALPHABET\")){if(\"string\"!=typeof(r=e[t])||/^.?$|[+\\-.\\s]|(.).*\\1/.test(r))throw Error(w+t+\" invalid: \"+r);K=\"0123456789\"==r.slice(0,10),q=r}}return{DECIMAL_PLACES:h,ROUNDING_MODE:y,EXPONENTIAL_AT:[m,B],RANGE:[N,U],CRYPTO:M,MODULO_MODE:D,POW_PRECISION:F,FORMAT:V,ALPHABET:q}},H.isBigNumber=function(e){if(!e||!0!==e._isBigNumber)return!1;if(!H.DEBUG)return!0;var t,r,n=e.c,o=e.e,i=e.s;e:if(\"[object Array]\"=={}.toString.call(n)){if((1===i||-1===i)&&o>=-x&&o<=x&&o===b(o)){if(0===n[0]){if(0===o&&1===n.length)return!0;break e}if((t=(o+1)%_)<1&&(t+=_),String(n[0]).length==t){for(t=0;t<n.length;t++)if((r=n[t])<0||r>=E||r!==b(r))break e;if(0!==r)return!0}}}else if(null===n&&null===o&&(null===i||1===i||-1===i))return!0;throw Error(w+\"Invalid BigNumber: \"+e)},H.maximum=H.max=function(){return X(arguments,-1)},H.minimum=H.min=function(){return X(arguments,1)},H.random=(i=9007199254740992,a=Math.random()*i&2097151?function(){return b(Math.random()*i)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(e){var t,r,n,o,i,s=0,u=[],c=new H(d);if(null==e?e=h:j(e,0,x),o=g(e/_),M)if(crypto.getRandomValues){for(t=crypto.getRandomValues(new Uint32Array(o*=2));s<o;)(i=131072*t[s]+(t[s+1]>>>11))>=9e15?(r=crypto.getRandomValues(new Uint32Array(2)),t[s]=r[0],t[s+1]=r[1]):(u.push(i%1e14),s+=2);s=o/2}else{if(!crypto.randomBytes)throw M=!1,Error(w+\"crypto unavailable\");for(t=crypto.randomBytes(o*=7);s<o;)(i=281474976710656*(31&t[s])+1099511627776*t[s+1]+4294967296*t[s+2]+16777216*t[s+3]+(t[s+4]<<16)+(t[s+5]<<8)+t[s+6])>=9e15?crypto.randomBytes(7).copy(t,s):(u.push(i%1e14),s+=7);s=o/7}if(!M)for(;s<o;)(i=a())<9e15&&(u[s++]=i%1e14);for(o=u[--s],e%=_,o&&e&&(i=T[_-e],u[s]=b(o/i)*i);0===u[s];u.pop(),s--);if(s<0)u=[n=0];else{for(n=-1;0===u[0];u.splice(0,1),n-=_);for(s=1,i=u[0];i>=10;i/=10,s++);s<_&&(n-=_-s)}return c.e=n,c.c=u,c}),H.sum=function(){for(var e=1,t=arguments,r=new H(t[0]);e<t.length;)r=r.plus(t[e++]);return r},n=function(){var e=\"0123456789\";function t(e,t,r,n){for(var o,i,a=[0],s=0,u=e.length;s<u;){for(i=a.length;i--;a[i]*=t);for(a[0]+=n.indexOf(e.charAt(s++)),o=0;o<a.length;o++)a[o]>r-1&&(null==a[o+1]&&(a[o+1]=0),a[o+1]+=a[o]/r|0,a[o]%=r)}return a.reverse()}return function(n,o,i,a,s){var u,c,l,f,p,d,m,v,g=n.indexOf(\".\"),b=h,w=y;for(g>=0&&(f=F,F=0,n=n.replace(\".\",\"\"),d=(v=new H(o)).pow(n.length-g),F=f,v.c=t(L(P(d.c),d.e,\"0\"),10,i,e),v.e=v.c.length),l=f=(m=t(n,o,i,s?(u=q,e):(u=e,q))).length;0==m[--f];m.pop());if(!m[0])return u.charAt(0);if(g<0?--l:(d.c=m,d.e=l,d.s=a,m=(d=r(d,v,b,w,i)).c,p=d.r,l=d.e),g=m[c=l+b+1],f=i/2,p=p||c<0||null!=m[c+1],p=w<4?(null!=g||p)&&(0==w||w==(d.s<0?3:2)):g>f||g==f&&(4==w||p||6==w&&1&m[c-1]||w==(d.s<0?8:7)),c<1||!m[0])n=p?L(u.charAt(1),-b,u.charAt(0)):u.charAt(0);else{if(m.length=c,p)for(--i;++m[--c]>i;)m[c]=0,c||(++l,m=[1].concat(m));for(f=m.length;!m[--f];);for(g=0,n=\"\";g<=f;n+=u.charAt(m[g++]));n=L(n,l,u.charAt(0))}return n}}(),r=function(){function e(e,t,r){var n,o,i,a,s=0,u=e.length,c=t%O,l=t/O|0;for(e=e.slice();u--;)s=((o=c*(i=e[u]%O)+(n=l*i+(a=e[u]/O|0)*c)%O*O+s)/r|0)+(n/O|0)+l*a,e[u]=o%r;return s&&(e=[s].concat(e)),e}function t(e,t,r,n){var o,i;if(r!=n)i=r>n?1:-1;else for(o=i=0;o<r;o++)if(e[o]!=t[o]){i=e[o]>t[o]?1:-1;break}return i}function r(e,t,r,n){for(var o=0;r--;)e[r]-=o,o=e[r]<t[r]?1:0,e[r]=o*n+e[r]-t[r];for(;!e[0]&&e.length>1;e.splice(0,1));}return function(n,o,i,a,s){var u,c,l,f,p,d,h,y,m,v,g,w,S,k,T,O,x,P=n.s==o.s?1:-1,R=n.c,j=o.c;if(!(R&&R[0]&&j&&j[0]))return new H(n.s&&o.s&&(R?!j||R[0]!=j[0]:j)?R&&0==R[0]||!j?0*P:P/0:NaN);for(m=(y=new H(P)).c=[],P=i+(c=n.e-o.e)+1,s||(s=E,c=A(n.e/_)-A(o.e/_),P=P/_|0),l=0;j[l]==(R[l]||0);l++);if(j[l]>(R[l]||0)&&c--,P<0)m.push(1),f=!0;else{for(k=R.length,O=j.length,l=0,P+=2,(p=b(s/(j[0]+1)))>1&&(j=e(j,p,s),R=e(R,p,s),O=j.length,k=R.length),S=O,g=(v=R.slice(0,O)).length;g<O;v[g++]=0);x=j.slice(),x=[0].concat(x),T=j[0],j[1]>=s/2&&T++;do{if(p=0,(u=t(j,v,O,g))<0){if(w=v[0],O!=g&&(w=w*s+(v[1]||0)),(p=b(w/T))>1)for(p>=s&&(p=s-1),h=(d=e(j,p,s)).length,g=v.length;1==t(d,v,h,g);)p--,r(d,O<h?x:j,h,s),h=d.length,u=1;else 0==p&&(u=p=1),h=(d=j.slice()).length;if(h<g&&(d=[0].concat(d)),r(v,d,g,s),g=v.length,-1==u)for(;t(j,v,O,g)<1;)p++,r(v,O<g?x:j,g,s),g=v.length}else 0===u&&(p++,v=[0]);m[l++]=p,v[0]?v[g++]=R[S]||0:(v=[R[S]],g=1)}while((S++<k||null!=v[0])&&P--);f=null!=v[0],m[0]||m.splice(0,1)}if(s==E){for(l=1,P=m[0];P>=10;P/=10,l++);W(y,i+(y.e=l+c*_-1)+1,a,f)}else y.e=c,y.r=+f;return y}}(),s=/^(-?)0([xbo])(?=\\w[\\w.]*$)/i,u=/^([^.]+)\\.$/,c=/^\\.([^.]+)$/,l=/^-?(Infinity|NaN)$/,f=/^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g,o=function(e,t,r,n){var o,i=r?t:t.replace(f,\"\");if(l.test(i))e.s=isNaN(i)?null:i<0?-1:1;else{if(!r&&(i=i.replace(s,(function(e,t,r){return o=\"x\"==(r=r.toLowerCase())?16:\"b\"==r?2:8,n&&n!=o?e:t})),n&&(o=n,i=i.replace(u,\"$1\").replace(c,\"0.$1\")),t!=i))return new H(i,o);if(H.DEBUG)throw Error(w+\"Not a\"+(n?\" base \"+n:\"\")+\" number: \"+t);e.s=null}e.c=e.e=null},p.absoluteValue=p.abs=function(){var e=new H(this);return e.s<0&&(e.s=1),e},p.comparedTo=function(e,t){return R(this,new H(e,t))},p.decimalPlaces=p.dp=function(e,t){var r,n,o,i=this;if(null!=e)return j(e,0,x),null==t?t=y:j(t,0,8),W(new H(i),e+i.e+1,t);if(!(r=i.c))return null;if(n=((o=r.length-1)-A(this.e/_))*_,o=r[o])for(;o%10==0;o/=10,n--);return n<0&&(n=0),n},p.dividedBy=p.div=function(e,t){return r(this,new H(e,t),h,y)},p.dividedToIntegerBy=p.idiv=function(e,t){return r(this,new H(e,t),0,1)},p.exponentiatedBy=p.pow=function(e,t){var r,n,o,i,a,s,u,c,l=this;if((e=new H(e)).c&&!e.isInteger())throw Error(w+\"Exponent not an integer: \"+$(e));if(null!=t&&(t=new H(t)),a=e.e>14,!l.c||!l.c[0]||1==l.c[0]&&!l.e&&1==l.c.length||!e.c||!e.c[0])return c=new H(Math.pow(+$(l),a?e.s*(2-C(e)):+$(e))),t?c.mod(t):c;if(s=e.s<0,t){if(t.c?!t.c[0]:!t.s)return new H(NaN);(n=!s&&l.isInteger()&&t.isInteger())&&(l=l.mod(t))}else{if(e.e>9&&(l.e>0||l.e<-1||(0==l.e?l.c[0]>1||a&&l.c[1]>=24e7:l.c[0]<8e13||a&&l.c[0]<=9999975e7)))return i=l.s<0&&C(e)?-0:0,l.e>-1&&(i=1/i),new H(s?1/i:i);F&&(i=g(F/_+2))}for(a?(r=new H(.5),s&&(e.s=1),u=C(e)):u=(o=Math.abs(+$(e)))%2,c=new H(d);;){if(u){if(!(c=c.times(l)).c)break;i?c.c.length>i&&(c.c.length=i):n&&(c=c.mod(t))}if(o){if(0===(o=b(o/2)))break;u=o%2}else if(W(e=e.times(r),e.e+1,1),e.e>14)u=C(e);else{if(0===(o=+$(e)))break;u=o%2}l=l.times(l),i?l.c&&l.c.length>i&&(l.c.length=i):n&&(l=l.mod(t))}return n?c:(s&&(c=d.div(c)),t?c.mod(t):i?W(c,F,y,undefined):c)},p.integerValue=function(e){var t=new H(this);return null==e?e=y:j(e,0,8),W(t,t.e+1,e)},p.isEqualTo=p.eq=function(e,t){return 0===R(this,new H(e,t))},p.isFinite=function(){return!!this.c},p.isGreaterThan=p.gt=function(e,t){return R(this,new H(e,t))>0},p.isGreaterThanOrEqualTo=p.gte=function(e,t){return 1===(t=R(this,new H(e,t)))||0===t},p.isInteger=function(){return!!this.c&&A(this.e/_)>this.c.length-2},p.isLessThan=p.lt=function(e,t){return R(this,new H(e,t))<0},p.isLessThanOrEqualTo=p.lte=function(e,t){return-1===(t=R(this,new H(e,t)))||0===t},p.isNaN=function(){return!this.s},p.isNegative=function(){return this.s<0},p.isPositive=function(){return this.s>0},p.isZero=function(){return!!this.c&&0==this.c[0]},p.minus=function(e,t){var r,n,o,i,a=this,s=a.s;if(t=(e=new H(e,t)).s,!s||!t)return new H(NaN);if(s!=t)return e.s=-t,a.plus(e);var u=a.e/_,c=e.e/_,l=a.c,f=e.c;if(!u||!c){if(!l||!f)return l?(e.s=-t,e):new H(f?a:NaN);if(!l[0]||!f[0])return f[0]?(e.s=-t,e):new H(l[0]?a:3==y?-0:0)}if(u=A(u),c=A(c),l=l.slice(),s=u-c){for((i=s<0)?(s=-s,o=l):(c=u,o=f),o.reverse(),t=s;t--;o.push(0));o.reverse()}else for(n=(i=(s=l.length)<(t=f.length))?s:t,s=t=0;t<n;t++)if(l[t]!=f[t]){i=l[t]<f[t];break}if(i&&(o=l,l=f,f=o,e.s=-e.s),(t=(n=f.length)-(r=l.length))>0)for(;t--;l[r++]=0);for(t=E-1;n>s;){if(l[--n]<f[n]){for(r=n;r&&!l[--r];l[r]=t);--l[r],l[n]+=E}l[n]-=f[n]}for(;0==l[0];l.splice(0,1),--c);return l[0]?G(e,l,c):(e.s=3==y?-1:1,e.c=[e.e=0],e)},p.modulo=p.mod=function(e,t){var n,o,i=this;return e=new H(e,t),!i.c||!e.s||e.c&&!e.c[0]?new H(NaN):!e.c||i.c&&!i.c[0]?new H(i):(9==D?(o=e.s,e.s=1,n=r(i,e,0,3),e.s=o,n.s*=o):n=r(i,e,0,D),(e=i.minus(n.times(e))).c[0]||1!=D||(e.s=i.s),e)},p.multipliedBy=p.times=function(e,t){var r,n,o,i,a,s,u,c,l,f,p,d,h,y,m,v=this,g=v.c,b=(e=new H(e,t)).c;if(!(g&&b&&g[0]&&b[0]))return!v.s||!e.s||g&&!g[0]&&!b||b&&!b[0]&&!g?e.c=e.e=e.s=null:(e.s*=v.s,g&&b?(e.c=[0],e.e=0):e.c=e.e=null),e;for(n=A(v.e/_)+A(e.e/_),e.s*=v.s,(u=g.length)<(f=b.length)&&(h=g,g=b,b=h,o=u,u=f,f=o),o=u+f,h=[];o--;h.push(0));for(y=E,m=O,o=f;--o>=0;){for(r=0,p=b[o]%m,d=b[o]/m|0,i=o+(a=u);i>o;)r=((c=p*(c=g[--a]%m)+(s=d*c+(l=g[a]/m|0)*p)%m*m+h[i]+r)/y|0)+(s/m|0)+d*l,h[i--]=c%y;h[i]=r}return r?++n:h.splice(0,1),G(e,h,n)},p.negated=function(){var e=new H(this);return e.s=-e.s||null,e},p.plus=function(e,t){var r,n=this,o=n.s;if(t=(e=new H(e,t)).s,!o||!t)return new H(NaN);if(o!=t)return e.s=-t,n.minus(e);var i=n.e/_,a=e.e/_,s=n.c,u=e.c;if(!i||!a){if(!s||!u)return new H(o/0);if(!s[0]||!u[0])return u[0]?e:new H(s[0]?n:0*o)}if(i=A(i),a=A(a),s=s.slice(),o=i-a){for(o>0?(a=i,r=u):(o=-o,r=s),r.reverse();o--;r.push(0));r.reverse()}for((o=s.length)-(t=u.length)<0&&(r=u,u=s,s=r,t=o),o=0;t;)o=(s[--t]=s[t]+u[t]+o)/E|0,s[t]=E===s[t]?0:s[t]%E;return o&&(s=[o].concat(s),++a),G(e,s,a)},p.precision=p.sd=function(e,t){var r,n,o,i=this;if(null!=e&&e!==!!e)return j(e,1,x),null==t?t=y:j(t,0,8),W(new H(i),e,t);if(!(r=i.c))return null;if(n=(o=r.length-1)*_+1,o=r[o]){for(;o%10==0;o/=10,n--);for(o=r[0];o>=10;o/=10,n++);}return e&&i.e+1>n&&(n=i.e+1),n},p.shiftedBy=function(e){return j(e,-9007199254740991,k),this.times(\"1e\"+e)},p.squareRoot=p.sqrt=function(){var e,t,n,o,i,a=this,s=a.c,u=a.s,c=a.e,l=h+4,f=new H(\"0.5\");if(1!==u||!s||!s[0])return new H(!u||u<0&&(!s||s[0])?NaN:s?a:1/0);if(0==(u=Math.sqrt(+$(a)))||u==1/0?(((t=P(s)).length+c)%2==0&&(t+=\"0\"),u=Math.sqrt(+t),c=A((c+1)/2)-(c<0||c%2),n=new H(t=u==1/0?\"5e\"+c:(t=u.toExponential()).slice(0,t.indexOf(\"e\")+1)+c)):n=new H(u+\"\"),n.c[0])for((u=(c=n.e)+l)<3&&(u=0);;)if(i=n,n=f.times(i.plus(r(a,i,l,1))),P(i.c).slice(0,u)===(t=P(n.c)).slice(0,u)){if(n.e<c&&--u,\"9999\"!=(t=t.slice(u-3,u+1))&&(o||\"4999\"!=t)){+t&&(+t.slice(1)||\"5\"!=t.charAt(0))||(W(n,n.e+h+2,1),e=!n.times(n).eq(a));break}if(!o&&(W(i,i.e+h+2,0),i.times(i).eq(a))){n=i;break}l+=4,u+=4,o=1}return W(n,n.e+h+1,y,e)},p.toExponential=function(e,t){return null!=e&&(j(e,0,x),e++),z(this,e,t,1)},p.toFixed=function(e,t){return null!=e&&(j(e,0,x),e=e+this.e+1),z(this,e,t)},p.toFormat=function(e,t,r){var n,o=this;if(null==r)null!=e&&t&&\"object\"==typeof t?(r=t,t=null):e&&\"object\"==typeof e?(r=e,e=t=null):r=V;else if(\"object\"!=typeof r)throw Error(w+\"Argument not an object: \"+r);if(n=o.toFixed(e,t),o.c){var i,a=n.split(\".\"),s=+r.groupSize,u=+r.secondaryGroupSize,c=r.groupSeparator||\"\",l=a[0],f=a[1],p=o.s<0,d=p?l.slice(1):l,h=d.length;if(u&&(i=s,s=u,u=i,h-=i),s>0&&h>0){for(i=h%s||s,l=d.substr(0,i);i<h;i+=s)l+=c+d.substr(i,s);u>0&&(l+=c+d.slice(i)),p&&(l=\"-\"+l)}n=f?l+(r.decimalSeparator||\"\")+((u=+r.fractionGroupSize)?f.replace(new RegExp(\"\\\\d{\"+u+\"}\\\\B\",\"g\"),\"$&\"+(r.fractionGroupSeparator||\"\")):f):l}return(r.prefix||\"\")+n+(r.suffix||\"\")},p.toFraction=function(e){var t,n,o,i,a,s,u,c,l,f,p,h,m=this,v=m.c;if(null!=e&&(!(u=new H(e)).isInteger()&&(u.c||1!==u.s)||u.lt(d)))throw Error(w+\"Argument \"+(u.isInteger()?\"out of range: \":\"not an integer: \")+$(u));if(!v)return new H(m);for(t=new H(d),l=n=new H(d),o=c=new H(d),h=P(v),a=t.e=h.length-m.e-1,t.c[0]=T[(s=a%_)<0?_+s:s],e=!e||u.comparedTo(t)>0?a>0?t:l:u,s=U,U=1/0,u=new H(h),c.c[0]=0;f=r(u,t,0,1),1!=(i=n.plus(f.times(o))).comparedTo(e);)n=o,o=i,l=c.plus(f.times(i=l)),c=i,t=u.minus(f.times(i=t)),u=i;return i=r(e.minus(n),o,0,1),c=c.plus(i.times(l)),n=n.plus(i.times(o)),c.s=l.s=m.s,p=r(l,o,a*=2,y).minus(m).abs().comparedTo(r(c,n,a,y).minus(m).abs())<1?[l,o]:[c,n],U=s,p},p.toNumber=function(){return+$(this)},p.toPrecision=function(e,t){return null!=e&&j(e,1,x),z(this,e,t,2)},p.toString=function(e){var t,r=this,o=r.s,i=r.e;return null===i?o?(t=\"Infinity\",o<0&&(t=\"-\"+t)):t=\"NaN\":(null==e?t=i<=m||i>=B?I(P(r.c),i):L(P(r.c),i,\"0\"):10===e&&K?t=L(P((r=W(new H(r),h+i+1,y)).c),r.e,\"0\"):(j(e,2,q.length,\"Base\"),t=n(L(P(r.c),i,\"0\"),10,e,o,!0)),o<0&&r.c[0]&&(t=\"-\"+t)),t},p.valueOf=p.toJSON=function(){return $(this)},p._isBigNumber=!0,p[Symbol.toStringTag]=\"BigNumber\",p[Symbol.for(\"nodejs.util.inspect.custom\")]=p.valueOf,null!=t&&H.set(t),H}();const N=B;var U=r(4193),M=r.n(U),D=r(9127),F=r.n(D),V=r(5976),q=r(9983);function K(e){return K=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},K(e)}var H=\"13.1.0\",z={},X=(0,q.vt)({headers:{\"X-Client-Name\":\"js-stellar-sdk\",\"X-Client-Version\":H}});function G(e){return Math.floor(e/1e3)}X.interceptors.response.use((function(e){var t=M()(e.config.url).hostname(),r=0;if(e.headers instanceof Headers){var n=e.headers.get(\"date\");n&&(r=G(Date.parse(n)))}else if(\"object\"===K(e.headers)&&\"date\"in e.headers){var o=e.headers;\"string\"==typeof o.date&&(r=G(Date.parse(o.date)))}var i=G((new Date).getTime());return Number.isNaN(r)||(z[t]={serverTime:r,localTimeRecorded:i}),e}));const W=X;function $(e){var t=z[e];if(!t||!t.localTimeRecorded||!t.serverTime)return null;var r=t.serverTime,n=t.localTimeRecorded,o=G((new Date).getTime());return o-n>300?null:o-n+r}function Q(e){return Q=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Q(e)}function Y(){Y=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(e,t,r){e[t]=r.value},i=\"function\"==typeof Symbol?Symbol:{},a=i.iterator||\"@@iterator\",s=i.asyncIterator||\"@@asyncIterator\",u=i.toStringTag||\"@@toStringTag\";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},\"\")}catch(e){c=function(e,t,r){return e[t]=r}}function l(e,t,r,n){var i=t&&t.prototype instanceof v?t:v,a=Object.create(i.prototype),s=new R(n||[]);return o(a,\"_invoke\",{value:O(e,r,s)}),a}function f(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}t.wrap=l;var p=\"suspendedStart\",d=\"suspendedYield\",h=\"executing\",y=\"completed\",m={};function v(){}function g(){}function b(){}var w={};c(w,a,(function(){return this}));var S=Object.getPrototypeOf,E=S&&S(S(j([])));E&&E!==r&&n.call(E,a)&&(w=E);var _=b.prototype=v.prototype=Object.create(w);function k(e){[\"next\",\"throw\",\"return\"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function T(e,t){function r(o,i,a,s){var u=f(e[o],e,i);if(\"throw\"!==u.type){var c=u.arg,l=c.value;return l&&\"object\"==Q(l)&&n.call(l,\"__await\")?t.resolve(l.__await).then((function(e){r(\"next\",e,a,s)}),(function(e){r(\"throw\",e,a,s)})):t.resolve(l).then((function(e){c.value=e,a(c)}),(function(e){return r(\"throw\",e,a,s)}))}s(u.arg)}var i;o(this,\"_invoke\",{value:function(e,n){function o(){return new t((function(t,o){r(e,n,t,o)}))}return i=i?i.then(o,o):o()}})}function O(t,r,n){var o=p;return function(i,a){if(o===h)throw Error(\"Generator is already running\");if(o===y){if(\"throw\"===i)throw a;return{value:e,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var u=x(s,n);if(u){if(u===m)continue;return u}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===p)throw o=y,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=h;var c=f(t,r,n);if(\"normal\"===c.type){if(o=n.done?y:d,c.arg===m)continue;return{value:c.arg,done:n.done}}\"throw\"===c.type&&(o=y,n.method=\"throw\",n.arg=c.arg)}}}function x(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,\"throw\"===n&&t.iterator.return&&(r.method=\"return\",r.arg=e,x(t,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),m;var i=f(o,t.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,m;var a=i.arg;return a?a.done?(r[t.resultName]=a.value,r.next=t.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=e),r.delegate=null,m):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,m)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function R(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(A,this),this.reset(!0)}function j(t){if(t||\"\"===t){var r=t[a];if(r)return r.call(t);if(\"function\"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,i=function r(){for(;++o<t.length;)if(n.call(t,o))return r.value=t[o],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(Q(t)+\" is not iterable\")}return g.prototype=b,o(_,\"constructor\",{value:b,configurable:!0}),o(b,\"constructor\",{value:g,configurable:!0}),g.displayName=c(b,u,\"GeneratorFunction\"),t.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===g||\"GeneratorFunction\"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,c(e,u,\"GeneratorFunction\")),e.prototype=Object.create(_),e},t.awrap=function(e){return{__await:e}},k(T.prototype),c(T.prototype,s,(function(){return this})),t.AsyncIterator=T,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new T(l(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},k(_),c(_,u,\"Generator\"),c(_,a,(function(){return this})),c(_,\"toString\",(function(){return\"[object Generator]\"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=j,R.prototype={constructor:R,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=e,this.tryEntries.forEach(P),!t)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function o(n,o){return s.type=\"throw\",s.arg=t,r.next=n,o&&(r.method=\"next\",r.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if(\"root\"===a.tryLoc)return o(\"end\");if(a.tryLoc<=this.prev){var u=n.call(a,\"catchLoc\"),c=n.call(a,\"finallyLoc\");if(u&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw Error(\"try statement without catch or finally\");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var i=o;break}}i&&(\"break\"===e||\"continue\"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method=\"next\",this.next=i.finallyLoc,m):this.complete(a)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),P(r),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;P(r)}return o}}throw Error(\"illegal catch attempt\")},delegateYield:function(t,r,n){return this.delegate={iterator:j(t),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=e),m}},t}function J(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function Z(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){J(i,n,o,a,s,\"next\",e)}function s(e){J(i,n,o,a,s,\"throw\",e)}a(void 0)}))}}function ee(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,te(n.key),n)}}function te(e){var t=function(e,t){if(\"object\"!=Q(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=Q(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==Q(t)?t:t+\"\"}var re,ne,oe,ie,ae=[\"transaction\"],se=r.g;re=null!==(ne=null!==(oe=se.EventSource)&&void 0!==oe?oe:null===(ie=se.window)||void 0===ie?void 0:ie.EventSource)&&void 0!==ne?ne:r(1731);var ue,ce,le=function(e,t,r){return t&&ee(e.prototype,t),r&&ee(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}((function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\";!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.url=t.clone(),this.filter=[],this.originalSegments=this.url.segment()||[],this.neighborRoot=r}),[{key:\"call\",value:function(){var e=this;return this.checkFilter(),this._sendNormalRequest(this.url).then((function(t){return e._parseResponse(t)}))}},{key:\"stream\",value:function(){var e,t,r=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(void 0===re)throw new Error(\"Streaming requires eventsource to be enabled. If you need this functionality, compile with USE_EVENTSOURCE=true.\");this.checkFilter(),this.url.setQuery(\"X-Client-Name\",\"js-stellar-sdk\"),this.url.setQuery(\"X-Client-Version\",H);var o=function(){t=setTimeout((function(){var t;null===(t=e)||void 0===t||t.close(),e=i()}),n.reconnectTimeout||15e3)},i=function(){try{e=new re(r.url.toString())}catch(e){n.onerror&&n.onerror(e)}if(o(),!e)return e;var a=!1,s=function(){a||(clearTimeout(t),e.close(),i(),a=!0)},u=function(e){if(\"close\"!==e.type){var i=e.data?r._parseRecord(JSON.parse(e.data)):e;i.paging_token&&r.url.setQuery(\"cursor\",i.paging_token),clearTimeout(t),o(),void 0!==n.onmessage&&n.onmessage(i)}else s()},c=function(e){n.onerror&&n.onerror(e)};return e.addEventListener?(e.addEventListener(\"message\",u.bind(r)),e.addEventListener(\"error\",c.bind(r)),e.addEventListener(\"close\",s.bind(r))):(e.onmessage=u.bind(r),e.onerror=c.bind(r)),e};return i(),function(){var r;clearTimeout(t),null===(r=e)||void 0===r||r.close()}}},{key:\"cursor\",value:function(e){return this.url.setQuery(\"cursor\",e),this}},{key:\"limit\",value:function(e){return this.url.setQuery(\"limit\",e.toString()),this}},{key:\"order\",value:function(e){return this.url.setQuery(\"order\",e),this}},{key:\"join\",value:function(e){return this.url.setQuery(\"join\",e),this}},{key:\"forEndpoint\",value:function(e,t){if(\"\"===this.neighborRoot)throw new Error(\"Invalid usage: neighborRoot not set in constructor\");return this.filter.push([e,t,this.neighborRoot]),this}},{key:\"checkFilter\",value:function(){if(this.filter.length>=2)throw new V.v7(\"Too many filters specified\",this.filter);if(1===this.filter.length){var e=this.originalSegments.concat(this.filter[0]);this.url.segment(e)}}},{key:\"_requestFnForLink\",value:function(e){var t=this;return Z(Y().mark((function r(){var n,o,i,a,s=arguments;return Y().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=s.length>0&&void 0!==s[0]?s[0]:{},e.templated?(i=F()(e.href),o=M()(i.expand(n))):o=M()(e.href),r.next=4,t._sendNormalRequest(o);case 4:return a=r.sent,r.abrupt(\"return\",t._parseResponse(a));case 6:case\"end\":return r.stop()}}),r)})))}},{key:\"_parseRecord\",value:function(e){var t=this;return e._links?(Object.keys(e._links).forEach((function(r){var n=e._links[r],o=!1;if(void 0!==e[r]&&(e[\"\".concat(r,\"_attr\")]=e[r],o=!0),o&&ae.indexOf(r)>=0){var i=t._parseRecord(e[r]);e[r]=Z(Y().mark((function e(){return Y().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",i);case 1:case\"end\":return e.stop()}}),e)})))}else e[r]=t._requestFnForLink(n)})),e):e}},{key:\"_sendNormalRequest\",value:(ce=Z(Y().mark((function e(t){var r;return Y().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return\"\"===(r=t).authority()&&(r=r.authority(this.url.authority())),\"\"===r.protocol()&&(r=r.protocol(this.url.protocol())),e.abrupt(\"return\",X.get(r.toString()).then((function(e){return e.data})).catch(this._handleNetworkError));case 4:case\"end\":return e.stop()}}),e,this)}))),function(e){return ce.apply(this,arguments)})},{key:\"_parseResponse\",value:function(e){return e._embedded&&e._embedded.records?this._toCollectionPage(e):this._parseRecord(e)}},{key:\"_toCollectionPage\",value:function(e){for(var t,r,n=this,o=0;o<e._embedded.records.length;o+=1)e._embedded.records[o]=this._parseRecord(e._embedded.records[o]);return{records:e._embedded.records,next:(r=Z(Y().mark((function t(){var r;return Y().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,n._sendNormalRequest(M()(e._links.next.href));case 2:return r=t.sent,t.abrupt(\"return\",n._toCollectionPage(r));case 4:case\"end\":return t.stop()}}),t)}))),function(){return r.apply(this,arguments)}),prev:(t=Z(Y().mark((function t(){var r;return Y().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,n._sendNormalRequest(M()(e._links.prev.href));case 2:return r=t.sent,t.abrupt(\"return\",n._toCollectionPage(r));case 4:case\"end\":return t.stop()}}),t)}))),function(){return t.apply(this,arguments)})}}},{key:\"_handleNetworkError\",value:(ue=Z(Y().mark((function e(t){var r,n;return Y().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t.response||!t.response.status){e.next=8;break}e.t0=t.response.status,e.next=404===e.t0?4:5;break;case 4:return e.abrupt(\"return\",Promise.reject(new V.m_(null!==(r=t.response.statusText)&&void 0!==r?r:\"Not Found\",t.response.data)));case 5:return e.abrupt(\"return\",Promise.reject(new V.Dr(null!==(n=t.response.statusText)&&void 0!==n?n:\"Unknown\",t.response.data)));case 6:e.next=9;break;case 8:return e.abrupt(\"return\",Promise.reject(new Error(t.message)));case 9:case\"end\":return e.stop()}}),e)}))),function(e){return ue.apply(this,arguments)})}]),fe=r(8732);function pe(e){return pe=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},pe(e)}function de(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,he(n.key),n)}}function he(e){var t=function(e,t){if(\"object\"!=pe(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=pe(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==pe(t)?t:t+\"\"}function ye(e,t,r){return t=ve(t),function(e,t){if(t&&(\"object\"==pe(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,me()?Reflect.construct(t,r||[],ve(e).constructor):t.apply(e,r))}function me(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(me=function(){return!!e})()}function ve(e){return ve=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ve(e)}function ge(e,t){return ge=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ge(e,t)}var be=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(r=ye(this,t,[e])).url.segment(\"accounts\"),r}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&ge(e,t)}(t,e),function(e,t,r){return t&&de(e.prototype,t),r&&de(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"accountId\",value:function(e){var t=new le(this.url.clone());return t.filter.push([e]),t}},{key:\"forSigner\",value:function(e){return this.url.setQuery(\"signer\",e),this}},{key:\"forAsset\",value:function(e){return this.url.setQuery(\"asset\",\"\".concat(e)),this}},{key:\"sponsor\",value:function(e){return this.url.setQuery(\"sponsor\",e),this}},{key:\"forLiquidityPool\",value:function(e){return this.url.setQuery(\"liquidity_pool\",e),this}}])}(le);function we(e){return we=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},we(e)}function Se(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,Ee(n.key),n)}}function Ee(e){var t=function(e,t){if(\"object\"!=we(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=we(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==we(t)?t:t+\"\"}function _e(e,t,r){return t=Te(t),function(e,t){if(t&&(\"object\"==we(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,ke()?Reflect.construct(t,r||[],Te(e).constructor):t.apply(e,r))}function ke(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(ke=function(){return!!e})()}function Te(e){return Te=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Te(e)}function Oe(e,t){return Oe=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Oe(e,t)}var xe=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(r=_e(this,t,[e])).url.segment(\"assets\"),r}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&Oe(e,t)}(t,e),function(e,t,r){return t&&Se(e.prototype,t),r&&Se(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"forCode\",value:function(e){return this.url.setQuery(\"asset_code\",e),this}},{key:\"forIssuer\",value:function(e){return this.url.setQuery(\"asset_issuer\",e),this}}])}(le);function Ae(e){return Ae=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Ae(e)}function Pe(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,Re(n.key),n)}}function Re(e){var t=function(e,t){if(\"object\"!=Ae(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=Ae(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==Ae(t)?t:t+\"\"}function je(e,t,r){return t=Ie(t),function(e,t){if(t&&(\"object\"==Ae(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,Ce()?Reflect.construct(t,r||[],Ie(e).constructor):t.apply(e,r))}function Ce(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Ce=function(){return!!e})()}function Ie(e){return Ie=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Ie(e)}function Le(e,t){return Le=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Le(e,t)}var Be=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(r=je(this,t,[e])).url.segment(\"claimable_balances\"),r}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&Le(e,t)}(t,e),function(e,t,r){return t&&Pe(e.prototype,t),r&&Pe(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"claimableBalance\",value:function(e){var t=new le(this.url.clone());return t.filter.push([e]),t}},{key:\"sponsor\",value:function(e){return this.url.setQuery(\"sponsor\",e),this}},{key:\"claimant\",value:function(e){return this.url.setQuery(\"claimant\",e),this}},{key:\"asset\",value:function(e){return this.url.setQuery(\"asset\",e.toString()),this}}])}(le);function Ne(e){return Ne=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Ne(e)}function Ue(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,Me(n.key),n)}}function Me(e){var t=function(e,t){if(\"object\"!=Ne(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=Ne(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==Ne(t)?t:t+\"\"}function De(e,t,r){return t=Ve(t),function(e,t){if(t&&(\"object\"==Ne(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,Fe()?Reflect.construct(t,r||[],Ve(e).constructor):t.apply(e,r))}function Fe(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Fe=function(){return!!e})()}function Ve(e){return Ve=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Ve(e)}function qe(e,t){return qe=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},qe(e,t)}var Ke=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(r=De(this,t,[e,\"effects\"])).url.segment(\"effects\"),r}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&qe(e,t)}(t,e),function(e,t,r){return t&&Ue(e.prototype,t),r&&Ue(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"forAccount\",value:function(e){return this.forEndpoint(\"accounts\",e)}},{key:\"forLedger\",value:function(e){return this.forEndpoint(\"ledgers\",e.toString())}},{key:\"forTransaction\",value:function(e){return this.forEndpoint(\"transactions\",e)}},{key:\"forOperation\",value:function(e){return this.forEndpoint(\"operations\",e)}},{key:\"forLiquidityPool\",value:function(e){return this.forEndpoint(\"liquidity_pools\",e)}}])}(le);function He(e){return He=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},He(e)}function ze(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,Xe(n.key),n)}}function Xe(e){var t=function(e,t){if(\"object\"!=He(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=He(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==He(t)?t:t+\"\"}function Ge(e,t,r){return t=$e(t),function(e,t){if(t&&(\"object\"==He(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,We()?Reflect.construct(t,r||[],$e(e).constructor):t.apply(e,r))}function We(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(We=function(){return!!e})()}function $e(e){return $e=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},$e(e)}function Qe(e,t){return Qe=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Qe(e,t)}var Ye=function(e){function t(e,r){var n;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(n=Ge(this,t,[e])).url.segment(\"friendbot\"),n.url.setQuery(\"addr\",r),n}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&Qe(e,t)}(t,e),function(e,t,r){return t&&ze(e.prototype,t),r&&ze(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t)}(le);function Je(e){return Je=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Je(e)}function Ze(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,et(n.key),n)}}function et(e){var t=function(e,t){if(\"object\"!=Je(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=Je(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==Je(t)?t:t+\"\"}function tt(e,t,r){return t=nt(t),function(e,t){if(t&&(\"object\"==Je(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,rt()?Reflect.construct(t,r||[],nt(e).constructor):t.apply(e,r))}function rt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(rt=function(){return!!e})()}function nt(e){return nt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},nt(e)}function ot(e,t){return ot=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ot(e,t)}var it=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(r=tt(this,t,[e])).url.segment(\"ledgers\"),r}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&ot(e,t)}(t,e),function(e,t,r){return t&&Ze(e.prototype,t),r&&Ze(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"ledger\",value:function(e){return this.filter.push([\"ledgers\",e.toString()]),this}}])}(le);function at(e){return at=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},at(e)}function st(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,ut(n.key),n)}}function ut(e){var t=function(e,t){if(\"object\"!=at(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=at(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==at(t)?t:t+\"\"}function ct(e,t,r){return t=ft(t),function(e,t){if(t&&(\"object\"==at(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,lt()?Reflect.construct(t,r||[],ft(e).constructor):t.apply(e,r))}function lt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(lt=function(){return!!e})()}function ft(e){return ft=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ft(e)}function pt(e,t){return pt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},pt(e,t)}var dt=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(r=ct(this,t,[e])).url.segment(\"liquidity_pools\"),r}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&pt(e,t)}(t,e),function(e,t,r){return t&&st(e.prototype,t),r&&st(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"forAssets\",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n=t.map((function(e){return e.toString()})).join(\",\");return this.url.setQuery(\"reserves\",n),this}},{key:\"forAccount\",value:function(e){return this.url.setQuery(\"account\",e),this}},{key:\"liquidityPoolId\",value:function(e){if(!e.match(/[a-fA-F0-9]{64}/))throw new TypeError(\"\".concat(e,\" does not look like a liquidity pool ID\"));var t=new le(this.url.clone());return t.filter.push([e.toLowerCase()]),t}}])}(le);function ht(e){return ht=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},ht(e)}function yt(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,mt(n.key),n)}}function mt(e){var t=function(e,t){if(\"object\"!=ht(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=ht(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==ht(t)?t:t+\"\"}function vt(e,t,r){return t=bt(t),function(e,t){if(t&&(\"object\"==ht(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,gt()?Reflect.construct(t,r||[],bt(e).constructor):t.apply(e,r))}function gt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(gt=function(){return!!e})()}function bt(e){return bt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},bt(e)}function wt(e,t){return wt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},wt(e,t)}var St=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(r=vt(this,t,[e,\"offers\"])).url.segment(\"offers\"),r}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&wt(e,t)}(t,e),function(e,t,r){return t&&yt(e.prototype,t),r&&yt(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"offer\",value:function(e){var t=new le(this.url.clone());return t.filter.push([e]),t}},{key:\"forAccount\",value:function(e){return this.forEndpoint(\"accounts\",e)}},{key:\"buying\",value:function(e){return e.isNative()?this.url.setQuery(\"buying_asset_type\",\"native\"):(this.url.setQuery(\"buying_asset_type\",e.getAssetType()),this.url.setQuery(\"buying_asset_code\",e.getCode()),this.url.setQuery(\"buying_asset_issuer\",e.getIssuer())),this}},{key:\"selling\",value:function(e){return e.isNative()?this.url.setQuery(\"selling_asset_type\",\"native\"):(this.url.setQuery(\"selling_asset_type\",e.getAssetType()),this.url.setQuery(\"selling_asset_code\",e.getCode()),this.url.setQuery(\"selling_asset_issuer\",e.getIssuer())),this}},{key:\"sponsor\",value:function(e){return this.url.setQuery(\"sponsor\",e),this}},{key:\"seller\",value:function(e){return this.url.setQuery(\"seller\",e),this}}])}(le);function Et(e){return Et=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Et(e)}function _t(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,kt(n.key),n)}}function kt(e){var t=function(e,t){if(\"object\"!=Et(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=Et(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==Et(t)?t:t+\"\"}function Tt(e,t,r){return t=xt(t),function(e,t){if(t&&(\"object\"==Et(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,Ot()?Reflect.construct(t,r||[],xt(e).constructor):t.apply(e,r))}function Ot(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Ot=function(){return!!e})()}function xt(e){return xt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},xt(e)}function At(e,t){return At=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},At(e,t)}var Pt=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(r=Tt(this,t,[e,\"operations\"])).url.segment(\"operations\"),r}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&At(e,t)}(t,e),function(e,t,r){return t&&_t(e.prototype,t),r&&_t(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"operation\",value:function(e){var t=new le(this.url.clone());return t.filter.push([e]),t}},{key:\"forAccount\",value:function(e){return this.forEndpoint(\"accounts\",e)}},{key:\"forClaimableBalance\",value:function(e){return this.forEndpoint(\"claimable_balances\",e)}},{key:\"forLedger\",value:function(e){return this.forEndpoint(\"ledgers\",e.toString())}},{key:\"forTransaction\",value:function(e){return this.forEndpoint(\"transactions\",e)}},{key:\"forLiquidityPool\",value:function(e){return this.forEndpoint(\"liquidity_pools\",e)}},{key:\"includeFailed\",value:function(e){return this.url.setQuery(\"include_failed\",e.toString()),this}}])}(le);function Rt(e){return Rt=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Rt(e)}function jt(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,Ct(n.key),n)}}function Ct(e){var t=function(e,t){if(\"object\"!=Rt(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=Rt(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==Rt(t)?t:t+\"\"}function It(e,t,r){return t=Bt(t),function(e,t){if(t&&(\"object\"==Rt(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,Lt()?Reflect.construct(t,r||[],Bt(e).constructor):t.apply(e,r))}function Lt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Lt=function(){return!!e})()}function Bt(e){return Bt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Bt(e)}function Nt(e,t){return Nt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Nt(e,t)}var Ut=function(e){function t(e,r,n){var o;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(o=It(this,t,[e])).url.segment(\"order_book\"),r.isNative()?o.url.setQuery(\"selling_asset_type\",\"native\"):(o.url.setQuery(\"selling_asset_type\",r.getAssetType()),o.url.setQuery(\"selling_asset_code\",r.getCode()),o.url.setQuery(\"selling_asset_issuer\",r.getIssuer())),n.isNative()?o.url.setQuery(\"buying_asset_type\",\"native\"):(o.url.setQuery(\"buying_asset_type\",n.getAssetType()),o.url.setQuery(\"buying_asset_code\",n.getCode()),o.url.setQuery(\"buying_asset_issuer\",n.getIssuer())),o}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&Nt(e,t)}(t,e),function(e,t,r){return t&&jt(e.prototype,t),r&&jt(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t)}(le);function Mt(e){return Mt=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Mt(e)}function Dt(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,Ft(n.key),n)}}function Ft(e){var t=function(e,t){if(\"object\"!=Mt(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=Mt(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==Mt(t)?t:t+\"\"}function Vt(e,t,r){return t=Kt(t),function(e,t){if(t&&(\"object\"==Mt(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,qt()?Reflect.construct(t,r||[],Kt(e).constructor):t.apply(e,r))}function qt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(qt=function(){return!!e})()}function Kt(e){return Kt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Kt(e)}function Ht(e,t){return Ht=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Ht(e,t)}var zt=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(r=Vt(this,t,[e,\"payments\"])).url.segment(\"payments\"),r}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&Ht(e,t)}(t,e),function(e,t,r){return t&&Dt(e.prototype,t),r&&Dt(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"forAccount\",value:function(e){return this.forEndpoint(\"accounts\",e)}},{key:\"forLedger\",value:function(e){return this.forEndpoint(\"ledgers\",e.toString())}},{key:\"forTransaction\",value:function(e){return this.forEndpoint(\"transactions\",e)}}])}(le);function Xt(e){return Xt=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Xt(e)}function Gt(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,Wt(n.key),n)}}function Wt(e){var t=function(e,t){if(\"object\"!=Xt(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=Xt(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==Xt(t)?t:t+\"\"}function $t(e,t,r){return t=Yt(t),function(e,t){if(t&&(\"object\"==Xt(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,Qt()?Reflect.construct(t,r||[],Yt(e).constructor):t.apply(e,r))}function Qt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Qt=function(){return!!e})()}function Yt(e){return Yt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Yt(e)}function Jt(e,t){return Jt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Jt(e,t)}var Zt=function(e){function t(e,r,n,o){var i;if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(i=$t(this,t,[e])).url.segment(\"paths/strict-receive\"),\"string\"==typeof r)i.url.setQuery(\"source_account\",r);else{var a=r.map((function(e){return e.isNative()?\"native\":\"\".concat(e.getCode(),\":\").concat(e.getIssuer())})).join(\",\");i.url.setQuery(\"source_assets\",a)}return i.url.setQuery(\"destination_amount\",o),n.isNative()?i.url.setQuery(\"destination_asset_type\",\"native\"):(i.url.setQuery(\"destination_asset_type\",n.getAssetType()),i.url.setQuery(\"destination_asset_code\",n.getCode()),i.url.setQuery(\"destination_asset_issuer\",n.getIssuer())),i}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&Jt(e,t)}(t,e),function(e,t,r){return t&&Gt(e.prototype,t),r&&Gt(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t)}(le);function er(e){return er=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},er(e)}function tr(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,rr(n.key),n)}}function rr(e){var t=function(e,t){if(\"object\"!=er(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=er(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==er(t)?t:t+\"\"}function nr(e,t,r){return t=ir(t),function(e,t){if(t&&(\"object\"==er(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,or()?Reflect.construct(t,r||[],ir(e).constructor):t.apply(e,r))}function or(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(or=function(){return!!e})()}function ir(e){return ir=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ir(e)}function ar(e,t){return ar=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ar(e,t)}var sr=function(e){function t(e,r,n,o){var i;if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(i=nr(this,t,[e])).url.segment(\"paths/strict-send\"),r.isNative()?i.url.setQuery(\"source_asset_type\",\"native\"):(i.url.setQuery(\"source_asset_type\",r.getAssetType()),i.url.setQuery(\"source_asset_code\",r.getCode()),i.url.setQuery(\"source_asset_issuer\",r.getIssuer())),i.url.setQuery(\"source_amount\",n),\"string\"==typeof o)i.url.setQuery(\"destination_account\",o);else{var a=o.map((function(e){return e.isNative()?\"native\":\"\".concat(e.getCode(),\":\").concat(e.getIssuer())})).join(\",\");i.url.setQuery(\"destination_assets\",a)}return i}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&ar(e,t)}(t,e),function(e,t,r){return t&&tr(e.prototype,t),r&&tr(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t)}(le);function ur(e){return ur=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},ur(e)}function cr(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,lr(n.key),n)}}function lr(e){var t=function(e,t){if(\"object\"!=ur(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=ur(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==ur(t)?t:t+\"\"}function fr(e,t,r){return t=dr(t),function(e,t){if(t&&(\"object\"==ur(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,pr()?Reflect.construct(t,r||[],dr(e).constructor):t.apply(e,r))}function pr(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(pr=function(){return!!e})()}function dr(e){return dr=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},dr(e)}function hr(e,t){return hr=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},hr(e,t)}var yr=[6e4,3e5,9e5,36e5,864e5,6048e5],mr=function(e){function t(e,r,n,o,i,a,s){var u;if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(u=fr(this,t,[e])).url.segment(\"trade_aggregations\"),r.isNative()?u.url.setQuery(\"base_asset_type\",\"native\"):(u.url.setQuery(\"base_asset_type\",r.getAssetType()),u.url.setQuery(\"base_asset_code\",r.getCode()),u.url.setQuery(\"base_asset_issuer\",r.getIssuer())),n.isNative()?u.url.setQuery(\"counter_asset_type\",\"native\"):(u.url.setQuery(\"counter_asset_type\",n.getAssetType()),u.url.setQuery(\"counter_asset_code\",n.getCode()),u.url.setQuery(\"counter_asset_issuer\",n.getIssuer())),\"number\"!=typeof o||\"number\"!=typeof i)throw new V.v7(\"Invalid time bounds\",[o,i]);if(u.url.setQuery(\"start_time\",o.toString()),u.url.setQuery(\"end_time\",i.toString()),!u.isValidResolution(a))throw new V.v7(\"Invalid resolution\",a);if(u.url.setQuery(\"resolution\",a.toString()),!u.isValidOffset(s,a))throw new V.v7(\"Invalid offset\",s);return u.url.setQuery(\"offset\",s.toString()),u}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&hr(e,t)}(t,e),function(e,t,r){return t&&cr(e.prototype,t),r&&cr(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"isValidResolution\",value:function(e){return yr.some((function(t){return t===e}))}},{key:\"isValidOffset\",value:function(e,t){var r=36e5;return!(e>t||e>=24*r||e%r!=0)}}])}(le);function vr(e){return vr=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},vr(e)}function gr(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,br(n.key),n)}}function br(e){var t=function(e,t){if(\"object\"!=vr(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=vr(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==vr(t)?t:t+\"\"}function wr(e,t,r){return t=Er(t),function(e,t){if(t&&(\"object\"==vr(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,Sr()?Reflect.construct(t,r||[],Er(e).constructor):t.apply(e,r))}function Sr(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Sr=function(){return!!e})()}function Er(e){return Er=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Er(e)}function _r(e,t){return _r=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},_r(e,t)}var kr=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(r=wr(this,t,[e,\"trades\"])).url.segment(\"trades\"),r}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&_r(e,t)}(t,e),function(e,t,r){return t&&gr(e.prototype,t),r&&gr(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"forAssetPair\",value:function(e,t){return e.isNative()?this.url.setQuery(\"base_asset_type\",\"native\"):(this.url.setQuery(\"base_asset_type\",e.getAssetType()),this.url.setQuery(\"base_asset_code\",e.getCode()),this.url.setQuery(\"base_asset_issuer\",e.getIssuer())),t.isNative()?this.url.setQuery(\"counter_asset_type\",\"native\"):(this.url.setQuery(\"counter_asset_type\",t.getAssetType()),this.url.setQuery(\"counter_asset_code\",t.getCode()),this.url.setQuery(\"counter_asset_issuer\",t.getIssuer())),this}},{key:\"forOffer\",value:function(e){return this.url.setQuery(\"offer_id\",e),this}},{key:\"forType\",value:function(e){return this.url.setQuery(\"trade_type\",e),this}},{key:\"forAccount\",value:function(e){return this.forEndpoint(\"accounts\",e)}},{key:\"forLiquidityPool\",value:function(e){return this.forEndpoint(\"liquidity_pools\",e)}}])}(le);function Tr(e){return Tr=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Tr(e)}function Or(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,xr(n.key),n)}}function xr(e){var t=function(e,t){if(\"object\"!=Tr(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=Tr(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==Tr(t)?t:t+\"\"}function Ar(e,t,r){return t=Rr(t),function(e,t){if(t&&(\"object\"==Tr(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,Pr()?Reflect.construct(t,r||[],Rr(e).constructor):t.apply(e,r))}function Pr(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Pr=function(){return!!e})()}function Rr(e){return Rr=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Rr(e)}function jr(e,t){return jr=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},jr(e,t)}var Cr=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(r=Ar(this,t,[e,\"transactions\"])).url.segment(\"transactions\"),r}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&jr(e,t)}(t,e),function(e,t,r){return t&&Or(e.prototype,t),r&&Or(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"transaction\",value:function(e){var t=new le(this.url.clone());return t.filter.push([e]),t}},{key:\"forAccount\",value:function(e){return this.forEndpoint(\"accounts\",e)}},{key:\"forClaimableBalance\",value:function(e){return this.forEndpoint(\"claimable_balances\",e)}},{key:\"forLedger\",value:function(e){return this.forEndpoint(\"ledgers\",e.toString())}},{key:\"forLiquidityPool\",value:function(e){return this.forEndpoint(\"liquidity_pools\",e)}},{key:\"includeFailed\",value:function(e){return this.url.setQuery(\"include_failed\",e.toString()),this}}])}(le);function Ir(e){return Ir=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Ir(e)}function Lr(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Br(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Lr(Object(r),!0).forEach((function(t){Nr(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Lr(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function Nr(e,t,r){return(t=Vr(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Ur(){Ur=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(e,t,r){e[t]=r.value},i=\"function\"==typeof Symbol?Symbol:{},a=i.iterator||\"@@iterator\",s=i.asyncIterator||\"@@asyncIterator\",u=i.toStringTag||\"@@toStringTag\";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},\"\")}catch(e){c=function(e,t,r){return e[t]=r}}function l(e,t,r,n){var i=t&&t.prototype instanceof v?t:v,a=Object.create(i.prototype),s=new R(n||[]);return o(a,\"_invoke\",{value:O(e,r,s)}),a}function f(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}t.wrap=l;var p=\"suspendedStart\",d=\"suspendedYield\",h=\"executing\",y=\"completed\",m={};function v(){}function g(){}function b(){}var w={};c(w,a,(function(){return this}));var S=Object.getPrototypeOf,E=S&&S(S(j([])));E&&E!==r&&n.call(E,a)&&(w=E);var _=b.prototype=v.prototype=Object.create(w);function k(e){[\"next\",\"throw\",\"return\"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function T(e,t){function r(o,i,a,s){var u=f(e[o],e,i);if(\"throw\"!==u.type){var c=u.arg,l=c.value;return l&&\"object\"==Ir(l)&&n.call(l,\"__await\")?t.resolve(l.__await).then((function(e){r(\"next\",e,a,s)}),(function(e){r(\"throw\",e,a,s)})):t.resolve(l).then((function(e){c.value=e,a(c)}),(function(e){return r(\"throw\",e,a,s)}))}s(u.arg)}var i;o(this,\"_invoke\",{value:function(e,n){function o(){return new t((function(t,o){r(e,n,t,o)}))}return i=i?i.then(o,o):o()}})}function O(t,r,n){var o=p;return function(i,a){if(o===h)throw Error(\"Generator is already running\");if(o===y){if(\"throw\"===i)throw a;return{value:e,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var u=x(s,n);if(u){if(u===m)continue;return u}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===p)throw o=y,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=h;var c=f(t,r,n);if(\"normal\"===c.type){if(o=n.done?y:d,c.arg===m)continue;return{value:c.arg,done:n.done}}\"throw\"===c.type&&(o=y,n.method=\"throw\",n.arg=c.arg)}}}function x(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,\"throw\"===n&&t.iterator.return&&(r.method=\"return\",r.arg=e,x(t,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),m;var i=f(o,t.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,m;var a=i.arg;return a?a.done?(r[t.resultName]=a.value,r.next=t.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=e),r.delegate=null,m):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,m)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function R(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(A,this),this.reset(!0)}function j(t){if(t||\"\"===t){var r=t[a];if(r)return r.call(t);if(\"function\"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,i=function r(){for(;++o<t.length;)if(n.call(t,o))return r.value=t[o],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(Ir(t)+\" is not iterable\")}return g.prototype=b,o(_,\"constructor\",{value:b,configurable:!0}),o(b,\"constructor\",{value:g,configurable:!0}),g.displayName=c(b,u,\"GeneratorFunction\"),t.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===g||\"GeneratorFunction\"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,c(e,u,\"GeneratorFunction\")),e.prototype=Object.create(_),e},t.awrap=function(e){return{__await:e}},k(T.prototype),c(T.prototype,s,(function(){return this})),t.AsyncIterator=T,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new T(l(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},k(_),c(_,u,\"Generator\"),c(_,a,(function(){return this})),c(_,\"toString\",(function(){return\"[object Generator]\"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=j,R.prototype={constructor:R,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=e,this.tryEntries.forEach(P),!t)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function o(n,o){return s.type=\"throw\",s.arg=t,r.next=n,o&&(r.method=\"next\",r.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if(\"root\"===a.tryLoc)return o(\"end\");if(a.tryLoc<=this.prev){var u=n.call(a,\"catchLoc\"),c=n.call(a,\"finallyLoc\");if(u&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw Error(\"try statement without catch or finally\");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var i=o;break}}i&&(\"break\"===e||\"continue\"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method=\"next\",this.next=i.finallyLoc,m):this.complete(a)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),P(r),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;P(r)}return o}}throw Error(\"illegal catch attempt\")},delegateYield:function(t,r,n){return this.delegate={iterator:j(t),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=e),m}},t}function Mr(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function Dr(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){Mr(i,n,o,a,s,\"next\",e)}function s(e){Mr(i,n,o,a,s,\"throw\",e)}a(void 0)}))}}function Fr(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,Vr(n.key),n)}}function Vr(e){var t=function(e,t){if(\"object\"!=Ir(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=Ir(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==Ir(t)?t:t+\"\"}function qr(e){return new N(e).div(1e7).toString()}var Kr,Hr,zr,Xr,Gr,Wr,$r,Qr,Yr=function(e,t,r){return t&&Fr(e.prototype,t),r&&Fr(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}((function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.serverURL=M()(t);var n=void 0===r.allowHttp?fe.T.isAllowHttp():r.allowHttp,o={};if(r.appName&&(o[\"X-App-Name\"]=r.appName),r.appVersion&&(o[\"X-App-Version\"]=r.appVersion),r.authToken&&(o[\"X-Auth-Token\"]=r.authToken),r.headers&&Object.assign(o,r.headers),Object.keys(o).length>0&&W.interceptors.request.use((function(e){return e.headers=e.headers||{},e.headers=Object.assign(e.headers,o),e})),\"https\"!==this.serverURL.protocol()&&!n)throw new Error(\"Cannot connect to insecure horizon server\")}),[{key:\"fetchTimebounds\",value:(Qr=Dr(Ur().mark((function e(t){var r,n,o=arguments;return Ur().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=o.length>1&&void 0!==o[1]&&o[1],!(n=$(this.serverURL.hostname()))){e.next=4;break}return e.abrupt(\"return\",{minTime:0,maxTime:n+t});case 4:if(!r){e.next=6;break}return e.abrupt(\"return\",{minTime:0,maxTime:Math.floor((new Date).getTime()/1e3)+t});case 6:return e.next=8,W.get(M()(this.serverURL).toString());case 8:return e.abrupt(\"return\",this.fetchTimebounds(t,!0));case 9:case\"end\":return e.stop()}}),e,this)}))),function(e){return Qr.apply(this,arguments)})},{key:\"fetchBaseFee\",value:($r=Dr(Ur().mark((function e(){var t;return Ur().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.feeStats();case 2:return t=e.sent,e.abrupt(\"return\",parseInt(t.last_ledger_base_fee,10)||100);case 4:case\"end\":return e.stop()}}),e,this)}))),function(){return $r.apply(this,arguments)})},{key:\"feeStats\",value:(Wr=Dr(Ur().mark((function e(){var t;return Ur().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(t=new le(M()(this.serverURL))).filter.push([\"fee_stats\"]),e.abrupt(\"return\",t.call());case 3:case\"end\":return e.stop()}}),e,this)}))),function(){return Wr.apply(this,arguments)})},{key:\"root\",value:(Gr=Dr(Ur().mark((function e(){var t;return Ur().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=new le(M()(this.serverURL)),e.abrupt(\"return\",t.call());case 2:case\"end\":return e.stop()}}),e,this)}))),function(){return Gr.apply(this,arguments)})},{key:\"submitTransaction\",value:(Xr=Dr(Ur().mark((function e(t){var r,n=arguments;return Ur().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if((n.length>1&&void 0!==n[1]?n[1]:{skipMemoRequiredCheck:!1}).skipMemoRequiredCheck){e.next=4;break}return e.next=4,this.checkMemoRequired(t);case 4:return r=encodeURIComponent(t.toEnvelope().toXDR().toString(\"base64\")),e.abrupt(\"return\",W.post(M()(this.serverURL).segment(\"transactions\").toString(),\"tx=\".concat(r),{timeout:6e4}).then((function(e){if(!e.data.result_xdr)return e.data;var t,r,n=s.xdr.TransactionResult.fromXDR(e.data.result_xdr,\"base64\").result().value();return n.length&&(t=n.map((function(e,t){if(\"manageBuyOffer\"!==e.value().switch().name&&\"manageSellOffer\"!==e.value().switch().name)return null;r=!0;var n,o=new N(0),i=new N(0),a=e.value().value().success(),u=a.offersClaimed().map((function(e){var t=e.value(),r=\"\";switch(e.switch()){case s.xdr.ClaimAtomType.claimAtomTypeV0():r=s.StrKey.encodeEd25519PublicKey(t.sellerEd25519());break;case s.xdr.ClaimAtomType.claimAtomTypeOrderBook():r=s.StrKey.encodeEd25519PublicKey(t.sellerId().ed25519());break;default:throw new Error(\"Invalid offer result type: \".concat(e.switch()))}var n=new N(t.amountBought().toString()),a=new N(t.amountSold().toString());o=o.plus(a),i=i.plus(n);var u=s.Asset.fromOperation(t.assetSold()),c=s.Asset.fromOperation(t.assetBought()),l={type:u.getAssetType(),assetCode:u.getCode(),issuer:u.getIssuer()},f={type:c.getAssetType(),assetCode:c.getCode(),issuer:c.getIssuer()};return{sellerId:r,offerId:t.offerId().toString(),assetSold:l,amountSold:qr(a),assetBought:f,amountBought:qr(n)}})),c=a.offer().switch().name;if(\"function\"==typeof a.offer().value&&a.offer().value()){var l=a.offer().value();n={offerId:l.offerId().toString(),selling:{},buying:{},amount:qr(l.amount().toString()),price:{n:l.price().n(),d:l.price().d()}};var f=s.Asset.fromOperation(l.selling());n.selling={type:f.getAssetType(),assetCode:f.getCode(),issuer:f.getIssuer()};var p=s.Asset.fromOperation(l.buying());n.buying={type:p.getAssetType(),assetCode:p.getCode(),issuer:p.getIssuer()}}return{offersClaimed:u,effect:c,operationIndex:t,currentOffer:n,amountBought:qr(o),amountSold:qr(i),isFullyOpen:!u.length&&\"manageOfferDeleted\"!==c,wasPartiallyFilled:!!u.length&&\"manageOfferDeleted\"!==c,wasImmediatelyFilled:!!u.length&&\"manageOfferDeleted\"===c,wasImmediatelyDeleted:!u.length&&\"manageOfferDeleted\"===c}})).filter((function(e){return!!e}))),Br(Br({},e.data),{},{offerResults:r?t:void 0})})).catch((function(e){return e instanceof Error?Promise.reject(e):Promise.reject(new V.nS(\"Transaction submission failed. Server responded: \".concat(e.status,\" \").concat(e.statusText),e.data))})));case 6:case\"end\":return e.stop()}}),e,this)}))),function(e){return Xr.apply(this,arguments)})},{key:\"submitAsyncTransaction\",value:(zr=Dr(Ur().mark((function e(t){var r,n=arguments;return Ur().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if((n.length>1&&void 0!==n[1]?n[1]:{skipMemoRequiredCheck:!1}).skipMemoRequiredCheck){e.next=4;break}return e.next=4,this.checkMemoRequired(t);case 4:return r=encodeURIComponent(t.toEnvelope().toXDR().toString(\"base64\")),e.abrupt(\"return\",W.post(M()(this.serverURL).segment(\"transactions_async\").toString(),\"tx=\".concat(r)).then((function(e){return e.data})).catch((function(e){return e instanceof Error?Promise.reject(e):Promise.reject(new V.nS(\"Transaction submission failed. Server responded: \".concat(e.status,\" \").concat(e.statusText),e.data))})));case 6:case\"end\":return e.stop()}}),e,this)}))),function(e){return zr.apply(this,arguments)})},{key:\"accounts\",value:function(){return new be(M()(this.serverURL))}},{key:\"claimableBalances\",value:function(){return new Be(M()(this.serverURL))}},{key:\"ledgers\",value:function(){return new it(M()(this.serverURL))}},{key:\"transactions\",value:function(){return new Cr(M()(this.serverURL))}},{key:\"offers\",value:function(){return new St(M()(this.serverURL))}},{key:\"orderbook\",value:function(e,t){return new Ut(M()(this.serverURL),e,t)}},{key:\"trades\",value:function(){return new kr(M()(this.serverURL))}},{key:\"operations\",value:function(){return new Pt(M()(this.serverURL))}},{key:\"liquidityPools\",value:function(){return new dt(M()(this.serverURL))}},{key:\"strictReceivePaths\",value:function(e,t,r){return new Zt(M()(this.serverURL),e,t,r)}},{key:\"strictSendPaths\",value:function(e,t,r){return new sr(M()(this.serverURL),e,t,r)}},{key:\"payments\",value:function(){return new zt(M()(this.serverURL))}},{key:\"effects\",value:function(){return new Ke(M()(this.serverURL))}},{key:\"friendbot\",value:function(e){return new Ye(M()(this.serverURL),e)}},{key:\"assets\",value:function(){return new xe(M()(this.serverURL))}},{key:\"loadAccount\",value:(Hr=Dr(Ur().mark((function e(t){var r;return Ur().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.accounts().accountId(t).call();case 2:return r=e.sent,e.abrupt(\"return\",new m(r));case 4:case\"end\":return e.stop()}}),e,this)}))),function(e){return Hr.apply(this,arguments)})},{key:\"tradeAggregation\",value:function(e,t,r,n,o,i){return new mr(M()(this.serverURL),e,t,r,n,o,i)}},{key:\"checkMemoRequired\",value:(Kr=Dr(Ur().mark((function e(t){var r,n,o,i;return Ur().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t instanceof s.FeeBumpTransaction&&(t=t.innerTransaction),\"none\"===t.memo.type){e.next=3;break}return e.abrupt(\"return\");case 3:r=new Set,n=0;case 5:if(!(n<t.operations.length)){e.next=36;break}o=t.operations[n],e.t0=o.type,e.next=\"payment\"===e.t0||\"pathPaymentStrictReceive\"===e.t0||\"pathPaymentStrictSend\"===e.t0||\"accountMerge\"===e.t0?10:11;break;case 10:return e.abrupt(\"break\",12);case 11:return e.abrupt(\"continue\",33);case 12:if(i=o.destination,!r.has(i)){e.next=15;break}return e.abrupt(\"continue\",33);case 15:if(r.add(i),!i.startsWith(\"M\")){e.next=18;break}return e.abrupt(\"continue\",33);case 18:return e.prev=18,e.next=21,this.loadAccount(i);case 21:if(\"MQ==\"!==e.sent.data_attr[\"config.memo_required\"]){e.next=24;break}throw new V.Cu(\"account requires memo\",i,n);case 24:e.next=33;break;case 26:if(e.prev=26,e.t1=e.catch(18),!(e.t1 instanceof V.Cu)){e.next=30;break}throw e.t1;case 30:if(e.t1 instanceof V.m_){e.next=32;break}throw e.t1;case 32:return e.abrupt(\"continue\",33);case 33:n+=1,e.next=5;break;case 36:case\"end\":return e.stop()}}),e,this,[[18,26]])}))),function(e){return Kr.apply(this,arguments)})}]);const Jr=(e=r.hmd(e)).exports},6121:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{axiosClient:()=>Tt,create:()=>Ot});var n={};function o(e,t){return function(){return e.apply(t,arguments)}}r.r(n),r.d(n,{hasBrowserEnv:()=>he,hasStandardBrowserEnv:()=>me,hasStandardBrowserWebWorkerEnv:()=>ve,navigator:()=>ye,origin:()=>ge});const{toString:i}=Object.prototype,{getPrototypeOf:a}=Object,s=(u=Object.create(null),e=>{const t=i.call(e);return u[t]||(u[t]=t.slice(8,-1).toLowerCase())});var u;const c=e=>(e=e.toLowerCase(),t=>s(t)===e),l=e=>t=>typeof t===e,{isArray:f}=Array,p=l(\"undefined\");const d=c(\"ArrayBuffer\");const h=l(\"string\"),y=l(\"function\"),m=l(\"number\"),v=e=>null!==e&&\"object\"==typeof e,g=e=>{if(\"object\"!==s(e))return!1;const t=a(e);return!(null!==t&&t!==Object.prototype&&null!==Object.getPrototypeOf(t)||Symbol.toStringTag in e||Symbol.iterator in e)},b=c(\"Date\"),w=c(\"File\"),S=c(\"Blob\"),E=c(\"FileList\"),_=c(\"URLSearchParams\"),[k,T,O,x]=[\"ReadableStream\",\"Request\",\"Response\",\"Headers\"].map(c);function A(e,t,{allOwnKeys:r=!1}={}){if(null==e)return;let n,o;if(\"object\"!=typeof e&&(e=[e]),f(e))for(n=0,o=e.length;n<o;n++)t.call(null,e[n],n,e);else{const o=r?Object.getOwnPropertyNames(e):Object.keys(e),i=o.length;let a;for(n=0;n<i;n++)a=o[n],t.call(null,e[a],a,e)}}function P(e,t){t=t.toLowerCase();const r=Object.keys(e);let n,o=r.length;for(;o-- >0;)if(n=r[o],t===n.toLowerCase())return n;return null}const R=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:__webpack_require__.g,j=e=>!p(e)&&e!==R;const C=(I=\"undefined\"!=typeof Uint8Array&&a(Uint8Array),e=>I&&e instanceof I);var I;const L=c(\"HTMLFormElement\"),B=(({hasOwnProperty:e})=>(t,r)=>e.call(t,r))(Object.prototype),N=c(\"RegExp\"),U=(e,t)=>{const r=Object.getOwnPropertyDescriptors(e),n={};A(r,((r,o)=>{let i;!1!==(i=t(r,o,e))&&(n[o]=i||r)})),Object.defineProperties(e,n)},M=\"abcdefghijklmnopqrstuvwxyz\",D=\"0123456789\",F={DIGIT:D,ALPHA:M,ALPHA_DIGIT:M+M.toUpperCase()+D};const V=c(\"AsyncFunction\"),q=(K=\"function\"==typeof setImmediate,H=y(R.postMessage),K?setImmediate:H?(z=`axios@${Math.random()}`,X=[],R.addEventListener(\"message\",(({source:e,data:t})=>{e===R&&t===z&&X.length&&X.shift()()}),!1),e=>{X.push(e),R.postMessage(z,\"*\")}):e=>setTimeout(e));var K,H,z,X;const G=\"undefined\"!=typeof queueMicrotask?queueMicrotask.bind(R):\"undefined\"!=typeof process&&process.nextTick||q,W={isArray:f,isArrayBuffer:d,isBuffer:function(e){return null!==e&&!p(e)&&null!==e.constructor&&!p(e.constructor)&&y(e.constructor.isBuffer)&&e.constructor.isBuffer(e)},isFormData:e=>{let t;return e&&(\"function\"==typeof FormData&&e instanceof FormData||y(e.append)&&(\"formdata\"===(t=s(e))||\"object\"===t&&y(e.toString)&&\"[object FormData]\"===e.toString()))},isArrayBufferView:function(e){let t;return t=\"undefined\"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&d(e.buffer),t},isString:h,isNumber:m,isBoolean:e=>!0===e||!1===e,isObject:v,isPlainObject:g,isReadableStream:k,isRequest:T,isResponse:O,isHeaders:x,isUndefined:p,isDate:b,isFile:w,isBlob:S,isRegExp:N,isFunction:y,isStream:e=>v(e)&&y(e.pipe),isURLSearchParams:_,isTypedArray:C,isFileList:E,forEach:A,merge:function e(){const{caseless:t}=j(this)&&this||{},r={},n=(n,o)=>{const i=t&&P(r,o)||o;g(r[i])&&g(n)?r[i]=e(r[i],n):g(n)?r[i]=e({},n):f(n)?r[i]=n.slice():r[i]=n};for(let e=0,t=arguments.length;e<t;e++)arguments[e]&&A(arguments[e],n);return r},extend:(e,t,r,{allOwnKeys:n}={})=>(A(t,((t,n)=>{r&&y(t)?e[n]=o(t,r):e[n]=t}),{allOwnKeys:n}),e),trim:e=>e.trim?e.trim():e.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\"\"),stripBOM:e=>(65279===e.charCodeAt(0)&&(e=e.slice(1)),e),inherits:(e,t,r,n)=>{e.prototype=Object.create(t.prototype,n),e.prototype.constructor=e,Object.defineProperty(e,\"super\",{value:t.prototype}),r&&Object.assign(e.prototype,r)},toFlatObject:(e,t,r,n)=>{let o,i,s;const u={};if(t=t||{},null==e)return t;do{for(o=Object.getOwnPropertyNames(e),i=o.length;i-- >0;)s=o[i],n&&!n(s,e,t)||u[s]||(t[s]=e[s],u[s]=!0);e=!1!==r&&a(e)}while(e&&(!r||r(e,t))&&e!==Object.prototype);return t},kindOf:s,kindOfTest:c,endsWith:(e,t,r)=>{e=String(e),(void 0===r||r>e.length)&&(r=e.length),r-=t.length;const n=e.indexOf(t,r);return-1!==n&&n===r},toArray:e=>{if(!e)return null;if(f(e))return e;let t=e.length;if(!m(t))return null;const r=new Array(t);for(;t-- >0;)r[t]=e[t];return r},forEachEntry:(e,t)=>{const r=(e&&e[Symbol.iterator]).call(e);let n;for(;(n=r.next())&&!n.done;){const r=n.value;t.call(e,r[0],r[1])}},matchAll:(e,t)=>{let r;const n=[];for(;null!==(r=e.exec(t));)n.push(r);return n},isHTMLForm:L,hasOwnProperty:B,hasOwnProp:B,reduceDescriptors:U,freezeMethods:e=>{U(e,((t,r)=>{if(y(e)&&-1!==[\"arguments\",\"caller\",\"callee\"].indexOf(r))return!1;const n=e[r];y(n)&&(t.enumerable=!1,\"writable\"in t?t.writable=!1:t.set||(t.set=()=>{throw Error(\"Can not rewrite read-only method '\"+r+\"'\")}))}))},toObjectSet:(e,t)=>{const r={},n=e=>{e.forEach((e=>{r[e]=!0}))};return f(e)?n(e):n(String(e).split(t)),r},toCamelCase:e=>e.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,(function(e,t,r){return t.toUpperCase()+r})),noop:()=>{},toFiniteNumber:(e,t)=>null!=e&&Number.isFinite(e=+e)?e:t,findKey:P,global:R,isContextDefined:j,ALPHABET:F,generateString:(e=16,t=F.ALPHA_DIGIT)=>{let r=\"\";const{length:n}=t;for(;e--;)r+=t[Math.random()*n|0];return r},isSpecCompliantForm:function(e){return!!(e&&y(e.append)&&\"FormData\"===e[Symbol.toStringTag]&&e[Symbol.iterator])},toJSONObject:e=>{const t=new Array(10),r=(e,n)=>{if(v(e)){if(t.indexOf(e)>=0)return;if(!(\"toJSON\"in e)){t[n]=e;const o=f(e)?[]:{};return A(e,((e,t)=>{const i=r(e,n+1);!p(i)&&(o[t]=i)})),t[n]=void 0,o}}return e};return r(e,0)},isAsyncFn:V,isThenable:e=>e&&(v(e)||y(e))&&y(e.then)&&y(e.catch),setImmediate:q,asap:G};function $(e,t,r,n,o){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=e,this.name=\"AxiosError\",t&&(this.code=t),r&&(this.config=r),n&&(this.request=n),o&&(this.response=o,this.status=o.status?o.status:null)}W.inherits($,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:W.toJSONObject(this.config),code:this.code,status:this.status}}});const Q=$.prototype,Y={};[\"ERR_BAD_OPTION_VALUE\",\"ERR_BAD_OPTION\",\"ECONNABORTED\",\"ETIMEDOUT\",\"ERR_NETWORK\",\"ERR_FR_TOO_MANY_REDIRECTS\",\"ERR_DEPRECATED\",\"ERR_BAD_RESPONSE\",\"ERR_BAD_REQUEST\",\"ERR_CANCELED\",\"ERR_NOT_SUPPORT\",\"ERR_INVALID_URL\"].forEach((e=>{Y[e]={value:e}})),Object.defineProperties($,Y),Object.defineProperty(Q,\"isAxiosError\",{value:!0}),$.from=(e,t,r,n,o,i)=>{const a=Object.create(Q);return W.toFlatObject(e,a,(function(e){return e!==Error.prototype}),(e=>\"isAxiosError\"!==e)),$.call(a,e.message,t,r,n,o),a.cause=e,a.name=e.name,i&&Object.assign(a,i),a};const J=$;var Z=r(8287).Buffer;function ee(e){return W.isPlainObject(e)||W.isArray(e)}function te(e){return W.endsWith(e,\"[]\")?e.slice(0,-2):e}function re(e,t,r){return e?e.concat(t).map((function(e,t){return e=te(e),!r&&t?\"[\"+e+\"]\":e})).join(r?\".\":\"\"):t}const ne=W.toFlatObject(W,{},null,(function(e){return/^is[A-Z]/.test(e)}));const oe=function(e,t,r){if(!W.isObject(e))throw new TypeError(\"target must be an object\");t=t||new FormData;const n=(r=W.toFlatObject(r,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(e,t){return!W.isUndefined(t[e])}))).metaTokens,o=r.visitor||c,i=r.dots,a=r.indexes,s=(r.Blob||\"undefined\"!=typeof Blob&&Blob)&&W.isSpecCompliantForm(t);if(!W.isFunction(o))throw new TypeError(\"visitor must be a function\");function u(e){if(null===e)return\"\";if(W.isDate(e))return e.toISOString();if(!s&&W.isBlob(e))throw new J(\"Blob is not supported. Use a Buffer instead.\");return W.isArrayBuffer(e)||W.isTypedArray(e)?s&&\"function\"==typeof Blob?new Blob([e]):Z.from(e):e}function c(e,r,o){let s=e;if(e&&!o&&\"object\"==typeof e)if(W.endsWith(r,\"{}\"))r=n?r:r.slice(0,-2),e=JSON.stringify(e);else if(W.isArray(e)&&function(e){return W.isArray(e)&&!e.some(ee)}(e)||(W.isFileList(e)||W.endsWith(r,\"[]\"))&&(s=W.toArray(e)))return r=te(r),s.forEach((function(e,n){!W.isUndefined(e)&&null!==e&&t.append(!0===a?re([r],n,i):null===a?r:r+\"[]\",u(e))})),!1;return!!ee(e)||(t.append(re(o,r,i),u(e)),!1)}const l=[],f=Object.assign(ne,{defaultVisitor:c,convertValue:u,isVisitable:ee});if(!W.isObject(e))throw new TypeError(\"data must be an object\");return function e(r,n){if(!W.isUndefined(r)){if(-1!==l.indexOf(r))throw Error(\"Circular reference detected in \"+n.join(\".\"));l.push(r),W.forEach(r,(function(r,i){!0===(!(W.isUndefined(r)||null===r)&&o.call(t,r,W.isString(i)?i.trim():i,n,f))&&e(r,n?n.concat(i):[i])})),l.pop()}}(e),t};function ie(e){const t={\"!\":\"%21\",\"'\":\"%27\",\"(\":\"%28\",\")\":\"%29\",\"~\":\"%7E\",\"%20\":\"+\",\"%00\":\"\\0\"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,(function(e){return t[e]}))}function ae(e,t){this._pairs=[],e&&oe(e,this,t)}const se=ae.prototype;se.append=function(e,t){this._pairs.push([e,t])},se.toString=function(e){const t=e?function(t){return e.call(this,t,ie)}:ie;return this._pairs.map((function(e){return t(e[0])+\"=\"+t(e[1])}),\"\").join(\"&\")};const ue=ae;function ce(e){return encodeURIComponent(e).replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%20/g,\"+\").replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\")}function le(e,t,r){if(!t)return e;const n=r&&r.encode||ce;W.isFunction(r)&&(r={serialize:r});const o=r&&r.serialize;let i;if(i=o?o(t,r):W.isURLSearchParams(t)?t.toString():new ue(t,r).toString(n),i){const t=e.indexOf(\"#\");-1!==t&&(e=e.slice(0,t)),e+=(-1===e.indexOf(\"?\")?\"?\":\"&\")+i}return e}const fe=class{constructor(){this.handlers=[]}use(e,t,r){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!r&&r.synchronous,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){W.forEach(this.handlers,(function(t){null!==t&&e(t)}))}},pe={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},de={isBrowser:!0,classes:{URLSearchParams:\"undefined\"!=typeof URLSearchParams?URLSearchParams:ue,FormData:\"undefined\"!=typeof FormData?FormData:null,Blob:\"undefined\"!=typeof Blob?Blob:null},protocols:[\"http\",\"https\",\"file\",\"blob\",\"url\",\"data\"]},he=\"undefined\"!=typeof window&&\"undefined\"!=typeof document,ye=\"object\"==typeof navigator&&navigator||void 0,me=he&&(!ye||[\"ReactNative\",\"NativeScript\",\"NS\"].indexOf(ye.product)<0),ve=\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&\"function\"==typeof self.importScripts,ge=he&&window.location.href||\"http://localhost\",be={...n,...de};const we=function(e){function t(e,r,n,o){let i=e[o++];if(\"__proto__\"===i)return!0;const a=Number.isFinite(+i),s=o>=e.length;if(i=!i&&W.isArray(n)?n.length:i,s)return W.hasOwnProp(n,i)?n[i]=[n[i],r]:n[i]=r,!a;n[i]&&W.isObject(n[i])||(n[i]=[]);return t(e,r,n[i],o)&&W.isArray(n[i])&&(n[i]=function(e){const t={},r=Object.keys(e);let n;const o=r.length;let i;for(n=0;n<o;n++)i=r[n],t[i]=e[i];return t}(n[i])),!a}if(W.isFormData(e)&&W.isFunction(e.entries)){const r={};return W.forEachEntry(e,((e,n)=>{t(function(e){return W.matchAll(/\\w+|\\[(\\w*)]/g,e).map((e=>\"[]\"===e[0]?\"\":e[1]||e[0]))}(e),n,r,0)})),r}return null};const Se={transitional:pe,adapter:[\"xhr\",\"http\",\"fetch\"],transformRequest:[function(e,t){const r=t.getContentType()||\"\",n=r.indexOf(\"application/json\")>-1,o=W.isObject(e);o&&W.isHTMLForm(e)&&(e=new FormData(e));if(W.isFormData(e))return n?JSON.stringify(we(e)):e;if(W.isArrayBuffer(e)||W.isBuffer(e)||W.isStream(e)||W.isFile(e)||W.isBlob(e)||W.isReadableStream(e))return e;if(W.isArrayBufferView(e))return e.buffer;if(W.isURLSearchParams(e))return t.setContentType(\"application/x-www-form-urlencoded;charset=utf-8\",!1),e.toString();let i;if(o){if(r.indexOf(\"application/x-www-form-urlencoded\")>-1)return function(e,t){return oe(e,new be.classes.URLSearchParams,Object.assign({visitor:function(e,t,r,n){return be.isNode&&W.isBuffer(e)?(this.append(t,e.toString(\"base64\")),!1):n.defaultVisitor.apply(this,arguments)}},t))}(e,this.formSerializer).toString();if((i=W.isFileList(e))||r.indexOf(\"multipart/form-data\")>-1){const t=this.env&&this.env.FormData;return oe(i?{\"files[]\":e}:e,t&&new t,this.formSerializer)}}return o||n?(t.setContentType(\"application/json\",!1),function(e,t,r){if(W.isString(e))try{return(t||JSON.parse)(e),W.trim(e)}catch(e){if(\"SyntaxError\"!==e.name)throw e}return(r||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){const t=this.transitional||Se.transitional,r=t&&t.forcedJSONParsing,n=\"json\"===this.responseType;if(W.isResponse(e)||W.isReadableStream(e))return e;if(e&&W.isString(e)&&(r&&!this.responseType||n)){const r=!(t&&t.silentJSONParsing)&&n;try{return JSON.parse(e)}catch(e){if(r){if(\"SyntaxError\"===e.name)throw J.from(e,J.ERR_BAD_RESPONSE,this,null,this.response);throw e}}}return e}],timeout:0,xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",maxContentLength:-1,maxBodyLength:-1,env:{FormData:be.classes.FormData,Blob:be.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":void 0}}};W.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\"],(e=>{Se.headers[e]={}}));const Ee=Se,_e=W.toObjectSet([\"age\",\"authorization\",\"content-length\",\"content-type\",\"etag\",\"expires\",\"from\",\"host\",\"if-modified-since\",\"if-unmodified-since\",\"last-modified\",\"location\",\"max-forwards\",\"proxy-authorization\",\"referer\",\"retry-after\",\"user-agent\"]),ke=Symbol(\"internals\");function Te(e){return e&&String(e).trim().toLowerCase()}function Oe(e){return!1===e||null==e?e:W.isArray(e)?e.map(Oe):String(e)}function xe(e,t,r,n,o){return W.isFunction(n)?n.call(this,t,r):(o&&(t=r),W.isString(t)?W.isString(n)?-1!==t.indexOf(n):W.isRegExp(n)?n.test(t):void 0:void 0)}class Ae{constructor(e){e&&this.set(e)}set(e,t,r){const n=this;function o(e,t,r){const o=Te(t);if(!o)throw new Error(\"header name must be a non-empty string\");const i=W.findKey(n,o);(!i||void 0===n[i]||!0===r||void 0===r&&!1!==n[i])&&(n[i||t]=Oe(e))}const i=(e,t)=>W.forEach(e,((e,r)=>o(e,r,t)));if(W.isPlainObject(e)||e instanceof this.constructor)i(e,t);else if(W.isString(e)&&(e=e.trim())&&!/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim()))i((e=>{const t={};let r,n,o;return e&&e.split(\"\\n\").forEach((function(e){o=e.indexOf(\":\"),r=e.substring(0,o).trim().toLowerCase(),n=e.substring(o+1).trim(),!r||t[r]&&_e[r]||(\"set-cookie\"===r?t[r]?t[r].push(n):t[r]=[n]:t[r]=t[r]?t[r]+\", \"+n:n)})),t})(e),t);else if(W.isHeaders(e))for(const[t,n]of e.entries())o(n,t,r);else null!=e&&o(t,e,r);return this}get(e,t){if(e=Te(e)){const r=W.findKey(this,e);if(r){const e=this[r];if(!t)return e;if(!0===t)return function(e){const t=Object.create(null),r=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;let n;for(;n=r.exec(e);)t[n[1]]=n[2];return t}(e);if(W.isFunction(t))return t.call(this,e,r);if(W.isRegExp(t))return t.exec(e);throw new TypeError(\"parser must be boolean|regexp|function\")}}}has(e,t){if(e=Te(e)){const r=W.findKey(this,e);return!(!r||void 0===this[r]||t&&!xe(0,this[r],r,t))}return!1}delete(e,t){const r=this;let n=!1;function o(e){if(e=Te(e)){const o=W.findKey(r,e);!o||t&&!xe(0,r[o],o,t)||(delete r[o],n=!0)}}return W.isArray(e)?e.forEach(o):o(e),n}clear(e){const t=Object.keys(this);let r=t.length,n=!1;for(;r--;){const o=t[r];e&&!xe(0,this[o],o,e,!0)||(delete this[o],n=!0)}return n}normalize(e){const t=this,r={};return W.forEach(this,((n,o)=>{const i=W.findKey(r,o);if(i)return t[i]=Oe(n),void delete t[o];const a=e?function(e){return e.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,((e,t,r)=>t.toUpperCase()+r))}(o):String(o).trim();a!==o&&delete t[o],t[a]=Oe(n),r[a]=!0})),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){const t=Object.create(null);return W.forEach(this,((r,n)=>{null!=r&&!1!==r&&(t[n]=e&&W.isArray(r)?r.join(\", \"):r)})),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((([e,t])=>e+\": \"+t)).join(\"\\n\")}get[Symbol.toStringTag](){return\"AxiosHeaders\"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){const r=new this(e);return t.forEach((e=>r.set(e))),r}static accessor(e){const t=(this[ke]=this[ke]={accessors:{}}).accessors,r=this.prototype;function n(e){const n=Te(e);t[n]||(!function(e,t){const r=W.toCamelCase(\" \"+t);[\"get\",\"set\",\"has\"].forEach((n=>{Object.defineProperty(e,n+r,{value:function(e,r,o){return this[n].call(this,t,e,r,o)},configurable:!0})}))}(r,e),t[n]=!0)}return W.isArray(e)?e.forEach(n):n(e),this}}Ae.accessor([\"Content-Type\",\"Content-Length\",\"Accept\",\"Accept-Encoding\",\"User-Agent\",\"Authorization\"]),W.reduceDescriptors(Ae.prototype,(({value:e},t)=>{let r=t[0].toUpperCase()+t.slice(1);return{get:()=>e,set(e){this[r]=e}}})),W.freezeMethods(Ae);const Pe=Ae;function Re(e,t){const r=this||Ee,n=t||r,o=Pe.from(n.headers);let i=n.data;return W.forEach(e,(function(e){i=e.call(r,i,o.normalize(),t?t.status:void 0)})),o.normalize(),i}function je(e){return!(!e||!e.__CANCEL__)}function Ce(e,t,r){J.call(this,null==e?\"canceled\":e,J.ERR_CANCELED,t,r),this.name=\"CanceledError\"}W.inherits(Ce,J,{__CANCEL__:!0});const Ie=Ce;function Le(e,t,r){const n=r.config.validateStatus;r.status&&n&&!n(r.status)?t(new J(\"Request failed with status code \"+r.status,[J.ERR_BAD_REQUEST,J.ERR_BAD_RESPONSE][Math.floor(r.status/100)-4],r.config,r.request,r)):e(r)}const Be=function(e,t){e=e||10;const r=new Array(e),n=new Array(e);let o,i=0,a=0;return t=void 0!==t?t:1e3,function(s){const u=Date.now(),c=n[a];o||(o=u),r[i]=s,n[i]=u;let l=a,f=0;for(;l!==i;)f+=r[l++],l%=e;if(i=(i+1)%e,i===a&&(a=(a+1)%e),u-o<t)return;const p=c&&u-c;return p?Math.round(1e3*f/p):void 0}};const Ne=function(e,t){let r,n,o=0,i=1e3/t;const a=(t,i=Date.now())=>{o=i,r=null,n&&(clearTimeout(n),n=null),e.apply(null,t)};return[(...e)=>{const t=Date.now(),s=t-o;s>=i?a(e,t):(r=e,n||(n=setTimeout((()=>{n=null,a(r)}),i-s)))},()=>r&&a(r)]},Ue=(e,t,r=3)=>{let n=0;const o=Be(50,250);return Ne((r=>{const i=r.loaded,a=r.lengthComputable?r.total:void 0,s=i-n,u=o(s);n=i;e({loaded:i,total:a,progress:a?i/a:void 0,bytes:s,rate:u||void 0,estimated:u&&a&&i<=a?(a-i)/u:void 0,event:r,lengthComputable:null!=a,[t?\"download\":\"upload\"]:!0})}),r)},Me=(e,t)=>{const r=null!=e;return[n=>t[0]({lengthComputable:r,total:e,loaded:n}),t[1]]},De=e=>(...t)=>W.asap((()=>e(...t))),Fe=be.hasStandardBrowserEnv?((e,t)=>r=>(r=new URL(r,be.origin),e.protocol===r.protocol&&e.host===r.host&&(t||e.port===r.port)))(new URL(be.origin),be.navigator&&/(msie|trident)/i.test(be.navigator.userAgent)):()=>!0,Ve=be.hasStandardBrowserEnv?{write(e,t,r,n,o,i){const a=[e+\"=\"+encodeURIComponent(t)];W.isNumber(r)&&a.push(\"expires=\"+new Date(r).toGMTString()),W.isString(n)&&a.push(\"path=\"+n),W.isString(o)&&a.push(\"domain=\"+o),!0===i&&a.push(\"secure\"),document.cookie=a.join(\"; \")},read(e){const t=document.cookie.match(new RegExp(\"(^|;\\\\s*)(\"+e+\")=([^;]*)\"));return t?decodeURIComponent(t[3]):null},remove(e){this.write(e,\"\",Date.now()-864e5)}}:{write(){},read:()=>null,remove(){}};function qe(e,t){return e&&!/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(t)?function(e,t){return t?e.replace(/\\/?\\/$/,\"\")+\"/\"+t.replace(/^\\/+/,\"\"):e}(e,t):t}const Ke=e=>e instanceof Pe?{...e}:e;function He(e,t){t=t||{};const r={};function n(e,t,r,n){return W.isPlainObject(e)&&W.isPlainObject(t)?W.merge.call({caseless:n},e,t):W.isPlainObject(t)?W.merge({},t):W.isArray(t)?t.slice():t}function o(e,t,r,o){return W.isUndefined(t)?W.isUndefined(e)?void 0:n(void 0,e,0,o):n(e,t,0,o)}function i(e,t){if(!W.isUndefined(t))return n(void 0,t)}function a(e,t){return W.isUndefined(t)?W.isUndefined(e)?void 0:n(void 0,e):n(void 0,t)}function s(r,o,i){return i in t?n(r,o):i in e?n(void 0,r):void 0}const u={url:i,method:i,data:i,baseURL:a,transformRequest:a,transformResponse:a,paramsSerializer:a,timeout:a,timeoutMessage:a,withCredentials:a,withXSRFToken:a,adapter:a,responseType:a,xsrfCookieName:a,xsrfHeaderName:a,onUploadProgress:a,onDownloadProgress:a,decompress:a,maxContentLength:a,maxBodyLength:a,beforeRedirect:a,transport:a,httpAgent:a,httpsAgent:a,cancelToken:a,socketPath:a,responseEncoding:a,validateStatus:s,headers:(e,t,r)=>o(Ke(e),Ke(t),0,!0)};return W.forEach(Object.keys(Object.assign({},e,t)),(function(n){const i=u[n]||o,a=i(e[n],t[n],n);W.isUndefined(a)&&i!==s||(r[n]=a)})),r}const ze=e=>{const t=He({},e);let r,{data:n,withXSRFToken:o,xsrfHeaderName:i,xsrfCookieName:a,headers:s,auth:u}=t;if(t.headers=s=Pe.from(s),t.url=le(qe(t.baseURL,t.url),e.params,e.paramsSerializer),u&&s.set(\"Authorization\",\"Basic \"+btoa((u.username||\"\")+\":\"+(u.password?unescape(encodeURIComponent(u.password)):\"\"))),W.isFormData(n))if(be.hasStandardBrowserEnv||be.hasStandardBrowserWebWorkerEnv)s.setContentType(void 0);else if(!1!==(r=s.getContentType())){const[e,...t]=r?r.split(\";\").map((e=>e.trim())).filter(Boolean):[];s.setContentType([e||\"multipart/form-data\",...t].join(\"; \"))}if(be.hasStandardBrowserEnv&&(o&&W.isFunction(o)&&(o=o(t)),o||!1!==o&&Fe(t.url))){const e=i&&a&&Ve.read(a);e&&s.set(i,e)}return t},Xe=\"undefined\"!=typeof XMLHttpRequest&&function(e){return new Promise((function(t,r){const n=ze(e);let o=n.data;const i=Pe.from(n.headers).normalize();let a,s,u,c,l,{responseType:f,onUploadProgress:p,onDownloadProgress:d}=n;function h(){c&&c(),l&&l(),n.cancelToken&&n.cancelToken.unsubscribe(a),n.signal&&n.signal.removeEventListener(\"abort\",a)}let y=new XMLHttpRequest;function m(){if(!y)return;const n=Pe.from(\"getAllResponseHeaders\"in y&&y.getAllResponseHeaders());Le((function(e){t(e),h()}),(function(e){r(e),h()}),{data:f&&\"text\"!==f&&\"json\"!==f?y.response:y.responseText,status:y.status,statusText:y.statusText,headers:n,config:e,request:y}),y=null}y.open(n.method.toUpperCase(),n.url,!0),y.timeout=n.timeout,\"onloadend\"in y?y.onloadend=m:y.onreadystatechange=function(){y&&4===y.readyState&&(0!==y.status||y.responseURL&&0===y.responseURL.indexOf(\"file:\"))&&setTimeout(m)},y.onabort=function(){y&&(r(new J(\"Request aborted\",J.ECONNABORTED,e,y)),y=null)},y.onerror=function(){r(new J(\"Network Error\",J.ERR_NETWORK,e,y)),y=null},y.ontimeout=function(){let t=n.timeout?\"timeout of \"+n.timeout+\"ms exceeded\":\"timeout exceeded\";const o=n.transitional||pe;n.timeoutErrorMessage&&(t=n.timeoutErrorMessage),r(new J(t,o.clarifyTimeoutError?J.ETIMEDOUT:J.ECONNABORTED,e,y)),y=null},void 0===o&&i.setContentType(null),\"setRequestHeader\"in y&&W.forEach(i.toJSON(),(function(e,t){y.setRequestHeader(t,e)})),W.isUndefined(n.withCredentials)||(y.withCredentials=!!n.withCredentials),f&&\"json\"!==f&&(y.responseType=n.responseType),d&&([u,l]=Ue(d,!0),y.addEventListener(\"progress\",u)),p&&y.upload&&([s,c]=Ue(p),y.upload.addEventListener(\"progress\",s),y.upload.addEventListener(\"loadend\",c)),(n.cancelToken||n.signal)&&(a=t=>{y&&(r(!t||t.type?new Ie(null,e,y):t),y.abort(),y=null)},n.cancelToken&&n.cancelToken.subscribe(a),n.signal&&(n.signal.aborted?a():n.signal.addEventListener(\"abort\",a)));const v=function(e){const t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(e);return t&&t[1]||\"\"}(n.url);v&&-1===be.protocols.indexOf(v)?r(new J(\"Unsupported protocol \"+v+\":\",J.ERR_BAD_REQUEST,e)):y.send(o||null)}))},Ge=(e,t)=>{const{length:r}=e=e?e.filter(Boolean):[];if(t||r){let r,n=new AbortController;const o=function(e){if(!r){r=!0,a();const t=e instanceof Error?e:this.reason;n.abort(t instanceof J?t:new Ie(t instanceof Error?t.message:t))}};let i=t&&setTimeout((()=>{i=null,o(new J(`timeout ${t} of ms exceeded`,J.ETIMEDOUT))}),t);const a=()=>{e&&(i&&clearTimeout(i),i=null,e.forEach((e=>{e.unsubscribe?e.unsubscribe(o):e.removeEventListener(\"abort\",o)})),e=null)};e.forEach((e=>e.addEventListener(\"abort\",o)));const{signal:s}=n;return s.unsubscribe=()=>W.asap(a),s}},We=function*(e,t){let r=e.byteLength;if(!t||r<t)return void(yield e);let n,o=0;for(;o<r;)n=o+t,yield e.slice(o,n),o=n},$e=async function*(e){if(e[Symbol.asyncIterator])return void(yield*e);const t=e.getReader();try{for(;;){const{done:e,value:r}=await t.read();if(e)break;yield r}}finally{await t.cancel()}},Qe=(e,t,r,n)=>{const o=async function*(e,t){for await(const r of $e(e))yield*We(r,t)}(e,t);let i,a=0,s=e=>{i||(i=!0,n&&n(e))};return new ReadableStream({async pull(e){try{const{done:t,value:n}=await o.next();if(t)return s(),void e.close();let i=n.byteLength;if(r){let e=a+=i;r(e)}e.enqueue(new Uint8Array(n))}catch(e){throw s(e),e}},cancel:e=>(s(e),o.return())},{highWaterMark:2})},Ye=\"function\"==typeof fetch&&\"function\"==typeof Request&&\"function\"==typeof Response,Je=Ye&&\"function\"==typeof ReadableStream,Ze=Ye&&(\"function\"==typeof TextEncoder?(et=new TextEncoder,e=>et.encode(e)):async e=>new Uint8Array(await new Response(e).arrayBuffer()));var et;const tt=(e,...t)=>{try{return!!e(...t)}catch(e){return!1}},rt=Je&&tt((()=>{let e=!1;const t=new Request(be.origin,{body:new ReadableStream,method:\"POST\",get duplex(){return e=!0,\"half\"}}).headers.has(\"Content-Type\");return e&&!t})),nt=Je&&tt((()=>W.isReadableStream(new Response(\"\").body))),ot={stream:nt&&(e=>e.body)};var it;Ye&&(it=new Response,[\"text\",\"arrayBuffer\",\"blob\",\"formData\",\"stream\"].forEach((e=>{!ot[e]&&(ot[e]=W.isFunction(it[e])?t=>t[e]():(t,r)=>{throw new J(`Response type '${e}' is not supported`,J.ERR_NOT_SUPPORT,r)})})));const at=async(e,t)=>{const r=W.toFiniteNumber(e.getContentLength());return null==r?(async e=>{if(null==e)return 0;if(W.isBlob(e))return e.size;if(W.isSpecCompliantForm(e)){const t=new Request(be.origin,{method:\"POST\",body:e});return(await t.arrayBuffer()).byteLength}return W.isArrayBufferView(e)||W.isArrayBuffer(e)?e.byteLength:(W.isURLSearchParams(e)&&(e+=\"\"),W.isString(e)?(await Ze(e)).byteLength:void 0)})(t):r},st={http:null,xhr:Xe,fetch:Ye&&(async e=>{let{url:t,method:r,data:n,signal:o,cancelToken:i,timeout:a,onDownloadProgress:s,onUploadProgress:u,responseType:c,headers:l,withCredentials:f=\"same-origin\",fetchOptions:p}=ze(e);c=c?(c+\"\").toLowerCase():\"text\";let d,h=Ge([o,i&&i.toAbortSignal()],a);const y=h&&h.unsubscribe&&(()=>{h.unsubscribe()});let m;try{if(u&&rt&&\"get\"!==r&&\"head\"!==r&&0!==(m=await at(l,n))){let e,r=new Request(t,{method:\"POST\",body:n,duplex:\"half\"});if(W.isFormData(n)&&(e=r.headers.get(\"content-type\"))&&l.setContentType(e),r.body){const[e,t]=Me(m,Ue(De(u)));n=Qe(r.body,65536,e,t)}}W.isString(f)||(f=f?\"include\":\"omit\");const o=\"credentials\"in Request.prototype;d=new Request(t,{...p,signal:h,method:r.toUpperCase(),headers:l.normalize().toJSON(),body:n,duplex:\"half\",credentials:o?f:void 0});let i=await fetch(d);const a=nt&&(\"stream\"===c||\"response\"===c);if(nt&&(s||a&&y)){const e={};[\"status\",\"statusText\",\"headers\"].forEach((t=>{e[t]=i[t]}));const t=W.toFiniteNumber(i.headers.get(\"content-length\")),[r,n]=s&&Me(t,Ue(De(s),!0))||[];i=new Response(Qe(i.body,65536,r,(()=>{n&&n(),y&&y()})),e)}c=c||\"text\";let v=await ot[W.findKey(ot,c)||\"text\"](i,e);return!a&&y&&y(),await new Promise(((t,r)=>{Le(t,r,{data:v,headers:Pe.from(i.headers),status:i.status,statusText:i.statusText,config:e,request:d})}))}catch(t){if(y&&y(),t&&\"TypeError\"===t.name&&/fetch/i.test(t.message))throw Object.assign(new J(\"Network Error\",J.ERR_NETWORK,e,d),{cause:t.cause||t});throw J.from(t,t&&t.code,e,d)}})};W.forEach(st,((e,t)=>{if(e){try{Object.defineProperty(e,\"name\",{value:t})}catch(e){}Object.defineProperty(e,\"adapterName\",{value:t})}}));const ut=e=>`- ${e}`,ct=e=>W.isFunction(e)||null===e||!1===e,lt=e=>{e=W.isArray(e)?e:[e];const{length:t}=e;let r,n;const o={};for(let i=0;i<t;i++){let t;if(r=e[i],n=r,!ct(r)&&(n=st[(t=String(r)).toLowerCase()],void 0===n))throw new J(`Unknown adapter '${t}'`);if(n)break;o[t||\"#\"+i]=n}if(!n){const e=Object.entries(o).map((([e,t])=>`adapter ${e} `+(!1===t?\"is not supported by the environment\":\"is not available in the build\")));let r=t?e.length>1?\"since :\\n\"+e.map(ut).join(\"\\n\"):\" \"+ut(e[0]):\"as no adapter specified\";throw new J(\"There is no suitable adapter to dispatch the request \"+r,\"ERR_NOT_SUPPORT\")}return n};function ft(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new Ie(null,e)}function pt(e){ft(e),e.headers=Pe.from(e.headers),e.data=Re.call(e,e.transformRequest),-1!==[\"post\",\"put\",\"patch\"].indexOf(e.method)&&e.headers.setContentType(\"application/x-www-form-urlencoded\",!1);return lt(e.adapter||Ee.adapter)(e).then((function(t){return ft(e),t.data=Re.call(e,e.transformResponse,t),t.headers=Pe.from(t.headers),t}),(function(t){return je(t)||(ft(e),t&&t.response&&(t.response.data=Re.call(e,e.transformResponse,t.response),t.response.headers=Pe.from(t.response.headers))),Promise.reject(t)}))}const dt=\"1.7.9\",ht={};[\"object\",\"boolean\",\"number\",\"function\",\"string\",\"symbol\"].forEach(((e,t)=>{ht[e]=function(r){return typeof r===e||\"a\"+(t<1?\"n \":\" \")+e}}));const yt={};ht.transitional=function(e,t,r){function n(e,t){return\"[Axios v1.7.9] Transitional option '\"+e+\"'\"+t+(r?\". \"+r:\"\")}return(r,o,i)=>{if(!1===e)throw new J(n(o,\" has been removed\"+(t?\" in \"+t:\"\")),J.ERR_DEPRECATED);return t&&!yt[o]&&(yt[o]=!0,console.warn(n(o,\" has been deprecated since v\"+t+\" and will be removed in the near future\"))),!e||e(r,o,i)}},ht.spelling=function(e){return(t,r)=>(console.warn(`${r} is likely a misspelling of ${e}`),!0)};const mt={assertOptions:function(e,t,r){if(\"object\"!=typeof e)throw new J(\"options must be an object\",J.ERR_BAD_OPTION_VALUE);const n=Object.keys(e);let o=n.length;for(;o-- >0;){const i=n[o],a=t[i];if(a){const t=e[i],r=void 0===t||a(t,i,e);if(!0!==r)throw new J(\"option \"+i+\" must be \"+r,J.ERR_BAD_OPTION_VALUE)}else if(!0!==r)throw new J(\"Unknown option \"+i,J.ERR_BAD_OPTION)}},validators:ht},vt=mt.validators;class gt{constructor(e){this.defaults=e,this.interceptors={request:new fe,response:new fe}}async request(e,t){try{return await this._request(e,t)}catch(e){if(e instanceof Error){let t={};Error.captureStackTrace?Error.captureStackTrace(t):t=new Error;const r=t.stack?t.stack.replace(/^.+\\n/,\"\"):\"\";try{e.stack?r&&!String(e.stack).endsWith(r.replace(/^.+\\n.+\\n/,\"\"))&&(e.stack+=\"\\n\"+r):e.stack=r}catch(e){}}throw e}}_request(e,t){\"string\"==typeof e?(t=t||{}).url=e:t=e||{},t=He(this.defaults,t);const{transitional:r,paramsSerializer:n,headers:o}=t;void 0!==r&&mt.assertOptions(r,{silentJSONParsing:vt.transitional(vt.boolean),forcedJSONParsing:vt.transitional(vt.boolean),clarifyTimeoutError:vt.transitional(vt.boolean)},!1),null!=n&&(W.isFunction(n)?t.paramsSerializer={serialize:n}:mt.assertOptions(n,{encode:vt.function,serialize:vt.function},!0)),mt.assertOptions(t,{baseUrl:vt.spelling(\"baseURL\"),withXsrfToken:vt.spelling(\"withXSRFToken\")},!0),t.method=(t.method||this.defaults.method||\"get\").toLowerCase();let i=o&&W.merge(o.common,o[t.method]);o&&W.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\",\"common\"],(e=>{delete o[e]})),t.headers=Pe.concat(i,o);const a=[];let s=!0;this.interceptors.request.forEach((function(e){\"function\"==typeof e.runWhen&&!1===e.runWhen(t)||(s=s&&e.synchronous,a.unshift(e.fulfilled,e.rejected))}));const u=[];let c;this.interceptors.response.forEach((function(e){u.push(e.fulfilled,e.rejected)}));let l,f=0;if(!s){const e=[pt.bind(this),void 0];for(e.unshift.apply(e,a),e.push.apply(e,u),l=e.length,c=Promise.resolve(t);f<l;)c=c.then(e[f++],e[f++]);return c}l=a.length;let p=t;for(f=0;f<l;){const e=a[f++],t=a[f++];try{p=e(p)}catch(e){t.call(this,e);break}}try{c=pt.call(this,p)}catch(e){return Promise.reject(e)}for(f=0,l=u.length;f<l;)c=c.then(u[f++],u[f++]);return c}getUri(e){return le(qe((e=He(this.defaults,e)).baseURL,e.url),e.params,e.paramsSerializer)}}W.forEach([\"delete\",\"get\",\"head\",\"options\"],(function(e){gt.prototype[e]=function(t,r){return this.request(He(r||{},{method:e,url:t,data:(r||{}).data}))}})),W.forEach([\"post\",\"put\",\"patch\"],(function(e){function t(t){return function(r,n,o){return this.request(He(o||{},{method:e,headers:t?{\"Content-Type\":\"multipart/form-data\"}:{},url:r,data:n}))}}gt.prototype[e]=t(),gt.prototype[e+\"Form\"]=t(!0)}));const bt=gt;class wt{constructor(e){if(\"function\"!=typeof e)throw new TypeError(\"executor must be a function.\");let t;this.promise=new Promise((function(e){t=e}));const r=this;this.promise.then((e=>{if(!r._listeners)return;let t=r._listeners.length;for(;t-- >0;)r._listeners[t](e);r._listeners=null})),this.promise.then=e=>{let t;const n=new Promise((e=>{r.subscribe(e),t=e})).then(e);return n.cancel=function(){r.unsubscribe(t)},n},e((function(e,n,o){r.reason||(r.reason=new Ie(e,n,o),t(r.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;const t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}toAbortSignal(){const e=new AbortController,t=t=>{e.abort(t)};return this.subscribe(t),e.signal.unsubscribe=()=>this.unsubscribe(t),e.signal}static source(){let e;return{token:new wt((function(t){e=t})),cancel:e}}}const St=wt;const Et={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Et).forEach((([e,t])=>{Et[t]=e}));const _t=Et;const kt=function e(t){const r=new bt(t),n=o(bt.prototype.request,r);return W.extend(n,bt.prototype,r,{allOwnKeys:!0}),W.extend(n,r,null,{allOwnKeys:!0}),n.create=function(r){return e(He(t,r))},n}(Ee);kt.Axios=bt,kt.CanceledError=Ie,kt.CancelToken=St,kt.isCancel=je,kt.VERSION=dt,kt.toFormData=oe,kt.AxiosError=J,kt.Cancel=kt.CanceledError,kt.all=function(e){return Promise.all(e)},kt.spread=function(e){return function(t){return e.apply(null,t)}},kt.isAxiosError=function(e){return W.isObject(e)&&!0===e.isAxiosError},kt.mergeConfig=He,kt.AxiosHeaders=Pe,kt.formToJSON=e=>we(W.isHTMLForm(e)?new FormData(e):e),kt.getAdapter=lt,kt.HttpStatusCode=_t,kt.default=kt;var Tt=kt,Ot=kt.create},9983:(e,t,r)=>{\"use strict\";function n(e){return n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,i(n.key),n)}}function i(e){var t=function(e,t){if(\"object\"!=n(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,t||\"default\");if(\"object\"!=n(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==n(t)?t:t+\"\"}r.d(t,{vt:()=>l,ok:()=>c});a=function e(t){var r,n=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.promise=new Promise((function(e){r=e})),t((function(e){n.reason=e,r()}))},(s=[{key:\"throwIfRequested\",value:function(){if(this.reason)throw new Error(this.reason)}}])&&o(a.prototype,s),u&&o(a,u),Object.defineProperty(a,\"prototype\",{writable:!1});var a,s,u,c,l,f=r(6121);c=f.axiosClient,l=f.create},4356:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{AccountRequiresMemoError:()=>n.Cu,BadRequestError:()=>n.v7,BadResponseError:()=>n.nS,Config:()=>o.T,Federation:()=>s,Friendbot:()=>c,Horizon:()=>l,NetworkError:()=>n.Dr,NotFoundError:()=>n.m_,StellarToml:()=>a,Utils:()=>i.A,WebAuth:()=>u,contract:()=>p,default:()=>y,rpc:()=>f});var n=r(5976),o=r(8732),i=r(3121),a=r(3898),s=r(7600),u=r(5479),c=r(8242),l=r(8733),f=r(3496),p=r(6299),d=r(356),h={};for(const e in d)[\"default\",\"Config\",\"Utils\",\"StellarToml\",\"Federation\",\"WebAuth\",\"Friendbot\",\"Horizon\",\"rpc\",\"contract\",\"AccountRequiresMemoError\",\"BadRequestError\",\"BadResponseError\",\"NetworkError\",\"NotFoundError\"].indexOf(e)<0&&(h[e]=()=>d[e]);r.d(t,h);const y=(e=r.hmd(e)).exports;void 0===r.g.__USE_AXIOS__&&(r.g.__USE_AXIOS__=!0),void 0===r.g.__USE_EVENTSOURCE__&&(r.g.__USE_EVENTSOURCE__=!1)},4076:(e,t,r)=>{\"use strict\";var n;r.d(t,{j:()=>n}),function(e){var t=function(e){return e.SUCCESS=\"SUCCESS\",e.NOT_FOUND=\"NOT_FOUND\",e.FAILED=\"FAILED\",e}({});function r(e){return\"transactionData\"in e}e.GetTransactionStatus=t,e.isSimulationError=function(e){return\"error\"in e},e.isSimulationSuccess=r,e.isSimulationRestore=function(e){return r(e)&&\"restorePreamble\"in e&&!!e.restorePreamble.transactionData},e.isSimulationRaw=function(e){return!e._parsed}}(n||(n={}))},3496:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{Api:()=>n.j,AxiosClient:()=>s,BasicSleepStrategy:()=>x,Durability:()=>O,LinearSleepStrategy:()=>A,Server:()=>oe,assembleTransaction:()=>d.X,default:()=>ie,parseRawEvents:()=>h.fG,parseRawSimulation:()=>h.jr});var n=r(4076),o=r(4193),i=r.n(o),a=r(356);const s=(0,r(9983).vt)({headers:{\"X-Client-Name\":\"js-soroban-client\",\"X-Client-Version\":\"13.1.0\"}});function u(e){return u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},u(e)}function c(){c=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(e,t,r){e[t]=r.value},i=\"function\"==typeof Symbol?Symbol:{},a=i.iterator||\"@@iterator\",s=i.asyncIterator||\"@@asyncIterator\",l=i.toStringTag||\"@@toStringTag\";function f(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{f({},\"\")}catch(e){f=function(e,t,r){return e[t]=r}}function p(e,t,r,n){var i=t&&t.prototype instanceof b?t:b,a=Object.create(i.prototype),s=new C(n||[]);return o(a,\"_invoke\",{value:A(e,r,s)}),a}function d(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}t.wrap=p;var h=\"suspendedStart\",y=\"suspendedYield\",m=\"executing\",v=\"completed\",g={};function b(){}function w(){}function S(){}var E={};f(E,a,(function(){return this}));var _=Object.getPrototypeOf,k=_&&_(_(I([])));k&&k!==r&&n.call(k,a)&&(E=k);var T=S.prototype=b.prototype=Object.create(E);function O(e){[\"next\",\"throw\",\"return\"].forEach((function(t){f(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){function r(o,i,a,s){var c=d(e[o],e,i);if(\"throw\"!==c.type){var l=c.arg,f=l.value;return f&&\"object\"==u(f)&&n.call(f,\"__await\")?t.resolve(f.__await).then((function(e){r(\"next\",e,a,s)}),(function(e){r(\"throw\",e,a,s)})):t.resolve(f).then((function(e){l.value=e,a(l)}),(function(e){return r(\"throw\",e,a,s)}))}s(c.arg)}var i;o(this,\"_invoke\",{value:function(e,n){function o(){return new t((function(t,o){r(e,n,t,o)}))}return i=i?i.then(o,o):o()}})}function A(t,r,n){var o=h;return function(i,a){if(o===m)throw Error(\"Generator is already running\");if(o===v){if(\"throw\"===i)throw a;return{value:e,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var u=P(s,n);if(u){if(u===g)continue;return u}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===h)throw o=v,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=m;var c=d(t,r,n);if(\"normal\"===c.type){if(o=n.done?v:y,c.arg===g)continue;return{value:c.arg,done:n.done}}\"throw\"===c.type&&(o=v,n.method=\"throw\",n.arg=c.arg)}}}function P(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,\"throw\"===n&&t.iterator.return&&(r.method=\"return\",r.arg=e,P(t,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),g;var i=d(o,t.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,g;var a=i.arg;return a?a.done?(r[t.resultName]=a.value,r.next=t.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=e),r.delegate=null,g):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,g)}function R(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function j(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(R,this),this.reset(!0)}function I(t){if(t||\"\"===t){var r=t[a];if(r)return r.call(t);if(\"function\"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,i=function r(){for(;++o<t.length;)if(n.call(t,o))return r.value=t[o],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(u(t)+\" is not iterable\")}return w.prototype=S,o(T,\"constructor\",{value:S,configurable:!0}),o(S,\"constructor\",{value:w,configurable:!0}),w.displayName=f(S,l,\"GeneratorFunction\"),t.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===w||\"GeneratorFunction\"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,S):(e.__proto__=S,f(e,l,\"GeneratorFunction\")),e.prototype=Object.create(T),e},t.awrap=function(e){return{__await:e}},O(x.prototype),f(x.prototype,s,(function(){return this})),t.AsyncIterator=x,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new x(p(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},O(T),f(T,l,\"Generator\"),f(T,a,(function(){return this})),f(T,\"toString\",(function(){return\"[object Generator]\"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=I,C.prototype={constructor:C,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=e,this.tryEntries.forEach(j),!t)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function o(n,o){return s.type=\"throw\",s.arg=t,r.next=n,o&&(r.method=\"next\",r.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if(\"root\"===a.tryLoc)return o(\"end\");if(a.tryLoc<=this.prev){var u=n.call(a,\"catchLoc\"),c=n.call(a,\"finallyLoc\");if(u&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw Error(\"try statement without catch or finally\");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var i=o;break}}i&&(\"break\"===e||\"continue\"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method=\"next\",this.next=i.finallyLoc,g):this.complete(a)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),j(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;j(r)}return o}}throw Error(\"illegal catch attempt\")},delegateYield:function(t,r,n){return this.delegate={iterator:I(t),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=e),g}},t}function l(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function f(e,t){return p.apply(this,arguments)}function p(){var e;return e=c().mark((function e(t,r){var n,o,i,a=arguments;return c().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=a.length>2&&void 0!==a[2]?a[2]:null,e.next=3,s.post(t,{jsonrpc:\"2.0\",id:1,method:r,params:n});case 3:if(o=e.sent,u=o.data,c=\"error\",!u.hasOwnProperty(c)){e.next=8;break}throw o.data.error;case 8:return e.abrupt(\"return\",null===(i=o.data)||void 0===i?void 0:i.result);case 9:case\"end\":return e.stop()}var u,c}),e)})),p=function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){l(i,n,o,a,s,\"next\",e)}function s(e){l(i,n,o,a,s,\"throw\",e)}a(void 0)}))},p.apply(this,arguments)}var d=r(8680),h=r(784),y=r(3121),m=r(8287).Buffer;function v(e){return v=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},v(e)}function g(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function b(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?g(Object(r),!0).forEach((function(t){w(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):g(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function w(e,t,r){return(t=T(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function S(){S=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(e,t,r){e[t]=r.value},i=\"function\"==typeof Symbol?Symbol:{},a=i.iterator||\"@@iterator\",s=i.asyncIterator||\"@@asyncIterator\",u=i.toStringTag||\"@@toStringTag\";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},\"\")}catch(e){c=function(e,t,r){return e[t]=r}}function l(e,t,r,n){var i=t&&t.prototype instanceof g?t:g,a=Object.create(i.prototype),s=new C(n||[]);return o(a,\"_invoke\",{value:A(e,r,s)}),a}function f(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}t.wrap=l;var p=\"suspendedStart\",d=\"suspendedYield\",h=\"executing\",y=\"completed\",m={};function g(){}function b(){}function w(){}var E={};c(E,a,(function(){return this}));var _=Object.getPrototypeOf,k=_&&_(_(I([])));k&&k!==r&&n.call(k,a)&&(E=k);var T=w.prototype=g.prototype=Object.create(E);function O(e){[\"next\",\"throw\",\"return\"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){function r(o,i,a,s){var u=f(e[o],e,i);if(\"throw\"!==u.type){var c=u.arg,l=c.value;return l&&\"object\"==v(l)&&n.call(l,\"__await\")?t.resolve(l.__await).then((function(e){r(\"next\",e,a,s)}),(function(e){r(\"throw\",e,a,s)})):t.resolve(l).then((function(e){c.value=e,a(c)}),(function(e){return r(\"throw\",e,a,s)}))}s(u.arg)}var i;o(this,\"_invoke\",{value:function(e,n){function o(){return new t((function(t,o){r(e,n,t,o)}))}return i=i?i.then(o,o):o()}})}function A(t,r,n){var o=p;return function(i,a){if(o===h)throw Error(\"Generator is already running\");if(o===y){if(\"throw\"===i)throw a;return{value:e,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var u=P(s,n);if(u){if(u===m)continue;return u}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===p)throw o=y,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=h;var c=f(t,r,n);if(\"normal\"===c.type){if(o=n.done?y:d,c.arg===m)continue;return{value:c.arg,done:n.done}}\"throw\"===c.type&&(o=y,n.method=\"throw\",n.arg=c.arg)}}}function P(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,\"throw\"===n&&t.iterator.return&&(r.method=\"return\",r.arg=e,P(t,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),m;var i=f(o,t.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,m;var a=i.arg;return a?a.done?(r[t.resultName]=a.value,r.next=t.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=e),r.delegate=null,m):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,m)}function R(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function j(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(R,this),this.reset(!0)}function I(t){if(t||\"\"===t){var r=t[a];if(r)return r.call(t);if(\"function\"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,i=function r(){for(;++o<t.length;)if(n.call(t,o))return r.value=t[o],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(v(t)+\" is not iterable\")}return b.prototype=w,o(T,\"constructor\",{value:w,configurable:!0}),o(w,\"constructor\",{value:b,configurable:!0}),b.displayName=c(w,u,\"GeneratorFunction\"),t.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===b||\"GeneratorFunction\"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,w):(e.__proto__=w,c(e,u,\"GeneratorFunction\")),e.prototype=Object.create(T),e},t.awrap=function(e){return{__await:e}},O(x.prototype),c(x.prototype,s,(function(){return this})),t.AsyncIterator=x,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new x(l(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},O(T),c(T,u,\"Generator\"),c(T,a,(function(){return this})),c(T,\"toString\",(function(){return\"[object Generator]\"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=I,C.prototype={constructor:C,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=e,this.tryEntries.forEach(j),!t)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function o(n,o){return s.type=\"throw\",s.arg=t,r.next=n,o&&(r.method=\"next\",r.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if(\"root\"===a.tryLoc)return o(\"end\");if(a.tryLoc<=this.prev){var u=n.call(a,\"catchLoc\"),c=n.call(a,\"finallyLoc\");if(u&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw Error(\"try statement without catch or finally\");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var i=o;break}}i&&(\"break\"===e||\"continue\"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method=\"next\",this.next=i.finallyLoc,m):this.complete(a)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),j(r),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;j(r)}return o}}throw Error(\"illegal catch attempt\")},delegateYield:function(t,r,n){return this.delegate={iterator:I(t),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=e),m}},t}function E(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function _(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){E(i,n,o,a,s,\"next\",e)}function s(e){E(i,n,o,a,s,\"throw\",e)}a(void 0)}))}}function k(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,T(n.key),n)}}function T(e){var t=function(e,t){if(\"object\"!=v(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=v(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==v(t)?t:t+\"\"}var O=function(e){return e.Temporary=\"temporary\",e.Persistent=\"persistent\",e}({}),x=function(e){return 1e3},A=function(e){return 1e3*e};function P(e){var t,r=[];switch(e.switch()){case 0:r=e.operations();break;case 1:case 2:case 3:r=e.value().operations();break;default:throw new Error(\"Unexpected transaction meta switch value\")}var n=null===(t=r.flatMap((function(e){return e.changes()})).find((function(e){return e.switch()===a.xdr.LedgerEntryChangeType.ledgerEntryCreated()&&e.created().data().switch()===a.xdr.LedgerEntryType.account()})))||void 0===t||null===(t=t.created())||void 0===t||null===(t=t.data())||void 0===t||null===(t=t.account())||void 0===t||null===(t=t.seqNum())||void 0===t?void 0:t.toString();if(n)return n;throw new Error(\"No account created in transaction\")}var R,j,C,I,L,B,N,U,M,D,F,V,q,K,H,z,X,G,W,$,Q,Y,J,Z,ee,te,re,ne,oe=(R=function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.serverURL=i()(t),r.headers&&0!==Object.keys(r.headers).length&&s.interceptors.request.use((function(e){return e.headers=Object.assign(e.headers,r.headers),e})),\"https\"!==this.serverURL.protocol()&&!r.allowHttp)throw new Error(\"Cannot connect to insecure Soroban RPC server if `allowHttp` isn't set\")},j=[{key:\"getAccount\",value:(ne=_(S().mark((function e(t){var r,n,o;return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=a.xdr.LedgerKey.account(new a.xdr.LedgerKeyAccount({accountId:a.Keypair.fromPublicKey(t).xdrPublicKey()})),e.next=3,this.getLedgerEntries(r);case 3:if(0!==(n=e.sent).entries.length){e.next=6;break}return e.abrupt(\"return\",Promise.reject({code:404,message:\"Account not found: \".concat(t)}));case 6:return o=n.entries[0].val.account(),e.abrupt(\"return\",new a.Account(t,o.seqNum().toString()));case 8:case\"end\":return e.stop()}}),e,this)}))),function(e){return ne.apply(this,arguments)})},{key:\"getHealth\",value:(re=_(S().mark((function e(){return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",f(this.serverURL.toString(),\"getHealth\"));case 1:case\"end\":return e.stop()}}),e,this)}))),function(){return re.apply(this,arguments)})},{key:\"getContractData\",value:(te=_(S().mark((function e(t,r){var n,o,i,s,u=arguments;return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=u.length>2&&void 0!==u[2]?u[2]:O.Persistent,\"string\"!=typeof t){e.next=5;break}o=new a.Contract(t).address().toScAddress(),e.next=14;break;case 5:if(!(t instanceof a.Address)){e.next=9;break}o=t.toScAddress(),e.next=14;break;case 9:if(!(t instanceof a.Contract)){e.next=13;break}o=t.address().toScAddress(),e.next=14;break;case 13:throw new TypeError(\"unknown contract type: \".concat(t));case 14:e.t0=n,e.next=e.t0===O.Temporary?17:e.t0===O.Persistent?19:21;break;case 17:return i=a.xdr.ContractDataDurability.temporary(),e.abrupt(\"break\",22);case 19:return i=a.xdr.ContractDataDurability.persistent(),e.abrupt(\"break\",22);case 21:throw new TypeError(\"invalid durability: \".concat(n));case 22:return s=a.xdr.LedgerKey.contractData(new a.xdr.LedgerKeyContractData({key:r,contract:o,durability:i})),e.abrupt(\"return\",this.getLedgerEntries(s).then((function(e){return 0===e.entries.length?Promise.reject({code:404,message:\"Contract data not found. Contract: \".concat(a.Address.fromScAddress(o).toString(),\", Key: \").concat(r.toXDR(\"base64\"),\", Durability: \").concat(n)}):e.entries[0]})));case 24:case\"end\":return e.stop()}}),e,this)}))),function(e,t){return te.apply(this,arguments)})},{key:\"getContractWasmByContractId\",value:(ee=_(S().mark((function e(t){var r,n,o,i;return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=new a.Contract(t).getFootprint(),e.next=3,this.getLedgerEntries(n);case 3:if((o=e.sent).entries.length&&null!==(r=o.entries[0])&&void 0!==r&&r.val){e.next=6;break}return e.abrupt(\"return\",Promise.reject({code:404,message:\"Could not obtain contract hash from server\"}));case 6:return i=o.entries[0].val.contractData().val().instance().executable().wasmHash(),e.abrupt(\"return\",this.getContractWasmByHash(i));case 8:case\"end\":return e.stop()}}),e,this)}))),function(e){return ee.apply(this,arguments)})},{key:\"getContractWasmByHash\",value:(Z=_(S().mark((function e(t){var r,n,o,i,s,u,c=arguments;return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=c.length>1&&void 0!==c[1]?c[1]:void 0,o=\"string\"==typeof t?m.from(t,n):t,i=a.xdr.LedgerKey.contractCode(new a.xdr.LedgerKeyContractCode({hash:o})),e.next=5,this.getLedgerEntries(i);case 5:if((s=e.sent).entries.length&&null!==(r=s.entries[0])&&void 0!==r&&r.val){e.next=8;break}return e.abrupt(\"return\",Promise.reject({code:404,message:\"Could not obtain contract wasm from server\"}));case 8:return u=s.entries[0].val.contractCode().code(),e.abrupt(\"return\",u);case 10:case\"end\":return e.stop()}}),e,this)}))),function(e){return Z.apply(this,arguments)})},{key:\"getLedgerEntries\",value:(J=_(S().mark((function e(){var t=arguments;return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this._getLedgerEntries.apply(this,t).then(h.$D));case 1:case\"end\":return e.stop()}}),e,this)}))),function(){return J.apply(this,arguments)})},{key:\"_getLedgerEntries\",value:(Y=_(S().mark((function e(){var t,r,n,o=arguments;return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(t=o.length,r=new Array(t),n=0;n<t;n++)r[n]=o[n];return e.abrupt(\"return\",f(this.serverURL.toString(),\"getLedgerEntries\",{keys:r.map((function(e){return e.toXDR(\"base64\")}))}));case 2:case\"end\":return e.stop()}}),e,this)}))),function(){return Y.apply(this,arguments)})},{key:\"pollTransaction\",value:(Q=_(S().mark((function e(t,r){var o,i,a,s,u,c;return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:a=(null!==(o=null==r?void 0:r.attempts)&&void 0!==o?o:0)<1?30:null!==(i=null==r?void 0:r.attempts)&&void 0!==i?i:30,u=1;case 2:if(!(u<a)){e.next=13;break}return e.next=5,this.getTransaction(t);case 5:if((s=e.sent).status===n.j.GetTransactionStatus.NOT_FOUND){e.next=8;break}return e.abrupt(\"return\",s);case 8:return e.next=10,y.A.sleep((null!==(c=null==r?void 0:r.sleepStrategy)&&void 0!==c?c:x)(u));case 10:u++,e.next=2;break;case 13:return e.abrupt(\"return\",s);case 14:case\"end\":return e.stop()}}),e,this)}))),function(e,t){return Q.apply(this,arguments)})},{key:\"getTransaction\",value:($=_(S().mark((function e(t){return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this._getTransaction(t).then((function(e){var r={};return e.status!==n.j.GetTransactionStatus.NOT_FOUND&&Object.assign(r,(0,h.WC)(e)),b({status:e.status,txHash:t,latestLedger:e.latestLedger,latestLedgerCloseTime:e.latestLedgerCloseTime,oldestLedger:e.oldestLedger,oldestLedgerCloseTime:e.oldestLedgerCloseTime},r)})));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return $.apply(this,arguments)})},{key:\"_getTransaction\",value:(W=_(S().mark((function e(t){return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",f(this.serverURL.toString(),\"getTransaction\",{hash:t}));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return W.apply(this,arguments)})},{key:\"getTransactions\",value:(G=_(S().mark((function e(t){return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this._getTransactions(t).then((function(e){return{transactions:e.transactions.map(h.tR),latestLedger:e.latestLedger,latestLedgerCloseTimestamp:e.latestLedgerCloseTimestamp,oldestLedger:e.oldestLedger,oldestLedgerCloseTimestamp:e.oldestLedgerCloseTimestamp,cursor:e.cursor}})));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return G.apply(this,arguments)})},{key:\"_getTransactions\",value:(X=_(S().mark((function e(t){return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",f(this.serverURL.toString(),\"getTransactions\",t));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return X.apply(this,arguments)})},{key:\"getEvents\",value:(z=_(S().mark((function e(t){return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this._getEvents(t).then(h.fG));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return z.apply(this,arguments)})},{key:\"_getEvents\",value:(H=_(S().mark((function e(t){var r;return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",f(this.serverURL.toString(),\"getEvents\",b(b({filters:null!==(r=t.filters)&&void 0!==r?r:[],pagination:b(b({},t.cursor&&{cursor:t.cursor}),t.limit&&{limit:t.limit})},t.startLedger&&{startLedger:t.startLedger}),t.endLedger&&{endLedger:t.endLedger})));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return H.apply(this,arguments)})},{key:\"getNetwork\",value:(K=_(S().mark((function e(){return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",f(this.serverURL.toString(),\"getNetwork\"));case 1:case\"end\":return e.stop()}}),e,this)}))),function(){return K.apply(this,arguments)})},{key:\"getLatestLedger\",value:(q=_(S().mark((function e(){return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",f(this.serverURL.toString(),\"getLatestLedger\"));case 1:case\"end\":return e.stop()}}),e,this)}))),function(){return q.apply(this,arguments)})},{key:\"simulateTransaction\",value:(V=_(S().mark((function e(t,r){return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this._simulateTransaction(t,r).then(h.jr));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e,t){return V.apply(this,arguments)})},{key:\"_simulateTransaction\",value:(F=_(S().mark((function e(t,r){return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",f(this.serverURL.toString(),\"simulateTransaction\",b({transaction:t.toXDR()},void 0!==r&&{resourceConfig:{instructionLeeway:r.cpuInstructions}})));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e,t){return F.apply(this,arguments)})},{key:\"prepareTransaction\",value:(D=_(S().mark((function e(t){var r;return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.simulateTransaction(t);case 2:if(r=e.sent,!n.j.isSimulationError(r)){e.next=5;break}throw new Error(r.error);case 5:return e.abrupt(\"return\",(0,d.X)(t,r).build());case 6:case\"end\":return e.stop()}}),e,this)}))),function(e){return D.apply(this,arguments)})},{key:\"sendTransaction\",value:(M=_(S().mark((function e(t){return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this._sendTransaction(t).then(h.Af));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return M.apply(this,arguments)})},{key:\"_sendTransaction\",value:(U=_(S().mark((function e(t){return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",f(this.serverURL.toString(),\"sendTransaction\",{transaction:t.toXDR()}));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return U.apply(this,arguments)})},{key:\"requestAirdrop\",value:(N=_(S().mark((function e(t,r){var o,i,u,c,l,f,p;return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(o=\"string\"==typeof t?t:t.accountId(),e.t0=r,e.t0){e.next=6;break}return e.next=5,this.getNetwork();case 5:e.t0=e.sent.friendbotUrl;case 6:if(r=e.t0){e.next=9;break}throw new Error(\"No friendbot URL configured for current network\");case 9:return e.prev=9,e.next=12,s.post(\"\".concat(r,\"?addr=\").concat(encodeURIComponent(o)));case 12:if((i=e.sent).data.result_meta_xdr){e.next=22;break}return e.next=16,this.getTransaction(i.data.hash);case 16:if((c=e.sent).status===n.j.GetTransactionStatus.SUCCESS){e.next=19;break}throw new Error(\"Funding account \".concat(t,\" failed\"));case 19:u=c.resultMetaXdr,e.next=23;break;case 22:u=a.xdr.TransactionMeta.fromXDR(i.data.result_meta_xdr,\"base64\");case 23:return l=P(u),e.abrupt(\"return\",new a.Account(o,l));case 27:if(e.prev=27,e.t1=e.catch(9),400!==(null===(f=e.t1.response)||void 0===f?void 0:f.status)){e.next=32;break}if(null===(p=e.t1.response.detail)||void 0===p||!p.includes(\"createAccountAlreadyExist\")){e.next=32;break}return e.abrupt(\"return\",this.getAccount(o));case 32:throw e.t1;case 33:case\"end\":return e.stop()}}),e,this,[[9,27]])}))),function(e,t){return N.apply(this,arguments)})},{key:\"getFeeStats\",value:(B=_(S().mark((function e(){return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",f(this.serverURL.toString(),\"getFeeStats\"));case 1:case\"end\":return e.stop()}}),e,this)}))),function(){return B.apply(this,arguments)})},{key:\"getVersionInfo\",value:(L=_(S().mark((function e(){return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",f(this.serverURL.toString(),\"getVersionInfo\"));case 1:case\"end\":return e.stop()}}),e,this)}))),function(){return L.apply(this,arguments)})},{key:\"getSACBalance\",value:(I=_(S().mark((function e(t,r,n){var o,i,s,u,c,l,f,p,d,h;return S().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a.StrKey.isValidContract(t)){e.next=2;break}throw new TypeError(\"expected contract ID, got \".concat(t));case 2:if(null==n){e.next=6;break}e.t0=n,e.next=9;break;case 6:return e.next=8,this.getNetwork().then((function(e){return e.passphrase}));case 8:e.t0=e.sent;case 9:return o=e.t0,i=r.contractId(o),s=a.xdr.ScVal.scvVec([(0,a.nativeToScVal)(\"Balance\",{type:\"symbol\"}),(0,a.nativeToScVal)(t,{type:\"address\"})]),u=a.xdr.LedgerKey.contractData(new a.xdr.LedgerKeyContractData({contract:new a.Address(i).toScAddress(),durability:a.xdr.ContractDataDurability.persistent(),key:s})),e.next=15,this.getLedgerEntries(u);case 15:if(0!==(c=e.sent).entries.length){e.next=18;break}return e.abrupt(\"return\",{latestLedger:c.latestLedger});case 18:if(l=c.entries[0],f=l.lastModifiedLedgerSeq,p=l.liveUntilLedgerSeq,(d=l.val).switch().value===a.xdr.LedgerEntryType.contractData().value){e.next=21;break}return e.abrupt(\"return\",{latestLedger:c.latestLedger});case 21:return h=(0,a.scValToNative)(d.contractData().val()),e.abrupt(\"return\",{latestLedger:c.latestLedger,balanceEntry:{liveUntilLedgerSeq:p,lastModifiedLedgerSeq:f,amount:h.amount.toString(),authorized:h.authorized,clawback:h.clawback}});case 23:case\"end\":return e.stop()}}),e,this)}))),function(e,t,r){return I.apply(this,arguments)})}],j&&k(R.prototype,j),C&&k(R,C),Object.defineProperty(R,\"prototype\",{writable:!1}),R);const ie=(e=r.hmd(e)).exports},784:(e,t,r)=>{\"use strict\";r.d(t,{$D:()=>d,Af:()=>c,WC:()=>l,fG:()=>p,jr:()=>h,tR:()=>f});var n=r(356),o=r(4076);function i(e){return i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i(e)}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){u(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t,r){return(t=function(e){var t=function(e,t){if(\"object\"!=i(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=i(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==i(t)?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e){var t=e.errorResultXdr,r=e.diagnosticEventsXdr;return delete e.errorResultXdr,delete e.diagnosticEventsXdr,t?s(s(s({},e),void 0!==r&&r.length>0&&{diagnosticEvents:r.map((function(e){return n.xdr.DiagnosticEvent.fromXDR(e,\"base64\")}))}),{},{errorResult:n.xdr.TransactionResult.fromXDR(t,\"base64\")}):s({},e)}function l(e){var t,r=n.xdr.TransactionMeta.fromXDR(e.resultMetaXdr,\"base64\"),o={ledger:e.ledger,createdAt:e.createdAt,applicationOrder:e.applicationOrder,feeBump:e.feeBump,envelopeXdr:n.xdr.TransactionEnvelope.fromXDR(e.envelopeXdr,\"base64\"),resultXdr:n.xdr.TransactionResult.fromXDR(e.resultXdr,\"base64\"),resultMetaXdr:r};3===r.switch()&&null!==r.v3().sorobanMeta()&&(o.returnValue=null===(t=r.v3().sorobanMeta())||void 0===t?void 0:t.returnValue());return\"diagnosticEventsXdr\"in e&&e.diagnosticEventsXdr&&(o.diagnosticEventsXdr=e.diagnosticEventsXdr.map((function(e){return n.xdr.DiagnosticEvent.fromXDR(e,\"base64\")}))),o}function f(e){return s({status:e.status,txHash:e.txHash},l(e))}function p(e){var t;return{latestLedger:e.latestLedger,cursor:e.cursor,events:(null!==(t=e.events)&&void 0!==t?t:[]).map((function(e){var t=s({},e);return delete t.contractId,s(s(s({},t),\"\"!==e.contractId&&{contractId:new n.Contract(e.contractId)}),{},{topic:e.topic.map((function(e){return n.xdr.ScVal.fromXDR(e,\"base64\")})),value:n.xdr.ScVal.fromXDR(e.value,\"base64\")})}))}}function d(e){var t;return{latestLedger:e.latestLedger,entries:(null!==(t=e.entries)&&void 0!==t?t:[]).map((function(e){if(!e.key||!e.xdr)throw new TypeError(\"invalid ledger entry: \".concat(JSON.stringify(e)));return s({lastModifiedLedgerSeq:e.lastModifiedLedgerSeq,key:n.xdr.LedgerKey.fromXDR(e.key,\"base64\"),val:n.xdr.LedgerEntryData.fromXDR(e.xdr,\"base64\")},void 0!==e.liveUntilLedgerSeq&&{liveUntilLedgerSeq:e.liveUntilLedgerSeq})}))}}function h(e){var t,r;if(!o.j.isSimulationRaw(e))return e;var i={_parsed:!0,id:e.id,latestLedger:e.latestLedger,events:null!==(t=null===(r=e.events)||void 0===r?void 0:r.map((function(e){return n.xdr.DiagnosticEvent.fromXDR(e,\"base64\")})))&&void 0!==t?t:[]};return\"string\"==typeof e.error?s(s({},i),{},{error:e.error}):function(e,t){var r,o,i,a,u,c=s(s(s({},t),{},{transactionData:new n.SorobanDataBuilder(e.transactionData),minResourceFee:e.minResourceFee},null!==(r=null===(o=e.results)||void 0===o?void 0:o.length)&&void 0!==r&&r&&{result:e.results.map((function(e){var t;return{auth:(null!==(t=e.auth)&&void 0!==t?t:[]).map((function(e){return n.xdr.SorobanAuthorizationEntry.fromXDR(e,\"base64\")})),retval:e.xdr?n.xdr.ScVal.fromXDR(e.xdr,\"base64\"):n.xdr.ScVal.scvVoid()}}))[0]}),null!==(i=null===(a=e.stateChanges)||void 0===a?void 0:a.length)&&void 0!==i&&i&&{stateChanges:null===(u=e.stateChanges)||void 0===u?void 0:u.map((function(e){return{type:e.type,key:n.xdr.LedgerKey.fromXDR(e.key,\"base64\"),before:e.before?n.xdr.LedgerEntry.fromXDR(e.before,\"base64\"):null,after:e.after?n.xdr.LedgerEntry.fromXDR(e.after,\"base64\"):null}}))});return e.restorePreamble&&\"\"!==e.restorePreamble.transactionData?s(s({},c),{},{restorePreamble:{minResourceFee:e.restorePreamble.minResourceFee,transactionData:new n.SorobanDataBuilder(e.restorePreamble.transactionData)}}):c}(e,i)}},8680:(e,t,r)=>{\"use strict\";r.d(t,{X:()=>a});var n=r(356),o=r(4076),i=r(784);function a(e,t){if(\"innerTransaction\"in e)return a(e.innerTransaction,t);if(!function(e){if(1!==e.operations.length)return!1;switch(e.operations[0].type){case\"invokeHostFunction\":case\"extendFootprintTtl\":case\"restoreFootprint\":return!0;default:return!1}}(e))throw new TypeError(\"unsupported transaction: must contain exactly one invokeHostFunction, extendFootprintTtl, or restoreFootprint operation\");var r=(0,i.jr)(t);if(!o.j.isSimulationSuccess(r))throw new Error(\"simulation incorrect: \".concat(JSON.stringify(r)));var s=parseInt(e.fee)||0,u=parseInt(r.minResourceFee)||0,c=n.TransactionBuilder.cloneFrom(e,{fee:(s+u).toString(),sorobanData:r.transactionData.build(),networkPassphrase:e.networkPassphrase});if(\"invokeHostFunction\"===e.operations[0].type){var l;c.clearOperations();var f=e.operations[0],p=null!==(l=f.auth)&&void 0!==l?l:[];c.addOperation(n.Operation.invokeHostFunction({source:f.source,func:f.func,auth:p.length>0?p:r.result.auth}))}return c}},3898:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{Api:()=>{},Resolver:()=>b,STELLAR_TOML_MAX_SIZE:()=>v});var n=r(1293),o=r.n(n),i=r(9983),a=r(8732);function s(e){return s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},s(e)}function u(){u=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(e,t,r){e[t]=r.value},i=\"function\"==typeof Symbol?Symbol:{},a=i.iterator||\"@@iterator\",c=i.asyncIterator||\"@@asyncIterator\",l=i.toStringTag||\"@@toStringTag\";function f(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{f({},\"\")}catch(e){f=function(e,t,r){return e[t]=r}}function p(e,t,r,n){var i=t&&t.prototype instanceof b?t:b,a=Object.create(i.prototype),s=new C(n||[]);return o(a,\"_invoke\",{value:A(e,r,s)}),a}function d(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}t.wrap=p;var h=\"suspendedStart\",y=\"suspendedYield\",m=\"executing\",v=\"completed\",g={};function b(){}function w(){}function S(){}var E={};f(E,a,(function(){return this}));var _=Object.getPrototypeOf,k=_&&_(_(I([])));k&&k!==r&&n.call(k,a)&&(E=k);var T=S.prototype=b.prototype=Object.create(E);function O(e){[\"next\",\"throw\",\"return\"].forEach((function(t){f(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){function r(o,i,a,u){var c=d(e[o],e,i);if(\"throw\"!==c.type){var l=c.arg,f=l.value;return f&&\"object\"==s(f)&&n.call(f,\"__await\")?t.resolve(f.__await).then((function(e){r(\"next\",e,a,u)}),(function(e){r(\"throw\",e,a,u)})):t.resolve(f).then((function(e){l.value=e,a(l)}),(function(e){return r(\"throw\",e,a,u)}))}u(c.arg)}var i;o(this,\"_invoke\",{value:function(e,n){function o(){return new t((function(t,o){r(e,n,t,o)}))}return i=i?i.then(o,o):o()}})}function A(t,r,n){var o=h;return function(i,a){if(o===m)throw Error(\"Generator is already running\");if(o===v){if(\"throw\"===i)throw a;return{value:e,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var u=P(s,n);if(u){if(u===g)continue;return u}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===h)throw o=v,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=m;var c=d(t,r,n);if(\"normal\"===c.type){if(o=n.done?v:y,c.arg===g)continue;return{value:c.arg,done:n.done}}\"throw\"===c.type&&(o=v,n.method=\"throw\",n.arg=c.arg)}}}function P(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,\"throw\"===n&&t.iterator.return&&(r.method=\"return\",r.arg=e,P(t,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),g;var i=d(o,t.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,g;var a=i.arg;return a?a.done?(r[t.resultName]=a.value,r.next=t.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=e),r.delegate=null,g):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,g)}function R(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function j(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(R,this),this.reset(!0)}function I(t){if(t||\"\"===t){var r=t[a];if(r)return r.call(t);if(\"function\"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,i=function r(){for(;++o<t.length;)if(n.call(t,o))return r.value=t[o],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(s(t)+\" is not iterable\")}return w.prototype=S,o(T,\"constructor\",{value:S,configurable:!0}),o(S,\"constructor\",{value:w,configurable:!0}),w.displayName=f(S,l,\"GeneratorFunction\"),t.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===w||\"GeneratorFunction\"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,S):(e.__proto__=S,f(e,l,\"GeneratorFunction\")),e.prototype=Object.create(T),e},t.awrap=function(e){return{__await:e}},O(x.prototype),f(x.prototype,c,(function(){return this})),t.AsyncIterator=x,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new x(p(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},O(T),f(T,l,\"Generator\"),f(T,a,(function(){return this})),f(T,\"toString\",(function(){return\"[object Generator]\"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=I,C.prototype={constructor:C,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=e,this.tryEntries.forEach(j),!t)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function o(n,o){return s.type=\"throw\",s.arg=t,r.next=n,o&&(r.method=\"next\",r.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if(\"root\"===a.tryLoc)return o(\"end\");if(a.tryLoc<=this.prev){var u=n.call(a,\"catchLoc\"),c=n.call(a,\"finallyLoc\");if(u&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw Error(\"try statement without catch or finally\");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var i=o;break}}i&&(\"break\"===e||\"continue\"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method=\"next\",this.next=i.finallyLoc,g):this.complete(a)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),j(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;j(r)}return o}}throw Error(\"illegal catch attempt\")},delegateYield:function(t,r,n){return this.delegate={iterator:I(t),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=e),g}},t}function c(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function l(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,f(n.key),n)}}function f(e){var t=function(e,t){if(\"object\"!=s(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=s(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==s(t)?t:t+\"\"}var p,d,h,y,m,v=102400,g=i.ok.CancelToken,b=(p=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e)},d=null,h=[{key:\"resolve\",value:(y=u().mark((function e(t){var r,n,s,c,l,f=arguments;return u().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return s=void 0===(n=f.length>1&&void 0!==f[1]?f[1]:{}).allowHttp?a.T.isAllowHttp():n.allowHttp,c=void 0===n.timeout?a.T.getTimeout():n.timeout,l=s?\"http\":\"https\",e.abrupt(\"return\",i.ok.get(\"\".concat(l,\"://\").concat(t,\"/.well-known/stellar.toml\"),{maxRedirects:null!==(r=n.allowedRedirects)&&void 0!==r?r:0,maxContentLength:v,cancelToken:c?new g((function(e){return setTimeout((function(){return e(\"timeout of \".concat(c,\"ms exceeded\"))}),c)})):void 0,timeout:c}).then((function(e){try{var t=o().parse(e.data);return Promise.resolve(t)}catch(e){return Promise.reject(new Error(\"stellar.toml is invalid - Parsing error on line \".concat(e.line,\", column \").concat(e.column,\": \").concat(e.message)))}})).catch((function(e){throw e.message.match(/^maxContentLength size/)?new Error(\"stellar.toml file exceeds allowed size of \".concat(v)):e})));case 5:case\"end\":return e.stop()}}),e)})),m=function(){var e=this,t=arguments;return new Promise((function(r,n){var o=y.apply(e,t);function i(e){c(o,r,n,i,a,\"next\",e)}function a(e){c(o,r,n,i,a,\"throw\",e)}i(void 0)}))},function(e){return m.apply(this,arguments)})}],d&&l(p.prototype,d),h&&l(p,h),Object.defineProperty(p,\"prototype\",{writable:!1}),p)},3121:(e,t,r)=>{\"use strict\";function n(e){return n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,i(n.key),n)}}function i(e){var t=function(e,t){if(\"object\"!=n(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,t||\"default\");if(\"object\"!=n(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==n(t)?t:t+\"\"}r.d(t,{A:()=>c});var a,s,u,c=(a=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e)},u=[{key:\"validateTimebounds\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(!e.timeBounds)return!1;var r=Math.floor(Date.now()/1e3),n=e.timeBounds,o=n.minTime,i=n.maxTime;return r>=Number.parseInt(o,10)-t&&r<=Number.parseInt(i,10)+t}},{key:\"sleep\",value:function(e){return new Promise((function(t){return setTimeout(t,e)}))}}],(s=null)&&o(a.prototype,s),u&&o(a,u),Object.defineProperty(a,\"prototype\",{writable:!1}),a)},5479:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{InvalidChallengeError:()=>y,buildChallengeTx:()=>k,gatherTxSigners:()=>P,readChallengeTx:()=>T,verifyChallengeTxSigners:()=>x,verifyChallengeTxThreshold:()=>O,verifyTxSignedBy:()=>A});var n=r(3209),o=r.n(n),i=r(356),a=r(3121);function s(e){return s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},s(e)}function u(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,c(n.key),n)}}function c(e){var t=function(e,t){if(\"object\"!=s(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=s(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==s(t)?t:t+\"\"}function l(e,t,r){return t=h(t),function(e,t){if(t&&(\"object\"==s(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,p()?Reflect.construct(t,r||[],h(e).constructor):t.apply(e,r))}function f(e){var t=\"function\"==typeof Map?new Map:void 0;return f=function(e){if(null===e||!function(e){try{return-1!==Function.toString.call(e).indexOf(\"[native code]\")}catch(t){return\"function\"==typeof e}}(e))return e;if(\"function\"!=typeof e)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return function(e,t,r){if(p())return Reflect.construct.apply(null,arguments);var n=[null];n.push.apply(n,t);var o=new(e.bind.apply(e,n));return r&&d(o,r.prototype),o}(e,arguments,h(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),d(r,e)},f(e)}function p(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(p=function(){return!!e})()}function d(e,t){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},d(e,t)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var y=function(e){function t(e){var r;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var n=(this instanceof t?this.constructor:void 0).prototype;return(r=l(this,t,[e])).__proto__=n,r.constructor=t,r.name=\"InvalidChallengeError\",r}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&d(e,t)}(t,e),r=t,n&&u(r.prototype,n),o&&u(r,o),Object.defineProperty(r,\"prototype\",{writable:!1}),r;var r,n,o}(f(Error)),m=r(8287).Buffer;function v(e){return function(e){if(Array.isArray(e))return E(e)}(e)||_(e)||S(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function g(e,t){var r=\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(!r){if(Array.isArray(e)||(r=S(e))||t&&e&&\"number\"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var i,a=!0,s=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return a=e.done,e},e:function(e){s=!0,i=e},f:function(){try{a||null==r.return||r.return()}finally{if(s)throw i}}}}function b(e){return b=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},b(e)}function w(e){return function(e){if(Array.isArray(e))return e}(e)||_(e)||S(e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function S(e,t){if(e){if(\"string\"==typeof e)return E(e,t);var r={}.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?E(e,t):void 0}}function E(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function _(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}function k(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:300,a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:null;if(t.startsWith(\"M\")&&u)throw Error(\"memo cannot be used if clientAccountID is a muxed account\");var f=new i.Account(e.publicKey(),\"-1\"),p=Math.floor(Date.now()/1e3),d=o()(48).toString(\"base64\"),h=new i.TransactionBuilder(f,{fee:i.BASE_FEE,networkPassphrase:a,timebounds:{minTime:p,maxTime:p+n}}).addOperation(i.Operation.manageData({name:\"\".concat(r,\" auth\"),value:d,source:t})).addOperation(i.Operation.manageData({name:\"web_auth_domain\",value:s,source:f.accountId()}));if(c){if(!l)throw Error(\"clientSigningKey is required if clientDomain is provided\");h.addOperation(i.Operation.manageData({name:\"client_domain\",value:c,source:l}))}u&&h.addMemo(i.Memo.id(u));var y=h.build();return y.sign(e),y.toEnvelope().toXDR(\"base64\").toString()}function T(e,t,r,n,o){var s,u;if(t.startsWith(\"M\"))throw Error(\"Invalid serverAccountID: multiplexed accounts are not supported.\");try{u=new i.Transaction(e,r)}catch(t){try{u=new i.FeeBumpTransaction(e,r)}catch(e){throw new y(\"Invalid challenge: unable to deserialize challengeTx transaction string\")}throw new y(\"Invalid challenge: expected a Transaction but received a FeeBumpTransaction\")}if(0!==Number.parseInt(u.sequence,10))throw new y(\"The transaction sequence number should be zero\");if(u.source!==t)throw new y(\"The transaction source account is not equal to the server's account\");if(u.operations.length<1)throw new y(\"The transaction should contain at least one operation\");var c=w(u.operations),l=c[0],f=c.slice(1);if(!l.source)throw new y(\"The transaction's operation should contain a source account\");var p,d=l.source,h=null;if(u.memo.type!==i.MemoNone){if(d.startsWith(\"M\"))throw new y(\"The transaction has a memo but the client account ID is a muxed account\");if(u.memo.type!==i.MemoID)throw new y(\"The transaction's memo must be of type `id`\");h=u.memo.value}if(\"manageData\"!==l.type)throw new y(\"The transaction's operation type should be 'manageData'\");if(u.timeBounds&&Number.parseInt(null===(s=u.timeBounds)||void 0===s?void 0:s.maxTime,10)===i.TimeoutInfinite)throw new y(\"The transaction requires non-infinite timebounds\");if(!a.A.validateTimebounds(u,300))throw new y(\"The transaction has expired\");if(void 0===l.value)throw new y(\"The transaction's operation values should not be null\");if(!l.value)throw new y(\"The transaction's operation value should not be null\");if(48!==m.from(l.value.toString(),\"base64\").length)throw new y(\"The transaction's operation value should be a 64 bytes base64 random string\");if(!n)throw new y(\"Invalid homeDomains: a home domain must be provided for verification\");if(\"string\"==typeof n)\"\".concat(n,\" auth\")===l.name&&(p=n);else{if(!Array.isArray(n))throw new y(\"Invalid homeDomains: homeDomains type is \".concat(b(n),\" but should be a string or an array\"));p=n.find((function(e){return\"\".concat(e,\" auth\")===l.name}))}if(!p)throw new y(\"Invalid homeDomains: the transaction's operation key name does not match the expected home domain\");var v,S=g(f);try{for(S.s();!(v=S.n()).done;){var E=v.value;if(\"manageData\"!==E.type)throw new y(\"The transaction has operations that are not of type 'manageData'\");if(E.source!==t&&\"client_domain\"!==E.name)throw new y(\"The transaction has operations that are unrecognized\");if(\"web_auth_domain\"===E.name){if(void 0===E.value)throw new y(\"'web_auth_domain' operation value should not be null\");if(E.value.compare(m.from(o)))throw new y(\"'web_auth_domain' operation value does not match \".concat(o))}}}catch(e){S.e(e)}finally{S.f()}if(!A(u,t))throw new y(\"Transaction not signed by server: '\".concat(t,\"'\"));return{tx:u,clientAccountID:d,matchedHomeDomain:p,memo:h}}function O(e,t,r,n,o,i,a){for(var s=x(e,t,r,o.map((function(e){return e.key})),i,a),u=0,c=function(){var e,t=f[l],r=(null===(e=o.find((function(e){return e.key===t})))||void 0===e?void 0:e.weight)||0;u+=r},l=0,f=s;l<f.length;l++)c();if(u<n)throw new y(\"signers with weight \".concat(u,\" do not meet threshold \").concat(n,'\"'));return s}function x(e,t,r,n,o,a){var s,u=T(e,t,r,o,a).tx;try{s=i.Keypair.fromPublicKey(t)}catch(e){throw new Error(\"Couldn't infer keypair from the provided 'serverAccountID': \".concat(e.message))}var c,l,f=new Set,p=g(n);try{for(p.s();!(c=p.n()).done;){var d=c.value;d!==s.publicKey()&&(\"G\"===d.charAt(0)&&f.add(d))}}catch(e){p.e(e)}finally{p.f()}if(0===f.size)throw new y(\"No verifiable client signers provided, at least one G... address must be provided\");var h,m=g(u.operations);try{for(m.s();!(h=m.n()).done;){var b=h.value;if(\"manageData\"===b.type&&\"client_domain\"===b.name){if(l)throw new y(\"Found more than one client_domain operation\");l=b.source}}}catch(e){m.e(e)}finally{m.f()}var w=[s.publicKey()].concat(v(Array.from(f)));l&&w.push(l);for(var S=P(u,w),E=!1,_=!1,k=0,O=S;k<O.length;k++){var x=O[k];x===s.publicKey()&&(E=!0),x===l&&(_=!0)}if(!E)throw new y(\"Transaction not signed by server: '\".concat(s.publicKey(),\"'\"));if(l&&!_)throw new y(\"Transaction not signed by the source account of the 'client_domain' ManageData operation\");if(1===S.length)throw new y(\"None of the given signers match the transaction signatures\");if(S.length!==u.signatures.length)throw new y(\"Transaction has unrecognized signatures\");return S.splice(S.indexOf(s.publicKey()),1),l&&S.splice(S.indexOf(l),1),S}function A(e,t){return 0!==P(e,[t]).length}function P(e,t){var r,n=e.hash(),o=v(e.signatures),a=new Set,s=g(t);try{for(s.s();!(r=s.n()).done;){var u=r.value;if(0===o.length)break;var c=void 0;try{c=i.Keypair.fromPublicKey(u)}catch(e){throw new y(\"Signer is not a valid address: \".concat(e.message))}for(var l=0;l<o.length;l++){var f=o[l];if(f.hint().equals(c.signatureHint())&&c.verify(n,f.signature())){a.add(u),o.splice(l,1);break}}}}catch(e){s.e(e)}finally{s.f()}return Array.from(a)}},5360:(e,t)=>{\"use strict\";var r=function(e,t){return t||(t={}),e.split(\"\").forEach((function(e,r){e in t||(t[e]=r)})),t},n={alphabet:\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",charmap:{0:14,1:8}};n.charmap=r(n.alphabet,n.charmap);var o={alphabet:\"0123456789ABCDEFGHJKMNPQRSTVWXYZ\",charmap:{O:0,I:1,L:1}};o.charmap=r(o.alphabet,o.charmap);var i={alphabet:\"0123456789ABCDEFGHIJKLMNOPQRSTUV\",charmap:{}};function a(e){if(this.buf=[],this.shift=8,this.carry=0,e){switch(e.type){case\"rfc4648\":this.charmap=t.rfc4648.charmap;break;case\"crockford\":this.charmap=t.crockford.charmap;break;case\"base32hex\":this.charmap=t.base32hex.charmap;break;default:throw new Error(\"invalid type\")}e.charmap&&(this.charmap=e.charmap)}}function s(e){if(this.buf=\"\",this.shift=3,this.carry=0,e){switch(e.type){case\"rfc4648\":this.alphabet=t.rfc4648.alphabet;break;case\"crockford\":this.alphabet=t.crockford.alphabet;break;case\"base32hex\":this.alphabet=t.base32hex.alphabet;break;default:throw new Error(\"invalid type\")}e.alphabet?this.alphabet=e.alphabet:e.lc&&(this.alphabet=this.alphabet.toLowerCase())}}i.charmap=r(i.alphabet,i.charmap),a.prototype.charmap=n.charmap,a.prototype.write=function(e){var t=this.charmap,r=this.buf,n=this.shift,o=this.carry;return e.toUpperCase().split(\"\").forEach((function(e){if(\"=\"!=e){var i=255&t[e];(n-=5)>0?o|=i<<n:n<0?(r.push(o|i>>-n),o=i<<(n+=8)&255):(r.push(o|i),n=8,o=0)}})),this.shift=n,this.carry=o,this},a.prototype.finalize=function(e){return e&&this.write(e),8!==this.shift&&0!==this.carry&&(this.buf.push(this.carry),this.shift=8,this.carry=0),this.buf},s.prototype.alphabet=n.alphabet,s.prototype.write=function(e){var t,r,n,o=this.shift,i=this.carry;for(n=0;n<e.length;n++)t=i|(r=e[n])>>o,this.buf+=this.alphabet[31&t],o>5&&(t=r>>(o-=5),this.buf+=this.alphabet[31&t]),i=r<<(o=5-o),o=8-o;return this.shift=o,this.carry=i,this},s.prototype.finalize=function(e){return e&&this.write(e),3!==this.shift&&(this.buf+=this.alphabet[31&this.carry],this.shift=3,this.carry=0),this.buf},t.encode=function(e,t){return new s(t).finalize(e)},t.decode=function(e,t){return new a(t).finalize(e)},t.Decoder=a,t.Encoder=s,t.charmap=r,t.crockford=o,t.rfc4648=n,t.base32hex=i},7526:(e,t)=>{\"use strict\";t.byteLength=function(e){var t=s(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,i=s(e),a=i[0],u=i[1],c=new o(function(e,t,r){return 3*(t+r)/4-r}(0,a,u)),l=0,f=u>0?a-4:a;for(r=0;r<f;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],c[l++]=t>>16&255,c[l++]=t>>8&255,c[l++]=255&t;2===u&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,c[l++]=255&t);1===u&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,c[l++]=t>>8&255,c[l++]=255&t);return c},t.fromByteArray=function(e){for(var t,n=e.length,o=n%3,i=[],a=16383,s=0,c=n-o;s<c;s+=a)i.push(u(e,s,s+a>c?c:s+a));1===o?(t=e[n-1],i.push(r[t>>2]+r[t<<4&63]+\"==\")):2===o&&(t=(e[n-2]<<8)+e[n-1],i.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+\"=\"));return i.join(\"\")};for(var r=[],n=[],o=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",a=0;a<64;++a)r[a]=i[a],n[i.charCodeAt(a)]=a;function s(e){var t=e.length;if(t%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=e.indexOf(\"=\");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function u(e,t,n){for(var o,i,a=[],s=t;s<n;s+=3)o=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(r[(i=o)>>18&63]+r[i>>12&63]+r[i>>6&63]+r[63&i]);return a.join(\"\")}n[\"-\".charCodeAt(0)]=62,n[\"_\".charCodeAt(0)]=63},1594:function(e,t,r){var n;!function(){\"use strict\";var o,i=/^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,a=Math.ceil,s=Math.floor,u=\"[BigNumber Error] \",c=u+\"Number primitive has more than 15 significant digits: \",l=1e14,f=14,p=9007199254740991,d=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],h=1e7,y=1e9;function m(e){var t=0|e;return e>0||e===t?t:t-1}function v(e){for(var t,r,n=1,o=e.length,i=e[0]+\"\";n<o;){for(t=e[n++]+\"\",r=f-t.length;r--;t=\"0\"+t);i+=t}for(o=i.length;48===i.charCodeAt(--o););return i.slice(0,o+1||1)}function g(e,t){var r,n,o=e.c,i=t.c,a=e.s,s=t.s,u=e.e,c=t.e;if(!a||!s)return null;if(r=o&&!o[0],n=i&&!i[0],r||n)return r?n?0:-s:a;if(a!=s)return a;if(r=a<0,n=u==c,!o||!i)return n?0:!o^r?1:-1;if(!n)return u>c^r?1:-1;for(s=(u=o.length)<(c=i.length)?u:c,a=0;a<s;a++)if(o[a]!=i[a])return o[a]>i[a]^r?1:-1;return u==c?0:u>c^r?1:-1}function b(e,t,r,n){if(e<t||e>r||e!==s(e))throw Error(u+(n||\"Argument\")+(\"number\"==typeof e?e<t||e>r?\" out of range: \":\" not an integer: \":\" not a primitive number: \")+String(e))}function w(e){var t=e.c.length-1;return m(e.e/f)==t&&e.c[t]%2!=0}function S(e,t){return(e.length>1?e.charAt(0)+\".\"+e.slice(1):e)+(t<0?\"e\":\"e+\")+t}function E(e,t,r){var n,o;if(t<0){for(o=r+\".\";++t;o+=r);e=o+e}else if(++t>(n=e.length)){for(o=r,t-=n;--t;o+=r);e+=o}else t<n&&(e=e.slice(0,t)+\".\"+e.slice(t));return e}o=function e(t){var r,n,o,_,k,T,O,x,A,P,R=H.prototype={constructor:H,toString:null,valueOf:null},j=new H(1),C=20,I=4,L=-7,B=21,N=-1e7,U=1e7,M=!1,D=1,F=0,V={prefix:\"\",groupSize:3,secondaryGroupSize:0,groupSeparator:\",\",decimalSeparator:\".\",fractionGroupSize:0,fractionGroupSeparator:\"\\xa0\",suffix:\"\"},q=\"0123456789abcdefghijklmnopqrstuvwxyz\",K=!0;function H(e,t){var r,a,u,l,d,h,y,m,v=this;if(!(v instanceof H))return new H(e,t);if(null==t){if(e&&!0===e._isBigNumber)return v.s=e.s,void(!e.c||e.e>U?v.c=v.e=null:e.e<N?v.c=[v.e=0]:(v.e=e.e,v.c=e.c.slice()));if((h=\"number\"==typeof e)&&0*e==0){if(v.s=1/e<0?(e=-e,-1):1,e===~~e){for(l=0,d=e;d>=10;d/=10,l++);return void(l>U?v.c=v.e=null:(v.e=l,v.c=[e]))}m=String(e)}else{if(!i.test(m=String(e)))return o(v,m,h);v.s=45==m.charCodeAt(0)?(m=m.slice(1),-1):1}(l=m.indexOf(\".\"))>-1&&(m=m.replace(\".\",\"\")),(d=m.search(/e/i))>0?(l<0&&(l=d),l+=+m.slice(d+1),m=m.substring(0,d)):l<0&&(l=m.length)}else{if(b(t,2,q.length,\"Base\"),10==t&&K)return W(v=new H(e),C+v.e+1,I);if(m=String(e),h=\"number\"==typeof e){if(0*e!=0)return o(v,m,h,t);if(v.s=1/e<0?(m=m.slice(1),-1):1,H.DEBUG&&m.replace(/^0\\.0*|\\./,\"\").length>15)throw Error(c+e)}else v.s=45===m.charCodeAt(0)?(m=m.slice(1),-1):1;for(r=q.slice(0,t),l=d=0,y=m.length;d<y;d++)if(r.indexOf(a=m.charAt(d))<0){if(\".\"==a){if(d>l){l=y;continue}}else if(!u&&(m==m.toUpperCase()&&(m=m.toLowerCase())||m==m.toLowerCase()&&(m=m.toUpperCase()))){u=!0,d=-1,l=0;continue}return o(v,String(e),h,t)}h=!1,(l=(m=n(m,t,10,v.s)).indexOf(\".\"))>-1?m=m.replace(\".\",\"\"):l=m.length}for(d=0;48===m.charCodeAt(d);d++);for(y=m.length;48===m.charCodeAt(--y););if(m=m.slice(d,++y)){if(y-=d,h&&H.DEBUG&&y>15&&(e>p||e!==s(e)))throw Error(c+v.s*e);if((l=l-d-1)>U)v.c=v.e=null;else if(l<N)v.c=[v.e=0];else{if(v.e=l,v.c=[],d=(l+1)%f,l<0&&(d+=f),d<y){for(d&&v.c.push(+m.slice(0,d)),y-=f;d<y;)v.c.push(+m.slice(d,d+=f));d=f-(m=m.slice(d)).length}else d-=y;for(;d--;m+=\"0\");v.c.push(+m)}}else v.c=[v.e=0]}function z(e,t,r,n){var o,i,a,s,u;if(null==r?r=I:b(r,0,8),!e.c)return e.toString();if(o=e.c[0],a=e.e,null==t)u=v(e.c),u=1==n||2==n&&(a<=L||a>=B)?S(u,a):E(u,a,\"0\");else if(i=(e=W(new H(e),t,r)).e,s=(u=v(e.c)).length,1==n||2==n&&(t<=i||i<=L)){for(;s<t;u+=\"0\",s++);u=S(u,i)}else if(t-=a,u=E(u,i,\"0\"),i+1>s){if(--t>0)for(u+=\".\";t--;u+=\"0\");}else if((t+=i-s)>0)for(i+1==s&&(u+=\".\");t--;u+=\"0\");return e.s<0&&o?\"-\"+u:u}function X(e,t){for(var r,n,o=1,i=new H(e[0]);o<e.length;o++)(!(n=new H(e[o])).s||(r=g(i,n))===t||0===r&&i.s===t)&&(i=n);return i}function G(e,t,r){for(var n=1,o=t.length;!t[--o];t.pop());for(o=t[0];o>=10;o/=10,n++);return(r=n+r*f-1)>U?e.c=e.e=null:r<N?e.c=[e.e=0]:(e.e=r,e.c=t),e}function W(e,t,r,n){var o,i,u,c,p,h,y,m=e.c,v=d;if(m){e:{for(o=1,c=m[0];c>=10;c/=10,o++);if((i=t-o)<0)i+=f,u=t,p=m[h=0],y=s(p/v[o-u-1]%10);else if((h=a((i+1)/f))>=m.length){if(!n)break e;for(;m.length<=h;m.push(0));p=y=0,o=1,u=(i%=f)-f+1}else{for(p=c=m[h],o=1;c>=10;c/=10,o++);y=(u=(i%=f)-f+o)<0?0:s(p/v[o-u-1]%10)}if(n=n||t<0||null!=m[h+1]||(u<0?p:p%v[o-u-1]),n=r<4?(y||n)&&(0==r||r==(e.s<0?3:2)):y>5||5==y&&(4==r||n||6==r&&(i>0?u>0?p/v[o-u]:0:m[h-1])%10&1||r==(e.s<0?8:7)),t<1||!m[0])return m.length=0,n?(t-=e.e+1,m[0]=v[(f-t%f)%f],e.e=-t||0):m[0]=e.e=0,e;if(0==i?(m.length=h,c=1,h--):(m.length=h+1,c=v[f-i],m[h]=u>0?s(p/v[o-u]%v[u])*c:0),n)for(;;){if(0==h){for(i=1,u=m[0];u>=10;u/=10,i++);for(u=m[0]+=c,c=1;u>=10;u/=10,c++);i!=c&&(e.e++,m[0]==l&&(m[0]=1));break}if(m[h]+=c,m[h]!=l)break;m[h--]=0,c=1}for(i=m.length;0===m[--i];m.pop());}e.e>U?e.c=e.e=null:e.e<N&&(e.c=[e.e=0])}return e}function $(e){var t,r=e.e;return null===r?e.toString():(t=v(e.c),t=r<=L||r>=B?S(t,r):E(t,r,\"0\"),e.s<0?\"-\"+t:t)}return H.clone=e,H.ROUND_UP=0,H.ROUND_DOWN=1,H.ROUND_CEIL=2,H.ROUND_FLOOR=3,H.ROUND_HALF_UP=4,H.ROUND_HALF_DOWN=5,H.ROUND_HALF_EVEN=6,H.ROUND_HALF_CEIL=7,H.ROUND_HALF_FLOOR=8,H.EUCLID=9,H.config=H.set=function(e){var t,r;if(null!=e){if(\"object\"!=typeof e)throw Error(u+\"Object expected: \"+e);if(e.hasOwnProperty(t=\"DECIMAL_PLACES\")&&(b(r=e[t],0,y,t),C=r),e.hasOwnProperty(t=\"ROUNDING_MODE\")&&(b(r=e[t],0,8,t),I=r),e.hasOwnProperty(t=\"EXPONENTIAL_AT\")&&((r=e[t])&&r.pop?(b(r[0],-y,0,t),b(r[1],0,y,t),L=r[0],B=r[1]):(b(r,-y,y,t),L=-(B=r<0?-r:r))),e.hasOwnProperty(t=\"RANGE\"))if((r=e[t])&&r.pop)b(r[0],-y,-1,t),b(r[1],1,y,t),N=r[0],U=r[1];else{if(b(r,-y,y,t),!r)throw Error(u+t+\" cannot be zero: \"+r);N=-(U=r<0?-r:r)}if(e.hasOwnProperty(t=\"CRYPTO\")){if((r=e[t])!==!!r)throw Error(u+t+\" not true or false: \"+r);if(r){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw M=!r,Error(u+\"crypto unavailable\");M=r}else M=r}if(e.hasOwnProperty(t=\"MODULO_MODE\")&&(b(r=e[t],0,9,t),D=r),e.hasOwnProperty(t=\"POW_PRECISION\")&&(b(r=e[t],0,y,t),F=r),e.hasOwnProperty(t=\"FORMAT\")){if(\"object\"!=typeof(r=e[t]))throw Error(u+t+\" not an object: \"+r);V=r}if(e.hasOwnProperty(t=\"ALPHABET\")){if(\"string\"!=typeof(r=e[t])||/^.?$|[+\\-.\\s]|(.).*\\1/.test(r))throw Error(u+t+\" invalid: \"+r);K=\"0123456789\"==r.slice(0,10),q=r}}return{DECIMAL_PLACES:C,ROUNDING_MODE:I,EXPONENTIAL_AT:[L,B],RANGE:[N,U],CRYPTO:M,MODULO_MODE:D,POW_PRECISION:F,FORMAT:V,ALPHABET:q}},H.isBigNumber=function(e){if(!e||!0!==e._isBigNumber)return!1;if(!H.DEBUG)return!0;var t,r,n=e.c,o=e.e,i=e.s;e:if(\"[object Array]\"=={}.toString.call(n)){if((1===i||-1===i)&&o>=-y&&o<=y&&o===s(o)){if(0===n[0]){if(0===o&&1===n.length)return!0;break e}if((t=(o+1)%f)<1&&(t+=f),String(n[0]).length==t){for(t=0;t<n.length;t++)if((r=n[t])<0||r>=l||r!==s(r))break e;if(0!==r)return!0}}}else if(null===n&&null===o&&(null===i||1===i||-1===i))return!0;throw Error(u+\"Invalid BigNumber: \"+e)},H.maximum=H.max=function(){return X(arguments,-1)},H.minimum=H.min=function(){return X(arguments,1)},H.random=(_=9007199254740992,k=Math.random()*_&2097151?function(){return s(Math.random()*_)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(e){var t,r,n,o,i,c=0,l=[],p=new H(j);if(null==e?e=C:b(e,0,y),o=a(e/f),M)if(crypto.getRandomValues){for(t=crypto.getRandomValues(new Uint32Array(o*=2));c<o;)(i=131072*t[c]+(t[c+1]>>>11))>=9e15?(r=crypto.getRandomValues(new Uint32Array(2)),t[c]=r[0],t[c+1]=r[1]):(l.push(i%1e14),c+=2);c=o/2}else{if(!crypto.randomBytes)throw M=!1,Error(u+\"crypto unavailable\");for(t=crypto.randomBytes(o*=7);c<o;)(i=281474976710656*(31&t[c])+1099511627776*t[c+1]+4294967296*t[c+2]+16777216*t[c+3]+(t[c+4]<<16)+(t[c+5]<<8)+t[c+6])>=9e15?crypto.randomBytes(7).copy(t,c):(l.push(i%1e14),c+=7);c=o/7}if(!M)for(;c<o;)(i=k())<9e15&&(l[c++]=i%1e14);for(o=l[--c],e%=f,o&&e&&(i=d[f-e],l[c]=s(o/i)*i);0===l[c];l.pop(),c--);if(c<0)l=[n=0];else{for(n=-1;0===l[0];l.splice(0,1),n-=f);for(c=1,i=l[0];i>=10;i/=10,c++);c<f&&(n-=f-c)}return p.e=n,p.c=l,p}),H.sum=function(){for(var e=1,t=arguments,r=new H(t[0]);e<t.length;)r=r.plus(t[e++]);return r},n=function(){var e=\"0123456789\";function t(e,t,r,n){for(var o,i,a=[0],s=0,u=e.length;s<u;){for(i=a.length;i--;a[i]*=t);for(a[0]+=n.indexOf(e.charAt(s++)),o=0;o<a.length;o++)a[o]>r-1&&(null==a[o+1]&&(a[o+1]=0),a[o+1]+=a[o]/r|0,a[o]%=r)}return a.reverse()}return function(n,o,i,a,s){var u,c,l,f,p,d,h,y,m=n.indexOf(\".\"),g=C,b=I;for(m>=0&&(f=F,F=0,n=n.replace(\".\",\"\"),d=(y=new H(o)).pow(n.length-m),F=f,y.c=t(E(v(d.c),d.e,\"0\"),10,i,e),y.e=y.c.length),l=f=(h=t(n,o,i,s?(u=q,e):(u=e,q))).length;0==h[--f];h.pop());if(!h[0])return u.charAt(0);if(m<0?--l:(d.c=h,d.e=l,d.s=a,h=(d=r(d,y,g,b,i)).c,p=d.r,l=d.e),m=h[c=l+g+1],f=i/2,p=p||c<0||null!=h[c+1],p=b<4?(null!=m||p)&&(0==b||b==(d.s<0?3:2)):m>f||m==f&&(4==b||p||6==b&&1&h[c-1]||b==(d.s<0?8:7)),c<1||!h[0])n=p?E(u.charAt(1),-g,u.charAt(0)):u.charAt(0);else{if(h.length=c,p)for(--i;++h[--c]>i;)h[c]=0,c||(++l,h=[1].concat(h));for(f=h.length;!h[--f];);for(m=0,n=\"\";m<=f;n+=u.charAt(h[m++]));n=E(n,l,u.charAt(0))}return n}}(),r=function(){function e(e,t,r){var n,o,i,a,s=0,u=e.length,c=t%h,l=t/h|0;for(e=e.slice();u--;)s=((o=c*(i=e[u]%h)+(n=l*i+(a=e[u]/h|0)*c)%h*h+s)/r|0)+(n/h|0)+l*a,e[u]=o%r;return s&&(e=[s].concat(e)),e}function t(e,t,r,n){var o,i;if(r!=n)i=r>n?1:-1;else for(o=i=0;o<r;o++)if(e[o]!=t[o]){i=e[o]>t[o]?1:-1;break}return i}function r(e,t,r,n){for(var o=0;r--;)e[r]-=o,o=e[r]<t[r]?1:0,e[r]=o*n+e[r]-t[r];for(;!e[0]&&e.length>1;e.splice(0,1));}return function(n,o,i,a,u){var c,p,d,h,y,v,g,b,w,S,E,_,k,T,O,x,A,P=n.s==o.s?1:-1,R=n.c,j=o.c;if(!(R&&R[0]&&j&&j[0]))return new H(n.s&&o.s&&(R?!j||R[0]!=j[0]:j)?R&&0==R[0]||!j?0*P:P/0:NaN);for(w=(b=new H(P)).c=[],P=i+(p=n.e-o.e)+1,u||(u=l,p=m(n.e/f)-m(o.e/f),P=P/f|0),d=0;j[d]==(R[d]||0);d++);if(j[d]>(R[d]||0)&&p--,P<0)w.push(1),h=!0;else{for(T=R.length,x=j.length,d=0,P+=2,(y=s(u/(j[0]+1)))>1&&(j=e(j,y,u),R=e(R,y,u),x=j.length,T=R.length),k=x,E=(S=R.slice(0,x)).length;E<x;S[E++]=0);A=j.slice(),A=[0].concat(A),O=j[0],j[1]>=u/2&&O++;do{if(y=0,(c=t(j,S,x,E))<0){if(_=S[0],x!=E&&(_=_*u+(S[1]||0)),(y=s(_/O))>1)for(y>=u&&(y=u-1),g=(v=e(j,y,u)).length,E=S.length;1==t(v,S,g,E);)y--,r(v,x<g?A:j,g,u),g=v.length,c=1;else 0==y&&(c=y=1),g=(v=j.slice()).length;if(g<E&&(v=[0].concat(v)),r(S,v,E,u),E=S.length,-1==c)for(;t(j,S,x,E)<1;)y++,r(S,x<E?A:j,E,u),E=S.length}else 0===c&&(y++,S=[0]);w[d++]=y,S[0]?S[E++]=R[k]||0:(S=[R[k]],E=1)}while((k++<T||null!=S[0])&&P--);h=null!=S[0],w[0]||w.splice(0,1)}if(u==l){for(d=1,P=w[0];P>=10;P/=10,d++);W(b,i+(b.e=d+p*f-1)+1,a,h)}else b.e=p,b.r=+h;return b}}(),T=/^(-?)0([xbo])(?=\\w[\\w.]*$)/i,O=/^([^.]+)\\.$/,x=/^\\.([^.]+)$/,A=/^-?(Infinity|NaN)$/,P=/^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g,o=function(e,t,r,n){var o,i=r?t:t.replace(P,\"\");if(A.test(i))e.s=isNaN(i)?null:i<0?-1:1;else{if(!r&&(i=i.replace(T,(function(e,t,r){return o=\"x\"==(r=r.toLowerCase())?16:\"b\"==r?2:8,n&&n!=o?e:t})),n&&(o=n,i=i.replace(O,\"$1\").replace(x,\"0.$1\")),t!=i))return new H(i,o);if(H.DEBUG)throw Error(u+\"Not a\"+(n?\" base \"+n:\"\")+\" number: \"+t);e.s=null}e.c=e.e=null},R.absoluteValue=R.abs=function(){var e=new H(this);return e.s<0&&(e.s=1),e},R.comparedTo=function(e,t){return g(this,new H(e,t))},R.decimalPlaces=R.dp=function(e,t){var r,n,o,i=this;if(null!=e)return b(e,0,y),null==t?t=I:b(t,0,8),W(new H(i),e+i.e+1,t);if(!(r=i.c))return null;if(n=((o=r.length-1)-m(this.e/f))*f,o=r[o])for(;o%10==0;o/=10,n--);return n<0&&(n=0),n},R.dividedBy=R.div=function(e,t){return r(this,new H(e,t),C,I)},R.dividedToIntegerBy=R.idiv=function(e,t){return r(this,new H(e,t),0,1)},R.exponentiatedBy=R.pow=function(e,t){var r,n,o,i,c,l,p,d,h=this;if((e=new H(e)).c&&!e.isInteger())throw Error(u+\"Exponent not an integer: \"+$(e));if(null!=t&&(t=new H(t)),c=e.e>14,!h.c||!h.c[0]||1==h.c[0]&&!h.e&&1==h.c.length||!e.c||!e.c[0])return d=new H(Math.pow(+$(h),c?e.s*(2-w(e)):+$(e))),t?d.mod(t):d;if(l=e.s<0,t){if(t.c?!t.c[0]:!t.s)return new H(NaN);(n=!l&&h.isInteger()&&t.isInteger())&&(h=h.mod(t))}else{if(e.e>9&&(h.e>0||h.e<-1||(0==h.e?h.c[0]>1||c&&h.c[1]>=24e7:h.c[0]<8e13||c&&h.c[0]<=9999975e7)))return i=h.s<0&&w(e)?-0:0,h.e>-1&&(i=1/i),new H(l?1/i:i);F&&(i=a(F/f+2))}for(c?(r=new H(.5),l&&(e.s=1),p=w(e)):p=(o=Math.abs(+$(e)))%2,d=new H(j);;){if(p){if(!(d=d.times(h)).c)break;i?d.c.length>i&&(d.c.length=i):n&&(d=d.mod(t))}if(o){if(0===(o=s(o/2)))break;p=o%2}else if(W(e=e.times(r),e.e+1,1),e.e>14)p=w(e);else{if(0===(o=+$(e)))break;p=o%2}h=h.times(h),i?h.c&&h.c.length>i&&(h.c.length=i):n&&(h=h.mod(t))}return n?d:(l&&(d=j.div(d)),t?d.mod(t):i?W(d,F,I,undefined):d)},R.integerValue=function(e){var t=new H(this);return null==e?e=I:b(e,0,8),W(t,t.e+1,e)},R.isEqualTo=R.eq=function(e,t){return 0===g(this,new H(e,t))},R.isFinite=function(){return!!this.c},R.isGreaterThan=R.gt=function(e,t){return g(this,new H(e,t))>0},R.isGreaterThanOrEqualTo=R.gte=function(e,t){return 1===(t=g(this,new H(e,t)))||0===t},R.isInteger=function(){return!!this.c&&m(this.e/f)>this.c.length-2},R.isLessThan=R.lt=function(e,t){return g(this,new H(e,t))<0},R.isLessThanOrEqualTo=R.lte=function(e,t){return-1===(t=g(this,new H(e,t)))||0===t},R.isNaN=function(){return!this.s},R.isNegative=function(){return this.s<0},R.isPositive=function(){return this.s>0},R.isZero=function(){return!!this.c&&0==this.c[0]},R.minus=function(e,t){var r,n,o,i,a=this,s=a.s;if(t=(e=new H(e,t)).s,!s||!t)return new H(NaN);if(s!=t)return e.s=-t,a.plus(e);var u=a.e/f,c=e.e/f,p=a.c,d=e.c;if(!u||!c){if(!p||!d)return p?(e.s=-t,e):new H(d?a:NaN);if(!p[0]||!d[0])return d[0]?(e.s=-t,e):new H(p[0]?a:3==I?-0:0)}if(u=m(u),c=m(c),p=p.slice(),s=u-c){for((i=s<0)?(s=-s,o=p):(c=u,o=d),o.reverse(),t=s;t--;o.push(0));o.reverse()}else for(n=(i=(s=p.length)<(t=d.length))?s:t,s=t=0;t<n;t++)if(p[t]!=d[t]){i=p[t]<d[t];break}if(i&&(o=p,p=d,d=o,e.s=-e.s),(t=(n=d.length)-(r=p.length))>0)for(;t--;p[r++]=0);for(t=l-1;n>s;){if(p[--n]<d[n]){for(r=n;r&&!p[--r];p[r]=t);--p[r],p[n]+=l}p[n]-=d[n]}for(;0==p[0];p.splice(0,1),--c);return p[0]?G(e,p,c):(e.s=3==I?-1:1,e.c=[e.e=0],e)},R.modulo=R.mod=function(e,t){var n,o,i=this;return e=new H(e,t),!i.c||!e.s||e.c&&!e.c[0]?new H(NaN):!e.c||i.c&&!i.c[0]?new H(i):(9==D?(o=e.s,e.s=1,n=r(i,e,0,3),e.s=o,n.s*=o):n=r(i,e,0,D),(e=i.minus(n.times(e))).c[0]||1!=D||(e.s=i.s),e)},R.multipliedBy=R.times=function(e,t){var r,n,o,i,a,s,u,c,p,d,y,v,g,b,w,S=this,E=S.c,_=(e=new H(e,t)).c;if(!(E&&_&&E[0]&&_[0]))return!S.s||!e.s||E&&!E[0]&&!_||_&&!_[0]&&!E?e.c=e.e=e.s=null:(e.s*=S.s,E&&_?(e.c=[0],e.e=0):e.c=e.e=null),e;for(n=m(S.e/f)+m(e.e/f),e.s*=S.s,(u=E.length)<(d=_.length)&&(g=E,E=_,_=g,o=u,u=d,d=o),o=u+d,g=[];o--;g.push(0));for(b=l,w=h,o=d;--o>=0;){for(r=0,y=_[o]%w,v=_[o]/w|0,i=o+(a=u);i>o;)r=((c=y*(c=E[--a]%w)+(s=v*c+(p=E[a]/w|0)*y)%w*w+g[i]+r)/b|0)+(s/w|0)+v*p,g[i--]=c%b;g[i]=r}return r?++n:g.splice(0,1),G(e,g,n)},R.negated=function(){var e=new H(this);return e.s=-e.s||null,e},R.plus=function(e,t){var r,n=this,o=n.s;if(t=(e=new H(e,t)).s,!o||!t)return new H(NaN);if(o!=t)return e.s=-t,n.minus(e);var i=n.e/f,a=e.e/f,s=n.c,u=e.c;if(!i||!a){if(!s||!u)return new H(o/0);if(!s[0]||!u[0])return u[0]?e:new H(s[0]?n:0*o)}if(i=m(i),a=m(a),s=s.slice(),o=i-a){for(o>0?(a=i,r=u):(o=-o,r=s),r.reverse();o--;r.push(0));r.reverse()}for((o=s.length)-(t=u.length)<0&&(r=u,u=s,s=r,t=o),o=0;t;)o=(s[--t]=s[t]+u[t]+o)/l|0,s[t]=l===s[t]?0:s[t]%l;return o&&(s=[o].concat(s),++a),G(e,s,a)},R.precision=R.sd=function(e,t){var r,n,o,i=this;if(null!=e&&e!==!!e)return b(e,1,y),null==t?t=I:b(t,0,8),W(new H(i),e,t);if(!(r=i.c))return null;if(n=(o=r.length-1)*f+1,o=r[o]){for(;o%10==0;o/=10,n--);for(o=r[0];o>=10;o/=10,n++);}return e&&i.e+1>n&&(n=i.e+1),n},R.shiftedBy=function(e){return b(e,-9007199254740991,p),this.times(\"1e\"+e)},R.squareRoot=R.sqrt=function(){var e,t,n,o,i,a=this,s=a.c,u=a.s,c=a.e,l=C+4,f=new H(\"0.5\");if(1!==u||!s||!s[0])return new H(!u||u<0&&(!s||s[0])?NaN:s?a:1/0);if(0==(u=Math.sqrt(+$(a)))||u==1/0?(((t=v(s)).length+c)%2==0&&(t+=\"0\"),u=Math.sqrt(+t),c=m((c+1)/2)-(c<0||c%2),n=new H(t=u==1/0?\"5e\"+c:(t=u.toExponential()).slice(0,t.indexOf(\"e\")+1)+c)):n=new H(u+\"\"),n.c[0])for((u=(c=n.e)+l)<3&&(u=0);;)if(i=n,n=f.times(i.plus(r(a,i,l,1))),v(i.c).slice(0,u)===(t=v(n.c)).slice(0,u)){if(n.e<c&&--u,\"9999\"!=(t=t.slice(u-3,u+1))&&(o||\"4999\"!=t)){+t&&(+t.slice(1)||\"5\"!=t.charAt(0))||(W(n,n.e+C+2,1),e=!n.times(n).eq(a));break}if(!o&&(W(i,i.e+C+2,0),i.times(i).eq(a))){n=i;break}l+=4,u+=4,o=1}return W(n,n.e+C+1,I,e)},R.toExponential=function(e,t){return null!=e&&(b(e,0,y),e++),z(this,e,t,1)},R.toFixed=function(e,t){return null!=e&&(b(e,0,y),e=e+this.e+1),z(this,e,t)},R.toFormat=function(e,t,r){var n,o=this;if(null==r)null!=e&&t&&\"object\"==typeof t?(r=t,t=null):e&&\"object\"==typeof e?(r=e,e=t=null):r=V;else if(\"object\"!=typeof r)throw Error(u+\"Argument not an object: \"+r);if(n=o.toFixed(e,t),o.c){var i,a=n.split(\".\"),s=+r.groupSize,c=+r.secondaryGroupSize,l=r.groupSeparator||\"\",f=a[0],p=a[1],d=o.s<0,h=d?f.slice(1):f,y=h.length;if(c&&(i=s,s=c,c=i,y-=i),s>0&&y>0){for(i=y%s||s,f=h.substr(0,i);i<y;i+=s)f+=l+h.substr(i,s);c>0&&(f+=l+h.slice(i)),d&&(f=\"-\"+f)}n=p?f+(r.decimalSeparator||\"\")+((c=+r.fractionGroupSize)?p.replace(new RegExp(\"\\\\d{\"+c+\"}\\\\B\",\"g\"),\"$&\"+(r.fractionGroupSeparator||\"\")):p):f}return(r.prefix||\"\")+n+(r.suffix||\"\")},R.toFraction=function(e){var t,n,o,i,a,s,c,l,p,h,y,m,g=this,b=g.c;if(null!=e&&(!(c=new H(e)).isInteger()&&(c.c||1!==c.s)||c.lt(j)))throw Error(u+\"Argument \"+(c.isInteger()?\"out of range: \":\"not an integer: \")+$(c));if(!b)return new H(g);for(t=new H(j),p=n=new H(j),o=l=new H(j),m=v(b),a=t.e=m.length-g.e-1,t.c[0]=d[(s=a%f)<0?f+s:s],e=!e||c.comparedTo(t)>0?a>0?t:p:c,s=U,U=1/0,c=new H(m),l.c[0]=0;h=r(c,t,0,1),1!=(i=n.plus(h.times(o))).comparedTo(e);)n=o,o=i,p=l.plus(h.times(i=p)),l=i,t=c.minus(h.times(i=t)),c=i;return i=r(e.minus(n),o,0,1),l=l.plus(i.times(p)),n=n.plus(i.times(o)),l.s=p.s=g.s,y=r(p,o,a*=2,I).minus(g).abs().comparedTo(r(l,n,a,I).minus(g).abs())<1?[p,o]:[l,n],U=s,y},R.toNumber=function(){return+$(this)},R.toPrecision=function(e,t){return null!=e&&b(e,1,y),z(this,e,t,2)},R.toString=function(e){var t,r=this,o=r.s,i=r.e;return null===i?o?(t=\"Infinity\",o<0&&(t=\"-\"+t)):t=\"NaN\":(null==e?t=i<=L||i>=B?S(v(r.c),i):E(v(r.c),i,\"0\"):10===e&&K?t=E(v((r=W(new H(r),C+i+1,I)).c),r.e,\"0\"):(b(e,2,q.length,\"Base\"),t=n(E(v(r.c),i,\"0\"),10,e,o,!0)),o<0&&r.c[0]&&(t=\"-\"+t)),t},R.valueOf=R.toJSON=function(){return $(this)},R._isBigNumber=!0,null!=t&&H.set(t),H}(),o.default=o.BigNumber=o,void 0===(n=function(){return o}.call(t,r,t,e))||(e.exports=n)}()},8287:(e,t,r)=>{\"use strict\";const n=r(7526),o=r(251),i=\"function\"==typeof Symbol&&\"function\"==typeof Symbol.for?Symbol.for(\"nodejs.util.inspect.custom\"):null;t.Buffer=u,t.SlowBuffer=function(e){+e!=e&&(e=0);return u.alloc(+e)},t.INSPECT_MAX_BYTES=50;const a=2147483647;function s(e){if(e>a)throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,u.prototype),t}function u(e,t,r){if(\"number\"==typeof e){if(\"string\"==typeof t)throw new TypeError('The \"string\" argument must be of type string. Received type number');return f(e)}return c(e,t,r)}function c(e,t,r){if(\"string\"==typeof e)return function(e,t){\"string\"==typeof t&&\"\"!==t||(t=\"utf8\");if(!u.isEncoding(t))throw new TypeError(\"Unknown encoding: \"+t);const r=0|y(e,t);let n=s(r);const o=n.write(e,t);o!==r&&(n=n.slice(0,o));return n}(e,t);if(ArrayBuffer.isView(e))return function(e){if($(e,Uint8Array)){const t=new Uint8Array(e);return d(t.buffer,t.byteOffset,t.byteLength)}return p(e)}(e);if(null==e)throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof e);if($(e,ArrayBuffer)||e&&$(e.buffer,ArrayBuffer))return d(e,t,r);if(\"undefined\"!=typeof SharedArrayBuffer&&($(e,SharedArrayBuffer)||e&&$(e.buffer,SharedArrayBuffer)))return d(e,t,r);if(\"number\"==typeof e)throw new TypeError('The \"value\" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return u.from(n,t,r);const o=function(e){if(u.isBuffer(e)){const t=0|h(e.length),r=s(t);return 0===r.length||e.copy(r,0,0,t),r}if(void 0!==e.length)return\"number\"!=typeof e.length||Q(e.length)?s(0):p(e);if(\"Buffer\"===e.type&&Array.isArray(e.data))return p(e.data)}(e);if(o)return o;if(\"undefined\"!=typeof Symbol&&null!=Symbol.toPrimitive&&\"function\"==typeof e[Symbol.toPrimitive])return u.from(e[Symbol.toPrimitive](\"string\"),t,r);throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof e)}function l(e){if(\"number\"!=typeof e)throw new TypeError('\"size\" argument must be of type number');if(e<0)throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}function f(e){return l(e),s(e<0?0:0|h(e))}function p(e){const t=e.length<0?0:0|h(e.length),r=s(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function d(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('\"offset\" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('\"length\" is outside of buffer bounds');let n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,u.prototype),n}function h(e){if(e>=a)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+a.toString(16)+\" bytes\");return 0|e}function y(e,t){if(u.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||$(e,ArrayBuffer))return e.byteLength;if(\"string\"!=typeof e)throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let o=!1;for(;;)switch(t){case\"ascii\":case\"latin1\":case\"binary\":return r;case\"utf8\":case\"utf-8\":return X(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*r;case\"hex\":return r>>>1;case\"base64\":return G(e).length;default:if(o)return n?-1:X(e).length;t=(\"\"+t).toLowerCase(),o=!0}}function m(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return\"\";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return\"\";if((r>>>=0)<=(t>>>=0))return\"\";for(e||(e=\"utf8\");;)switch(e){case\"hex\":return R(this,t,r);case\"utf8\":case\"utf-8\":return O(this,t,r);case\"ascii\":return A(this,t,r);case\"latin1\":case\"binary\":return P(this,t,r);case\"base64\":return T(this,t,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return j(this,t,r);default:if(n)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase(),n=!0}}function v(e,t,r){const n=e[t];e[t]=e[r],e[r]=n}function g(e,t,r,n,o){if(0===e.length)return-1;if(\"string\"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),Q(r=+r)&&(r=o?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(o)return-1;r=e.length-1}else if(r<0){if(!o)return-1;r=0}if(\"string\"==typeof t&&(t=u.from(t,n)),u.isBuffer(t))return 0===t.length?-1:b(e,t,r,n,o);if(\"number\"==typeof t)return t&=255,\"function\"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):b(e,[t],r,n,o);throw new TypeError(\"val must be string, number or Buffer\")}function b(e,t,r,n,o){let i,a=1,s=e.length,u=t.length;if(void 0!==n&&(\"ucs2\"===(n=String(n).toLowerCase())||\"ucs-2\"===n||\"utf16le\"===n||\"utf-16le\"===n)){if(e.length<2||t.length<2)return-1;a=2,s/=2,u/=2,r/=2}function c(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(o){let n=-1;for(i=r;i<s;i++)if(c(e,i)===c(t,-1===n?0:i-n)){if(-1===n&&(n=i),i-n+1===u)return n*a}else-1!==n&&(i-=i-n),n=-1}else for(r+u>s&&(r=s-u),i=r;i>=0;i--){let r=!0;for(let n=0;n<u;n++)if(c(e,i+n)!==c(t,n)){r=!1;break}if(r)return i}return-1}function w(e,t,r,n){r=Number(r)||0;const o=e.length-r;n?(n=Number(n))>o&&(n=o):n=o;const i=t.length;let a;for(n>i/2&&(n=i/2),a=0;a<n;++a){const n=parseInt(t.substr(2*a,2),16);if(Q(n))return a;e[r+a]=n}return a}function S(e,t,r,n){return W(X(t,e.length-r),e,r,n)}function E(e,t,r,n){return W(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function _(e,t,r,n){return W(G(t),e,r,n)}function k(e,t,r,n){return W(function(e,t){let r,n,o;const i=[];for(let a=0;a<e.length&&!((t-=2)<0);++a)r=e.charCodeAt(a),n=r>>8,o=r%256,i.push(o),i.push(n);return i}(t,e.length-r),e,r,n)}function T(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function O(e,t,r){r=Math.min(e.length,r);const n=[];let o=t;for(;o<r;){const t=e[o];let i=null,a=t>239?4:t>223?3:t>191?2:1;if(o+a<=r){let r,n,s,u;switch(a){case 1:t<128&&(i=t);break;case 2:r=e[o+1],128==(192&r)&&(u=(31&t)<<6|63&r,u>127&&(i=u));break;case 3:r=e[o+1],n=e[o+2],128==(192&r)&&128==(192&n)&&(u=(15&t)<<12|(63&r)<<6|63&n,u>2047&&(u<55296||u>57343)&&(i=u));break;case 4:r=e[o+1],n=e[o+2],s=e[o+3],128==(192&r)&&128==(192&n)&&128==(192&s)&&(u=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&s,u>65535&&u<1114112&&(i=u))}}null===i?(i=65533,a=1):i>65535&&(i-=65536,n.push(i>>>10&1023|55296),i=56320|1023&i),n.push(i),o+=a}return function(e){const t=e.length;if(t<=x)return String.fromCharCode.apply(String,e);let r=\"\",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=x));return r}(n)}t.kMaxLength=a,u.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),u.TYPED_ARRAY_SUPPORT||\"undefined\"==typeof console||\"function\"!=typeof console.error||console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"),Object.defineProperty(u.prototype,\"parent\",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,\"offset\",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}}),u.poolSize=8192,u.from=function(e,t,r){return c(e,t,r)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array),u.alloc=function(e,t,r){return function(e,t,r){return l(e),e<=0?s(e):void 0!==t?\"string\"==typeof r?s(e).fill(t,r):s(e).fill(t):s(e)}(e,t,r)},u.allocUnsafe=function(e){return f(e)},u.allocUnsafeSlow=function(e){return f(e)},u.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==u.prototype},u.compare=function(e,t){if($(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),$(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let o=0,i=Math.min(r,n);o<i;++o)if(e[o]!==t[o]){r=e[o],n=t[o];break}return r<n?-1:n<r?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},u.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const n=u.allocUnsafe(t);let o=0;for(r=0;r<e.length;++r){let t=e[r];if($(t,Uint8Array))o+t.length>n.length?(u.isBuffer(t)||(t=u.from(t)),t.copy(n,o)):Uint8Array.prototype.set.call(n,t,o);else{if(!u.isBuffer(t))throw new TypeError('\"list\" argument must be an Array of Buffers');t.copy(n,o)}o+=t.length}return n},u.byteLength=y,u.prototype._isBuffer=!0,u.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(let t=0;t<e;t+=2)v(this,t,t+1);return this},u.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(let t=0;t<e;t+=4)v(this,t,t+3),v(this,t+1,t+2);return this},u.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(let t=0;t<e;t+=8)v(this,t,t+7),v(this,t+1,t+6),v(this,t+2,t+5),v(this,t+3,t+4);return this},u.prototype.toString=function(){const e=this.length;return 0===e?\"\":0===arguments.length?O(this,0,e):m.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){let e=\"\";const r=t.INSPECT_MAX_BYTES;return e=this.toString(\"hex\",0,r).replace(/(.{2})/g,\"$1 \").trim(),this.length>r&&(e+=\" ... \"),\"<Buffer \"+e+\">\"},i&&(u.prototype[i]=u.prototype.inspect),u.prototype.compare=function(e,t,r,n,o){if($(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),!u.isBuffer(e))throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===o&&(o=this.length),t<0||r>e.length||n<0||o>this.length)throw new RangeError(\"out of range index\");if(n>=o&&t>=r)return 0;if(n>=o)return-1;if(t>=r)return 1;if(this===e)return 0;let i=(o>>>=0)-(n>>>=0),a=(r>>>=0)-(t>>>=0);const s=Math.min(i,a),c=this.slice(n,o),l=e.slice(t,r);for(let e=0;e<s;++e)if(c[e]!==l[e]){i=c[e],a=l[e];break}return i<a?-1:a<i?1:0},u.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},u.prototype.indexOf=function(e,t,r){return g(this,e,t,r,!0)},u.prototype.lastIndexOf=function(e,t,r){return g(this,e,t,r,!1)},u.prototype.write=function(e,t,r,n){if(void 0===t)n=\"utf8\",r=this.length,t=0;else if(void 0===r&&\"string\"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n=\"utf8\")):(n=r,r=void 0)}const o=this.length-t;if((void 0===r||r>o)&&(r=o),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");n||(n=\"utf8\");let i=!1;for(;;)switch(n){case\"hex\":return w(this,e,t,r);case\"utf8\":case\"utf-8\":return S(this,e,t,r);case\"ascii\":case\"latin1\":case\"binary\":return E(this,e,t,r);case\"base64\":return _(this,e,t,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return k(this,e,t,r);default:if(i)throw new TypeError(\"Unknown encoding: \"+n);n=(\"\"+n).toLowerCase(),i=!0}},u.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};const x=4096;function A(e,t,r){let n=\"\";r=Math.min(e.length,r);for(let o=t;o<r;++o)n+=String.fromCharCode(127&e[o]);return n}function P(e,t,r){let n=\"\";r=Math.min(e.length,r);for(let o=t;o<r;++o)n+=String.fromCharCode(e[o]);return n}function R(e,t,r){const n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let o=\"\";for(let n=t;n<r;++n)o+=Y[e[n]];return o}function j(e,t,r){const n=e.slice(t,r);let o=\"\";for(let e=0;e<n.length-1;e+=2)o+=String.fromCharCode(n[e]+256*n[e+1]);return o}function C(e,t,r){if(e%1!=0||e<0)throw new RangeError(\"offset is not uint\");if(e+t>r)throw new RangeError(\"Trying to access beyond buffer length\")}function I(e,t,r,n,o,i){if(!u.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(t>o||t<i)throw new RangeError('\"value\" argument is out of bounds');if(r+n>e.length)throw new RangeError(\"Index out of range\")}function L(e,t,r,n,o){q(t,n,o,e,r,7);let i=Number(t&BigInt(4294967295));e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=a,a>>=8,e[r++]=a,a>>=8,e[r++]=a,a>>=8,e[r++]=a,r}function B(e,t,r,n,o){q(t,n,o,e,r,7);let i=Number(t&BigInt(4294967295));e[r+7]=i,i>>=8,e[r+6]=i,i>>=8,e[r+5]=i,i>>=8,e[r+4]=i;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=a,a>>=8,e[r+2]=a,a>>=8,e[r+1]=a,a>>=8,e[r]=a,r+8}function N(e,t,r,n,o,i){if(r+n>e.length)throw new RangeError(\"Index out of range\");if(r<0)throw new RangeError(\"Index out of range\")}function U(e,t,r,n,i){return t=+t,r>>>=0,i||N(e,0,r,4),o.write(e,t,r,n,23,4),r+4}function M(e,t,r,n,i){return t=+t,r>>>=0,i||N(e,0,r,8),o.write(e,t,r,n,52,8),r+8}u.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,u.prototype),n},u.prototype.readUintLE=u.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e],o=1,i=0;for(;++i<t&&(o*=256);)n+=this[e+i]*o;return n},u.prototype.readUintBE=u.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e+--t],o=1;for(;t>0&&(o*=256);)n+=this[e+--t]*o;return n},u.prototype.readUint8=u.prototype.readUInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),this[e]},u.prototype.readUint16LE=u.prototype.readUInt16LE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUint16BE=u.prototype.readUInt16BE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUint32LE=u.prototype.readUInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUint32BE=u.prototype.readUInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readBigUInt64LE=J((function(e){K(e>>>=0,\"offset\");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||H(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,o=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(n)+(BigInt(o)<<BigInt(32))})),u.prototype.readBigUInt64BE=J((function(e){K(e>>>=0,\"offset\");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||H(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],o=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(o)})),u.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e],o=1,i=0;for(;++i<t&&(o*=256);)n+=this[e+i]*o;return o*=128,n>=o&&(n-=Math.pow(2,8*t)),n},u.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=t,o=1,i=this[e+--n];for(;n>0&&(o*=256);)i+=this[e+--n]*o;return o*=128,i>=o&&(i-=Math.pow(2,8*t)),i},u.prototype.readInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){e>>>=0,t||C(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt16BE=function(e,t){e>>>=0,t||C(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readBigInt64LE=J((function(e){K(e>>>=0,\"offset\");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||H(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),u.prototype.readBigInt64BE=J((function(e){K(e>>>=0,\"offset\");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||H(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)})),u.prototype.readFloatLE=function(e,t){return e>>>=0,t||C(e,4,this.length),o.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return e>>>=0,t||C(e,4,this.length),o.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return e>>>=0,t||C(e,8,this.length),o.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return e>>>=0,t||C(e,8,this.length),o.read(this,e,!1,52,8)},u.prototype.writeUintLE=u.prototype.writeUIntLE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){I(this,e,t,r,Math.pow(2,8*r)-1,0)}let o=1,i=0;for(this[t]=255&e;++i<r&&(o*=256);)this[t+i]=e/o&255;return t+r},u.prototype.writeUintBE=u.prototype.writeUIntBE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){I(this,e,t,r,Math.pow(2,8*r)-1,0)}let o=r-1,i=1;for(this[t+o]=255&e;--o>=0&&(i*=256);)this[t+o]=e/i&255;return t+r},u.prototype.writeUint8=u.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,1,255,0),this[t]=255&e,t+1},u.prototype.writeUint16LE=u.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},u.prototype.writeUint16BE=u.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},u.prototype.writeUint32LE=u.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},u.prototype.writeUint32BE=u.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},u.prototype.writeBigUInt64LE=J((function(e,t=0){return L(this,e,t,BigInt(0),BigInt(\"0xffffffffffffffff\"))})),u.prototype.writeBigUInt64BE=J((function(e,t=0){return B(this,e,t,BigInt(0),BigInt(\"0xffffffffffffffff\"))})),u.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);I(this,e,t,r,n-1,-n)}let o=0,i=1,a=0;for(this[t]=255&e;++o<r&&(i*=256);)e<0&&0===a&&0!==this[t+o-1]&&(a=1),this[t+o]=(e/i|0)-a&255;return t+r},u.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);I(this,e,t,r,n-1,-n)}let o=r-1,i=1,a=0;for(this[t+o]=255&e;--o>=0&&(i*=256);)e<0&&0===a&&0!==this[t+o+1]&&(a=1),this[t+o]=(e/i|0)-a&255;return t+r},u.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},u.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},u.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},u.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},u.prototype.writeBigInt64LE=J((function(e,t=0){return L(this,e,t,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))})),u.prototype.writeBigInt64BE=J((function(e,t=0){return B(this,e,t,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))})),u.prototype.writeFloatLE=function(e,t,r){return U(this,e,t,!0,r)},u.prototype.writeFloatBE=function(e,t,r){return U(this,e,t,!1,r)},u.prototype.writeDoubleLE=function(e,t,r){return M(this,e,t,!0,r)},u.prototype.writeDoubleBE=function(e,t,r){return M(this,e,t,!1,r)},u.prototype.copy=function(e,t,r,n){if(!u.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError(\"targetStart out of bounds\");if(r<0||r>=this.length)throw new RangeError(\"Index out of range\");if(n<0)throw new RangeError(\"sourceEnd out of bounds\");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);const o=n-r;return this===e&&\"function\"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),o},u.prototype.fill=function(e,t,r,n){if(\"string\"==typeof e){if(\"string\"==typeof t?(n=t,t=0,r=this.length):\"string\"==typeof r&&(n=r,r=this.length),void 0!==n&&\"string\"!=typeof n)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof n&&!u.isEncoding(n))throw new TypeError(\"Unknown encoding: \"+n);if(1===e.length){const t=e.charCodeAt(0);(\"utf8\"===n&&t<128||\"latin1\"===n)&&(e=t)}}else\"number\"==typeof e?e&=255:\"boolean\"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError(\"Out of range index\");if(r<=t)return this;let o;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),\"number\"==typeof e)for(o=t;o<r;++o)this[o]=e;else{const i=u.isBuffer(e)?e:u.from(e,n),a=i.length;if(0===a)throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"');for(o=0;o<r-t;++o)this[o+t]=i[o%a]}return this};const D={};function F(e,t,r){D[e]=class extends r{constructor(){super(),Object.defineProperty(this,\"message\",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,\"code\",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function V(e){let t=\"\",r=e.length;const n=\"-\"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function q(e,t,r,n,o,i){if(e>r||e<t){const n=\"bigint\"==typeof t?\"n\":\"\";let o;throw o=i>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(i+1)}${n}`:`>= -(2${n} ** ${8*(i+1)-1}${n}) and < 2 ** ${8*(i+1)-1}${n}`:`>= ${t}${n} and <= ${r}${n}`,new D.ERR_OUT_OF_RANGE(\"value\",o,e)}!function(e,t,r){K(t,\"offset\"),void 0!==e[t]&&void 0!==e[t+r]||H(t,e.length-(r+1))}(n,o,i)}function K(e,t){if(\"number\"!=typeof e)throw new D.ERR_INVALID_ARG_TYPE(t,\"number\",e)}function H(e,t,r){if(Math.floor(e)!==e)throw K(e,r),new D.ERR_OUT_OF_RANGE(r||\"offset\",\"an integer\",e);if(t<0)throw new D.ERR_BUFFER_OUT_OF_BOUNDS;throw new D.ERR_OUT_OF_RANGE(r||\"offset\",`>= ${r?1:0} and <= ${t}`,e)}F(\"ERR_BUFFER_OUT_OF_BOUNDS\",(function(e){return e?`${e} is outside of buffer bounds`:\"Attempt to access memory outside buffer bounds\"}),RangeError),F(\"ERR_INVALID_ARG_TYPE\",(function(e,t){return`The \"${e}\" argument must be of type number. Received type ${typeof t}`}),TypeError),F(\"ERR_OUT_OF_RANGE\",(function(e,t,r){let n=`The value of \"${e}\" is out of range.`,o=r;return Number.isInteger(r)&&Math.abs(r)>2**32?o=V(String(r)):\"bigint\"==typeof r&&(o=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(o=V(o)),o+=\"n\"),n+=` It must be ${t}. Received ${o}`,n}),RangeError);const z=/[^+/0-9A-Za-z-_]/g;function X(e,t){let r;t=t||1/0;const n=e.length;let o=null;const i=[];for(let a=0;a<n;++a){if(r=e.charCodeAt(a),r>55295&&r<57344){if(!o){if(r>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(a+1===n){(t-=3)>-1&&i.push(239,191,189);continue}o=r;continue}if(r<56320){(t-=3)>-1&&i.push(239,191,189),o=r;continue}r=65536+(o-55296<<10|r-56320)}else o&&(t-=3)>-1&&i.push(239,191,189);if(o=null,r<128){if((t-=1)<0)break;i.push(r)}else if(r<2048){if((t-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error(\"Invalid code point\");if((t-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function G(e){return n.toByteArray(function(e){if((e=(e=e.split(\"=\")[0]).trim().replace(z,\"\")).length<2)return\"\";for(;e.length%4!=0;)e+=\"=\";return e}(e))}function W(e,t,r,n){let o;for(o=0;o<n&&!(o+r>=t.length||o>=e.length);++o)t[o+r]=e[o];return o}function $(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Q(e){return e!=e}const Y=function(){const e=\"0123456789abcdef\",t=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let o=0;o<16;++o)t[n+o]=e[r]+e[o]}return t}();function J(e){return\"undefined\"==typeof BigInt?Z:e}function Z(){throw new Error(\"BigInt not supported\")}},6866:e=>{e.exports={100:\"Continue\",101:\"Switching Protocols\",102:\"Processing\",200:\"OK\",201:\"Created\",202:\"Accepted\",203:\"Non-Authoritative Information\",204:\"No Content\",205:\"Reset Content\",206:\"Partial Content\",207:\"Multi-Status\",208:\"Already Reported\",226:\"IM Used\",300:\"Multiple Choices\",301:\"Moved Permanently\",302:\"Found\",303:\"See Other\",304:\"Not Modified\",305:\"Use Proxy\",307:\"Temporary Redirect\",308:\"Permanent Redirect\",400:\"Bad Request\",401:\"Unauthorized\",402:\"Payment Required\",403:\"Forbidden\",404:\"Not Found\",405:\"Method Not Allowed\",406:\"Not Acceptable\",407:\"Proxy Authentication Required\",408:\"Request Timeout\",409:\"Conflict\",410:\"Gone\",411:\"Length Required\",412:\"Precondition Failed\",413:\"Payload Too Large\",414:\"URI Too Long\",415:\"Unsupported Media Type\",416:\"Range Not Satisfiable\",417:\"Expectation Failed\",418:\"I'm a teapot\",421:\"Misdirected Request\",422:\"Unprocessable Entity\",423:\"Locked\",424:\"Failed Dependency\",425:\"Unordered Collection\",426:\"Upgrade Required\",428:\"Precondition Required\",429:\"Too Many Requests\",431:\"Request Header Fields Too Large\",451:\"Unavailable For Legal Reasons\",500:\"Internal Server Error\",501:\"Not Implemented\",502:\"Bad Gateway\",503:\"Service Unavailable\",504:\"Gateway Timeout\",505:\"HTTP Version Not Supported\",506:\"Variant Also Negotiates\",507:\"Insufficient Storage\",508:\"Loop Detected\",509:\"Bandwidth Limit Exceeded\",510:\"Not Extended\",511:\"Network Authentication Required\"}},3144:(e,t,r)=>{\"use strict\";var n=r(6743),o=r(1002),i=r(76),a=r(7119);e.exports=a||n.call(i,o)},2205:(e,t,r)=>{\"use strict\";var n=r(6743),o=r(1002),i=r(3144);e.exports=function(){return i(n,o,arguments)}},1002:e=>{\"use strict\";e.exports=Function.prototype.apply},76:e=>{\"use strict\";e.exports=Function.prototype.call},3126:(e,t,r)=>{\"use strict\";var n=r(6743),o=r(9675),i=r(76),a=r(3144);e.exports=function(e){if(e.length<1||\"function\"!=typeof e[0])throw new o(\"a function is required\");return a(n,i,e)}},7119:e=>{\"use strict\";e.exports=\"undefined\"!=typeof Reflect&&Reflect&&Reflect.apply},8075:(e,t,r)=>{\"use strict\";var n=r(453),o=r(487),i=o(n(\"String.prototype.indexOf\"));e.exports=function(e,t){var r=n(e,!!t);return\"function\"==typeof r&&i(e,\".prototype.\")>-1?o(r):r}},487:(e,t,r)=>{\"use strict\";var n=r(6897),o=r(655),i=r(3126),a=r(2205);e.exports=function(e){var t=i(arguments),r=e.length-(arguments.length-1);return n(t,1+(r>0?r:0),!0)},o?o(e.exports,\"apply\",{value:a}):e.exports.apply=a},6556:(e,t,r)=>{\"use strict\";var n=r(453),o=r(3126),i=o([n(\"%String.prototype.indexOf%\")]);e.exports=function(e,t){var r=n(e,!!t);return\"function\"==typeof r&&i(e,\".prototype.\")>-1?o([r]):r}},41:(e,t,r)=>{\"use strict\";var n=r(655),o=r(8068),i=r(9675),a=r(5795);e.exports=function(e,t,r){if(!e||\"object\"!=typeof e&&\"function\"!=typeof e)throw new i(\"`obj` must be an object or a function`\");if(\"string\"!=typeof t&&\"symbol\"!=typeof t)throw new i(\"`property` must be a string or a symbol`\");if(arguments.length>3&&\"boolean\"!=typeof arguments[3]&&null!==arguments[3])throw new i(\"`nonEnumerable`, if provided, must be a boolean or null\");if(arguments.length>4&&\"boolean\"!=typeof arguments[4]&&null!==arguments[4])throw new i(\"`nonWritable`, if provided, must be a boolean or null\");if(arguments.length>5&&\"boolean\"!=typeof arguments[5]&&null!==arguments[5])throw new i(\"`nonConfigurable`, if provided, must be a boolean or null\");if(arguments.length>6&&\"boolean\"!=typeof arguments[6])throw new i(\"`loose`, if provided, must be a boolean\");var s=arguments.length>3?arguments[3]:null,u=arguments.length>4?arguments[4]:null,c=arguments.length>5?arguments[5]:null,l=arguments.length>6&&arguments[6],f=!!a&&a(e,t);if(n)n(e,t,{configurable:null===c&&f?f.configurable:!c,enumerable:null===s&&f?f.enumerable:!s,value:r,writable:null===u&&f?f.writable:!u});else{if(!l&&(s||u||c))throw new o(\"This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.\");e[t]=r}}},7176:(e,t,r)=>{\"use strict\";var n=r(3126),o=r(5795),i=[].__proto__===Array.prototype&&o&&o(Object.prototype,\"__proto__\"),a=Object,s=a.getPrototypeOf;e.exports=i&&\"function\"==typeof i.get?n([i.get]):\"function\"==typeof s&&function(e){return s(null==e?e:a(e))}},655:e=>{\"use strict\";var t=Object.defineProperty||!1;if(t)try{t({},\"a\",{value:1})}catch(e){t=!1}e.exports=t},1237:e=>{\"use strict\";e.exports=EvalError},9383:e=>{\"use strict\";e.exports=Error},9290:e=>{\"use strict\";e.exports=RangeError},9538:e=>{\"use strict\";e.exports=ReferenceError},8068:e=>{\"use strict\";e.exports=SyntaxError},9675:e=>{\"use strict\";e.exports=TypeError},5345:e=>{\"use strict\";e.exports=URIError},9612:e=>{\"use strict\";e.exports=Object},7007:e=>{\"use strict\";var t,r=\"object\"==typeof Reflect?Reflect:null,n=r&&\"function\"==typeof r.apply?r.apply:function(e,t,r){return Function.prototype.apply.call(e,t,r)};t=r&&\"function\"==typeof r.ownKeys?r.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var o=Number.isNaN||function(e){return e!=e};function i(){i.init.call(this)}e.exports=i,e.exports.once=function(e,t){return new Promise((function(r,n){function o(r){e.removeListener(t,i),n(r)}function i(){\"function\"==typeof e.removeListener&&e.removeListener(\"error\",o),r([].slice.call(arguments))}y(e,t,i,{once:!0}),\"error\"!==t&&function(e,t,r){\"function\"==typeof e.on&&y(e,\"error\",t,r)}(e,o,{once:!0})}))},i.EventEmitter=i,i.prototype._events=void 0,i.prototype._eventsCount=0,i.prototype._maxListeners=void 0;var a=10;function s(e){if(\"function\"!=typeof e)throw new TypeError('The \"listener\" argument must be of type Function. Received type '+typeof e)}function u(e){return void 0===e._maxListeners?i.defaultMaxListeners:e._maxListeners}function c(e,t,r,n){var o,i,a,c;if(s(r),void 0===(i=e._events)?(i=e._events=Object.create(null),e._eventsCount=0):(void 0!==i.newListener&&(e.emit(\"newListener\",t,r.listener?r.listener:r),i=e._events),a=i[t]),void 0===a)a=i[t]=r,++e._eventsCount;else if(\"function\"==typeof a?a=i[t]=n?[r,a]:[a,r]:n?a.unshift(r):a.push(r),(o=u(e))>0&&a.length>o&&!a.warned){a.warned=!0;var l=new Error(\"Possible EventEmitter memory leak detected. \"+a.length+\" \"+String(t)+\" listeners added. Use emitter.setMaxListeners() to increase limit\");l.name=\"MaxListenersExceededWarning\",l.emitter=e,l.type=t,l.count=a.length,c=l,console&&console.warn&&console.warn(c)}return e}function l(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function f(e,t,r){var n={fired:!1,wrapFn:void 0,target:e,type:t,listener:r},o=l.bind(n);return o.listener=r,n.wrapFn=o,o}function p(e,t,r){var n=e._events;if(void 0===n)return[];var o=n[t];return void 0===o?[]:\"function\"==typeof o?r?[o.listener||o]:[o]:r?function(e){for(var t=new Array(e.length),r=0;r<t.length;++r)t[r]=e[r].listener||e[r];return t}(o):h(o,o.length)}function d(e){var t=this._events;if(void 0!==t){var r=t[e];if(\"function\"==typeof r)return 1;if(void 0!==r)return r.length}return 0}function h(e,t){for(var r=new Array(t),n=0;n<t;++n)r[n]=e[n];return r}function y(e,t,r,n){if(\"function\"==typeof e.on)n.once?e.once(t,r):e.on(t,r);else{if(\"function\"!=typeof e.addEventListener)throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,(function o(i){n.once&&e.removeEventListener(t,o),r(i)}))}}Object.defineProperty(i,\"defaultMaxListeners\",{enumerable:!0,get:function(){return a},set:function(e){if(\"number\"!=typeof e||e<0||o(e))throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received '+e+\".\");a=e}}),i.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},i.prototype.setMaxListeners=function(e){if(\"number\"!=typeof e||e<0||o(e))throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received '+e+\".\");return this._maxListeners=e,this},i.prototype.getMaxListeners=function(){return u(this)},i.prototype.emit=function(e){for(var t=[],r=1;r<arguments.length;r++)t.push(arguments[r]);var o=\"error\"===e,i=this._events;if(void 0!==i)o=o&&void 0===i.error;else if(!o)return!1;if(o){var a;if(t.length>0&&(a=t[0]),a instanceof Error)throw a;var s=new Error(\"Unhandled error.\"+(a?\" (\"+a.message+\")\":\"\"));throw s.context=a,s}var u=i[e];if(void 0===u)return!1;if(\"function\"==typeof u)n(u,this,t);else{var c=u.length,l=h(u,c);for(r=0;r<c;++r)n(l[r],this,t)}return!0},i.prototype.addListener=function(e,t){return c(this,e,t,!1)},i.prototype.on=i.prototype.addListener,i.prototype.prependListener=function(e,t){return c(this,e,t,!0)},i.prototype.once=function(e,t){return s(t),this.on(e,f(this,e,t)),this},i.prototype.prependOnceListener=function(e,t){return s(t),this.prependListener(e,f(this,e,t)),this},i.prototype.removeListener=function(e,t){var r,n,o,i,a;if(s(t),void 0===(n=this._events))return this;if(void 0===(r=n[e]))return this;if(r===t||r.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete n[e],n.removeListener&&this.emit(\"removeListener\",e,r.listener||t));else if(\"function\"!=typeof r){for(o=-1,i=r.length-1;i>=0;i--)if(r[i]===t||r[i].listener===t){a=r[i].listener,o=i;break}if(o<0)return this;0===o?r.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(r,o),1===r.length&&(n[e]=r[0]),void 0!==n.removeListener&&this.emit(\"removeListener\",e,a||t)}return this},i.prototype.off=i.prototype.removeListener,i.prototype.removeAllListeners=function(e){var t,r,n;if(void 0===(r=this._events))return this;if(void 0===r.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==r[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete r[e]),this;if(0===arguments.length){var o,i=Object.keys(r);for(n=0;n<i.length;++n)\"removeListener\"!==(o=i[n])&&this.removeAllListeners(o);return this.removeAllListeners(\"removeListener\"),this._events=Object.create(null),this._eventsCount=0,this}if(\"function\"==typeof(t=r[e]))this.removeListener(e,t);else if(void 0!==t)for(n=t.length-1;n>=0;n--)this.removeListener(e,t[n]);return this},i.prototype.listeners=function(e){return p(this,e,!0)},i.prototype.rawListeners=function(e){return p(this,e,!1)},i.listenerCount=function(e,t){return\"function\"==typeof e.listenerCount?e.listenerCount(t):d.call(e,t)},i.prototype.listenerCount=d,i.prototype.eventNames=function(){return this._eventsCount>0?t(this._events):[]}},1731:(e,t,r)=>{var n=r(8287).Buffer,o=r(8835).parse,i=r(7007),a=r(1083),s=r(1568),u=r(537),c=[\"pfx\",\"key\",\"passphrase\",\"cert\",\"ca\",\"ciphers\",\"rejectUnauthorized\",\"secureProtocol\",\"servername\",\"checkServerIdentity\"],l=[239,187,191],f=262144,p=/^(cookie|authorization)$/i;function d(e,t){var r=d.CONNECTING,i=t&&t.headers,u=!1;Object.defineProperty(this,\"readyState\",{get:function(){return r}}),Object.defineProperty(this,\"url\",{get:function(){return e}});var m,v=this;function g(t){r!==d.CLOSED&&(r=d.CONNECTING,T(\"error\",new h(\"error\",{message:t})),_&&(e=_,_=null,u=!1),setTimeout((function(){r!==d.CONNECTING||v.connectionInProgress||(v.connectionInProgress=!0,k())}),v.reconnectInterval))}v.reconnectInterval=1e3,v.connectionInProgress=!1;var b=\"\";i&&i[\"Last-Event-ID\"]&&(b=i[\"Last-Event-ID\"],delete i[\"Last-Event-ID\"]);var w=!1,S=\"\",E=\"\",_=null;function k(){var y=o(e),S=\"https:\"===y.protocol;if(y.headers={\"Cache-Control\":\"no-cache\",Accept:\"text/event-stream\"},b&&(y.headers[\"Last-Event-ID\"]=b),i){var E=u?function(e){var t={};for(var r in e)p.test(r)||(t[r]=e[r]);return t}(i):i;for(var x in E){var A=E[x];A&&(y.headers[x]=A)}}if(y.rejectUnauthorized=!(t&&!t.rejectUnauthorized),t&&void 0!==t.createConnection&&(y.createConnection=t.createConnection),t&&t.proxy){var P=o(t.proxy);S=\"https:\"===P.protocol,y.protocol=S?\"https:\":\"http:\",y.path=e,y.headers.Host=y.host,y.hostname=P.hostname,y.host=P.host,y.port=P.port}if(t&&t.https)for(var R in t.https)if(-1!==c.indexOf(R)){var j=t.https[R];void 0!==j&&(y[R]=j)}t&&void 0!==t.withCredentials&&(y.withCredentials=t.withCredentials),m=(S?a:s).request(y,(function(t){if(v.connectionInProgress=!1,500===t.statusCode||502===t.statusCode||503===t.statusCode||504===t.statusCode)return T(\"error\",new h(\"error\",{status:t.statusCode,message:t.statusMessage})),void g();if(301===t.statusCode||302===t.statusCode||307===t.statusCode){var o=t.headers.location;if(!o)return void T(\"error\",new h(\"error\",{status:t.statusCode,message:t.statusMessage}));var i=new URL(e).origin,a=new URL(o).origin;return u=i!==a,307===t.statusCode&&(_=e),e=o,void process.nextTick(k)}if(200!==t.statusCode)return T(\"error\",new h(\"error\",{status:t.statusCode,message:t.statusMessage})),v.close();var s,c;r=d.OPEN,t.on(\"close\",(function(){t.removeAllListeners(\"close\"),t.removeAllListeners(\"end\"),g()})),t.on(\"end\",(function(){t.removeAllListeners(\"close\"),t.removeAllListeners(\"end\"),g()})),T(\"open\",new h(\"open\"));var p=0,y=-1,m=0,b=0;t.on(\"data\",(function(e){s?(e.length>s.length-b&&((m=2*s.length+e.length)>f&&(m=s.length+e.length+f),c=n.alloc(m),s.copy(c,0,0,b),s=c),e.copy(s,b),b+=e.length):(function(e){return l.every((function(t,r){return e[r]===t}))}(s=e)&&(s=s.slice(l.length)),b=s.length);for(var t=0,r=b;t<r;){w&&(10===s[t]&&++t,w=!1);for(var o,i=-1,a=y,u=p;i<0&&u<r;++u)58===(o=s[u])?a<0&&(a=u-t):13===o?(w=!0,i=u-t):10===o&&(i=u-t);if(i<0){p=r-t,y=a;break}p=0,y=-1,O(s,t,a,i),t+=i+1}t===r?(s=void 0,b=0):t>0&&(s=s.slice(t,b),b=s.length)}))})),m.on(\"error\",(function(e){v.connectionInProgress=!1,g(e.message)})),m.setNoDelay&&m.setNoDelay(!0),m.end()}function T(){v.listeners(arguments[0]).length>0&&v.emit.apply(v,arguments)}function O(t,r,n,o){if(0===o){if(S.length>0){var i=E||\"message\";T(i,new y(i,{data:S.slice(0,-1),lastEventId:b,origin:new URL(e).origin})),S=\"\"}E=void 0}else if(n>0){var a=n<0,s=0,u=t.slice(r,r+(a?o:n)).toString();r+=s=a?o:32!==t[r+n+1]?n+1:n+2;var c=o-s,l=t.slice(r,r+c).toString();if(\"data\"===u)S+=l+\"\\n\";else if(\"event\"===u)E=l;else if(\"id\"===u)b=l;else if(\"retry\"===u){var f=parseInt(l,10);Number.isNaN(f)||(v.reconnectInterval=f)}}}k(),this._close=function(){r!==d.CLOSED&&(r=d.CLOSED,m.abort&&m.abort(),m.xhr&&m.xhr.abort&&m.xhr.abort())}}function h(e,t){if(Object.defineProperty(this,\"type\",{writable:!1,value:e,enumerable:!0}),t)for(var r in t)t.hasOwnProperty(r)&&Object.defineProperty(this,r,{writable:!1,value:t[r],enumerable:!0})}function y(e,t){for(var r in Object.defineProperty(this,\"type\",{writable:!1,value:e,enumerable:!0}),t)t.hasOwnProperty(r)&&Object.defineProperty(this,r,{writable:!1,value:t[r],enumerable:!0})}e.exports=d,u.inherits(d,i.EventEmitter),d.prototype.constructor=d,[\"open\",\"error\",\"message\"].forEach((function(e){Object.defineProperty(d.prototype,\"on\"+e,{get:function(){var t=this.listeners(e)[0];return t?t._listener?t._listener:t:void 0},set:function(t){this.removeAllListeners(e),this.addEventListener(e,t)}})})),Object.defineProperty(d,\"CONNECTING\",{enumerable:!0,value:0}),Object.defineProperty(d,\"OPEN\",{enumerable:!0,value:1}),Object.defineProperty(d,\"CLOSED\",{enumerable:!0,value:2}),d.prototype.CONNECTING=0,d.prototype.OPEN=1,d.prototype.CLOSED=2,d.prototype.close=function(){this._close()},d.prototype.addEventListener=function(e,t){\"function\"==typeof t&&(t._listener=t,this.on(e,t))},d.prototype.dispatchEvent=function(e){if(!e.type)throw new Error(\"UNSPECIFIED_EVENT_TYPE_ERR\");this.emit(e.type,e.detail)},d.prototype.removeEventListener=function(e,t){\"function\"==typeof t&&(t._listener=void 0,this.removeListener(e,t))}},2682:(e,t,r)=>{\"use strict\";var n=r(9600),o=Object.prototype.toString,i=Object.prototype.hasOwnProperty;e.exports=function(e,t,r){if(!n(t))throw new TypeError(\"iterator must be a function\");var a;arguments.length>=3&&(a=r),\"[object Array]\"===o.call(e)?function(e,t,r){for(var n=0,o=e.length;n<o;n++)i.call(e,n)&&(null==r?t(e[n],n,e):t.call(r,e[n],n,e))}(e,t,a):\"string\"==typeof e?function(e,t,r){for(var n=0,o=e.length;n<o;n++)null==r?t(e.charAt(n),n,e):t.call(r,e.charAt(n),n,e)}(e,t,a):function(e,t,r){for(var n in e)i.call(e,n)&&(null==r?t(e[n],n,e):t.call(r,e[n],n,e))}(e,t,a)}},1734:e=>{\"use strict\";var t=Object.prototype.toString,r=Math.max,n=function(e,t){for(var r=[],n=0;n<e.length;n+=1)r[n]=e[n];for(var o=0;o<t.length;o+=1)r[o+e.length]=t[o];return r};e.exports=function(e){var o=this;if(\"function\"!=typeof o||\"[object Function]\"!==t.apply(o))throw new TypeError(\"Function.prototype.bind called on incompatible \"+o);for(var i,a=function(e,t){for(var r=[],n=t||0,o=0;n<e.length;n+=1,o+=1)r[o]=e[n];return r}(arguments,1),s=r(0,o.length-a.length),u=[],c=0;c<s;c++)u[c]=\"$\"+c;if(i=Function(\"binder\",\"return function (\"+function(e,t){for(var r=\"\",n=0;n<e.length;n+=1)r+=e[n],n+1<e.length&&(r+=t);return r}(u,\",\")+\"){ return binder.apply(this,arguments); }\")((function(){if(this instanceof i){var t=o.apply(this,n(a,arguments));return Object(t)===t?t:this}return o.apply(e,n(a,arguments))})),o.prototype){var l=function(){};l.prototype=o.prototype,i.prototype=new l,l.prototype=null}return i}},6743:(e,t,r)=>{\"use strict\";var n=r(1734);e.exports=Function.prototype.bind||n},453:(e,t,r)=>{\"use strict\";var n,o=r(9612),i=r(9383),a=r(1237),s=r(9290),u=r(9538),c=r(8068),l=r(9675),f=r(5345),p=r(1514),d=r(8968),h=r(6188),y=r(8002),m=r(5880),v=Function,g=function(e){try{return v('\"use strict\"; return ('+e+\").constructor;\")()}catch(e){}},b=r(5795),w=r(655),S=function(){throw new l},E=b?function(){try{return S}catch(e){try{return b(arguments,\"callee\").get}catch(e){return S}}}():S,_=r(4039)(),k=r(7176),T=\"function\"==typeof Reflect&&Reflect.getPrototypeOf||o.getPrototypeOf||k,O=r(1002),x=r(76),A={},P=\"undefined\"!=typeof Uint8Array&&T?T(Uint8Array):n,R={__proto__:null,\"%AggregateError%\":\"undefined\"==typeof AggregateError?n:AggregateError,\"%Array%\":Array,\"%ArrayBuffer%\":\"undefined\"==typeof ArrayBuffer?n:ArrayBuffer,\"%ArrayIteratorPrototype%\":_&&T?T([][Symbol.iterator]()):n,\"%AsyncFromSyncIteratorPrototype%\":n,\"%AsyncFunction%\":A,\"%AsyncGenerator%\":A,\"%AsyncGeneratorFunction%\":A,\"%AsyncIteratorPrototype%\":A,\"%Atomics%\":\"undefined\"==typeof Atomics?n:Atomics,\"%BigInt%\":\"undefined\"==typeof BigInt?n:BigInt,\"%BigInt64Array%\":\"undefined\"==typeof BigInt64Array?n:BigInt64Array,\"%BigUint64Array%\":\"undefined\"==typeof BigUint64Array?n:BigUint64Array,\"%Boolean%\":Boolean,\"%DataView%\":\"undefined\"==typeof DataView?n:DataView,\"%Date%\":Date,\"%decodeURI%\":decodeURI,\"%decodeURIComponent%\":decodeURIComponent,\"%encodeURI%\":encodeURI,\"%encodeURIComponent%\":encodeURIComponent,\"%Error%\":i,\"%eval%\":eval,\"%EvalError%\":a,\"%Float32Array%\":\"undefined\"==typeof Float32Array?n:Float32Array,\"%Float64Array%\":\"undefined\"==typeof Float64Array?n:Float64Array,\"%FinalizationRegistry%\":\"undefined\"==typeof FinalizationRegistry?n:FinalizationRegistry,\"%Function%\":v,\"%GeneratorFunction%\":A,\"%Int8Array%\":\"undefined\"==typeof Int8Array?n:Int8Array,\"%Int16Array%\":\"undefined\"==typeof Int16Array?n:Int16Array,\"%Int32Array%\":\"undefined\"==typeof Int32Array?n:Int32Array,\"%isFinite%\":isFinite,\"%isNaN%\":isNaN,\"%IteratorPrototype%\":_&&T?T(T([][Symbol.iterator]())):n,\"%JSON%\":\"object\"==typeof JSON?JSON:n,\"%Map%\":\"undefined\"==typeof Map?n:Map,\"%MapIteratorPrototype%\":\"undefined\"!=typeof Map&&_&&T?T((new Map)[Symbol.iterator]()):n,\"%Math%\":Math,\"%Number%\":Number,\"%Object%\":o,\"%Object.getOwnPropertyDescriptor%\":b,\"%parseFloat%\":parseFloat,\"%parseInt%\":parseInt,\"%Promise%\":\"undefined\"==typeof Promise?n:Promise,\"%Proxy%\":\"undefined\"==typeof Proxy?n:Proxy,\"%RangeError%\":s,\"%ReferenceError%\":u,\"%Reflect%\":\"undefined\"==typeof Reflect?n:Reflect,\"%RegExp%\":RegExp,\"%Set%\":\"undefined\"==typeof Set?n:Set,\"%SetIteratorPrototype%\":\"undefined\"!=typeof Set&&_&&T?T((new Set)[Symbol.iterator]()):n,\"%SharedArrayBuffer%\":\"undefined\"==typeof SharedArrayBuffer?n:SharedArrayBuffer,\"%String%\":String,\"%StringIteratorPrototype%\":_&&T?T(\"\"[Symbol.iterator]()):n,\"%Symbol%\":_?Symbol:n,\"%SyntaxError%\":c,\"%ThrowTypeError%\":E,\"%TypedArray%\":P,\"%TypeError%\":l,\"%Uint8Array%\":\"undefined\"==typeof Uint8Array?n:Uint8Array,\"%Uint8ClampedArray%\":\"undefined\"==typeof Uint8ClampedArray?n:Uint8ClampedArray,\"%Uint16Array%\":\"undefined\"==typeof Uint16Array?n:Uint16Array,\"%Uint32Array%\":\"undefined\"==typeof Uint32Array?n:Uint32Array,\"%URIError%\":f,\"%WeakMap%\":\"undefined\"==typeof WeakMap?n:WeakMap,\"%WeakRef%\":\"undefined\"==typeof WeakRef?n:WeakRef,\"%WeakSet%\":\"undefined\"==typeof WeakSet?n:WeakSet,\"%Function.prototype.call%\":x,\"%Function.prototype.apply%\":O,\"%Object.defineProperty%\":w,\"%Math.abs%\":p,\"%Math.floor%\":d,\"%Math.max%\":h,\"%Math.min%\":y,\"%Math.pow%\":m};if(T)try{null.error}catch(e){var j=T(T(e));R[\"%Error.prototype%\"]=j}var C=function e(t){var r;if(\"%AsyncFunction%\"===t)r=g(\"async function () {}\");else if(\"%GeneratorFunction%\"===t)r=g(\"function* () {}\");else if(\"%AsyncGeneratorFunction%\"===t)r=g(\"async function* () {}\");else if(\"%AsyncGenerator%\"===t){var n=e(\"%AsyncGeneratorFunction%\");n&&(r=n.prototype)}else if(\"%AsyncIteratorPrototype%\"===t){var o=e(\"%AsyncGenerator%\");o&&T&&(r=T(o.prototype))}return R[t]=r,r},I={__proto__:null,\"%ArrayBufferPrototype%\":[\"ArrayBuffer\",\"prototype\"],\"%ArrayPrototype%\":[\"Array\",\"prototype\"],\"%ArrayProto_entries%\":[\"Array\",\"prototype\",\"entries\"],\"%ArrayProto_forEach%\":[\"Array\",\"prototype\",\"forEach\"],\"%ArrayProto_keys%\":[\"Array\",\"prototype\",\"keys\"],\"%ArrayProto_values%\":[\"Array\",\"prototype\",\"values\"],\"%AsyncFunctionPrototype%\":[\"AsyncFunction\",\"prototype\"],\"%AsyncGenerator%\":[\"AsyncGeneratorFunction\",\"prototype\"],\"%AsyncGeneratorPrototype%\":[\"AsyncGeneratorFunction\",\"prototype\",\"prototype\"],\"%BooleanPrototype%\":[\"Boolean\",\"prototype\"],\"%DataViewPrototype%\":[\"DataView\",\"prototype\"],\"%DatePrototype%\":[\"Date\",\"prototype\"],\"%ErrorPrototype%\":[\"Error\",\"prototype\"],\"%EvalErrorPrototype%\":[\"EvalError\",\"prototype\"],\"%Float32ArrayPrototype%\":[\"Float32Array\",\"prototype\"],\"%Float64ArrayPrototype%\":[\"Float64Array\",\"prototype\"],\"%FunctionPrototype%\":[\"Function\",\"prototype\"],\"%Generator%\":[\"GeneratorFunction\",\"prototype\"],\"%GeneratorPrototype%\":[\"GeneratorFunction\",\"prototype\",\"prototype\"],\"%Int8ArrayPrototype%\":[\"Int8Array\",\"prototype\"],\"%Int16ArrayPrototype%\":[\"Int16Array\",\"prototype\"],\"%Int32ArrayPrototype%\":[\"Int32Array\",\"prototype\"],\"%JSONParse%\":[\"JSON\",\"parse\"],\"%JSONStringify%\":[\"JSON\",\"stringify\"],\"%MapPrototype%\":[\"Map\",\"prototype\"],\"%NumberPrototype%\":[\"Number\",\"prototype\"],\"%ObjectPrototype%\":[\"Object\",\"prototype\"],\"%ObjProto_toString%\":[\"Object\",\"prototype\",\"toString\"],\"%ObjProto_valueOf%\":[\"Object\",\"prototype\",\"valueOf\"],\"%PromisePrototype%\":[\"Promise\",\"prototype\"],\"%PromiseProto_then%\":[\"Promise\",\"prototype\",\"then\"],\"%Promise_all%\":[\"Promise\",\"all\"],\"%Promise_reject%\":[\"Promise\",\"reject\"],\"%Promise_resolve%\":[\"Promise\",\"resolve\"],\"%RangeErrorPrototype%\":[\"RangeError\",\"prototype\"],\"%ReferenceErrorPrototype%\":[\"ReferenceError\",\"prototype\"],\"%RegExpPrototype%\":[\"RegExp\",\"prototype\"],\"%SetPrototype%\":[\"Set\",\"prototype\"],\"%SharedArrayBufferPrototype%\":[\"SharedArrayBuffer\",\"prototype\"],\"%StringPrototype%\":[\"String\",\"prototype\"],\"%SymbolPrototype%\":[\"Symbol\",\"prototype\"],\"%SyntaxErrorPrototype%\":[\"SyntaxError\",\"prototype\"],\"%TypedArrayPrototype%\":[\"TypedArray\",\"prototype\"],\"%TypeErrorPrototype%\":[\"TypeError\",\"prototype\"],\"%Uint8ArrayPrototype%\":[\"Uint8Array\",\"prototype\"],\"%Uint8ClampedArrayPrototype%\":[\"Uint8ClampedArray\",\"prototype\"],\"%Uint16ArrayPrototype%\":[\"Uint16Array\",\"prototype\"],\"%Uint32ArrayPrototype%\":[\"Uint32Array\",\"prototype\"],\"%URIErrorPrototype%\":[\"URIError\",\"prototype\"],\"%WeakMapPrototype%\":[\"WeakMap\",\"prototype\"],\"%WeakSetPrototype%\":[\"WeakSet\",\"prototype\"]},L=r(6743),B=r(9957),N=L.call(x,Array.prototype.concat),U=L.call(O,Array.prototype.splice),M=L.call(x,String.prototype.replace),D=L.call(x,String.prototype.slice),F=L.call(x,RegExp.prototype.exec),V=/[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g,q=/\\\\(\\\\)?/g,K=function(e,t){var r,n=e;if(B(I,n)&&(n=\"%\"+(r=I[n])[0]+\"%\"),B(R,n)){var o=R[n];if(o===A&&(o=C(n)),void 0===o&&!t)throw new l(\"intrinsic \"+e+\" exists, but is not available. Please file an issue!\");return{alias:r,name:n,value:o}}throw new c(\"intrinsic \"+e+\" does not exist!\")};e.exports=function(e,t){if(\"string\"!=typeof e||0===e.length)throw new l(\"intrinsic name must be a non-empty string\");if(arguments.length>1&&\"boolean\"!=typeof t)throw new l('\"allowMissing\" argument must be a boolean');if(null===F(/^%?[^%]*%?$/,e))throw new c(\"`%` may not be present anywhere but at the beginning and end of the intrinsic name\");var r=function(e){var t=D(e,0,1),r=D(e,-1);if(\"%\"===t&&\"%\"!==r)throw new c(\"invalid intrinsic syntax, expected closing `%`\");if(\"%\"===r&&\"%\"!==t)throw new c(\"invalid intrinsic syntax, expected opening `%`\");var n=[];return M(e,V,(function(e,t,r,o){n[n.length]=r?M(o,q,\"$1\"):t||e})),n}(e),n=r.length>0?r[0]:\"\",o=K(\"%\"+n+\"%\",t),i=o.name,a=o.value,s=!1,u=o.alias;u&&(n=u[0],U(r,N([0,1],u)));for(var f=1,p=!0;f<r.length;f+=1){var d=r[f],h=D(d,0,1),y=D(d,-1);if(('\"'===h||\"'\"===h||\"`\"===h||'\"'===y||\"'\"===y||\"`\"===y)&&h!==y)throw new c(\"property names with quotes must have matching quotes\");if(\"constructor\"!==d&&p||(s=!0),B(R,i=\"%\"+(n+=\".\"+d)+\"%\"))a=R[i];else if(null!=a){if(!(d in a)){if(!t)throw new l(\"base intrinsic for \"+e+\" exists, but the property is not available.\");return}if(b&&f+1>=r.length){var m=b(a,d);a=(p=!!m)&&\"get\"in m&&!(\"originalValue\"in m.get)?m.get:a[d]}else p=B(a,d),a=a[d];p&&!s&&(R[i]=a)}}return a}},6549:e=>{\"use strict\";e.exports=Object.getOwnPropertyDescriptor},5795:(e,t,r)=>{\"use strict\";var n=r(6549);if(n)try{n([],\"length\")}catch(e){n=null}e.exports=n},592:(e,t,r)=>{\"use strict\";var n=r(655),o=function(){return!!n};o.hasArrayLengthDefineBug=function(){if(!n)return null;try{return 1!==n([],\"length\",{value:1}).length}catch(e){return!0}},e.exports=o},4039:(e,t,r)=>{\"use strict\";var n=\"undefined\"!=typeof Symbol&&Symbol,o=r(1333);e.exports=function(){return\"function\"==typeof n&&(\"function\"==typeof Symbol&&(\"symbol\"==typeof n(\"foo\")&&(\"symbol\"==typeof Symbol(\"bar\")&&o())))}},1333:e=>{\"use strict\";e.exports=function(){if(\"function\"!=typeof Symbol||\"function\"!=typeof Object.getOwnPropertySymbols)return!1;if(\"symbol\"==typeof Symbol.iterator)return!0;var e={},t=Symbol(\"test\"),r=Object(t);if(\"string\"==typeof t)return!1;if(\"[object Symbol]\"!==Object.prototype.toString.call(t))return!1;if(\"[object Symbol]\"!==Object.prototype.toString.call(r))return!1;for(var n in e[t]=42,e)return!1;if(\"function\"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if(\"function\"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var o=Object.getOwnPropertySymbols(e);if(1!==o.length||o[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if(\"function\"==typeof Object.getOwnPropertyDescriptor){var i=Object.getOwnPropertyDescriptor(e,t);if(42!==i.value||!0!==i.enumerable)return!1}return!0}},9092:(e,t,r)=>{\"use strict\";var n=r(1333);e.exports=function(){return n()&&!!Symbol.toStringTag}},9957:(e,t,r)=>{\"use strict\";var n=Function.prototype.call,o=Object.prototype.hasOwnProperty,i=r(6743);e.exports=i.call(n,o)},1083:(e,t,r)=>{var n=r(1568),o=r(8835),i=e.exports;for(var a in n)n.hasOwnProperty(a)&&(i[a]=n[a]);function s(e){if(\"string\"==typeof e&&(e=o.parse(e)),e.protocol||(e.protocol=\"https:\"),\"https:\"!==e.protocol)throw new Error('Protocol \"'+e.protocol+'\" not supported. Expected \"https:\"');return e}i.request=function(e,t){return e=s(e),n.request.call(this,e,t)},i.get=function(e,t){return e=s(e),n.get.call(this,e,t)}},251:(e,t)=>{t.read=function(e,t,r,n,o){var i,a,s=8*o-n-1,u=(1<<s)-1,c=u>>1,l=-7,f=r?o-1:0,p=r?-1:1,d=e[t+f];for(f+=p,i=d&(1<<-l)-1,d>>=-l,l+=s;l>0;i=256*i+e[t+f],f+=p,l-=8);for(a=i&(1<<-l)-1,i>>=-l,l+=n;l>0;a=256*a+e[t+f],f+=p,l-=8);if(0===i)i=1-c;else{if(i===u)return a?NaN:1/0*(d?-1:1);a+=Math.pow(2,n),i-=c}return(d?-1:1)*a*Math.pow(2,i-n)},t.write=function(e,t,r,n,o,i){var a,s,u,c=8*i-o-1,l=(1<<c)-1,f=l>>1,p=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:i-1,h=n?1:-1,y=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=l):(a=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-a))<1&&(a--,u*=2),(t+=a+f>=1?p/u:p*Math.pow(2,1-f))*u>=2&&(a++,u/=2),a+f>=l?(s=0,a=l):a+f>=1?(s=(t*u-1)*Math.pow(2,o),a+=f):(s=t*Math.pow(2,f-1)*Math.pow(2,o),a=0));o>=8;e[r+d]=255&s,d+=h,s/=256,o-=8);for(a=a<<o|s,c+=o;c>0;e[r+d]=255&a,d+=h,a/=256,c-=8);e[r+d-h]|=128*y}},6698:e=>{\"function\"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,t){if(t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}}},7244:(e,t,r)=>{\"use strict\";var n=r(9092)(),o=r(6556)(\"Object.prototype.toString\"),i=function(e){return!(n&&e&&\"object\"==typeof e&&Symbol.toStringTag in e)&&\"[object Arguments]\"===o(e)},a=function(e){return!!i(e)||null!==e&&\"object\"==typeof e&&\"length\"in e&&\"number\"==typeof e.length&&e.length>=0&&\"[object Array]\"!==o(e)&&\"callee\"in e&&\"[object Function]\"===o(e.callee)},s=function(){return i(arguments)}();i.isLegacyArguments=a,e.exports=s?i:a},9600:e=>{\"use strict\";var t,r,n=Function.prototype.toString,o=\"object\"==typeof Reflect&&null!==Reflect&&Reflect.apply;if(\"function\"==typeof o&&\"function\"==typeof Object.defineProperty)try{t=Object.defineProperty({},\"length\",{get:function(){throw r}}),r={},o((function(){throw 42}),null,t)}catch(e){e!==r&&(o=null)}else o=null;var i=/^\\s*class\\b/,a=function(e){try{var t=n.call(e);return i.test(t)}catch(e){return!1}},s=function(e){try{return!a(e)&&(n.call(e),!0)}catch(e){return!1}},u=Object.prototype.toString,c=\"function\"==typeof Symbol&&!!Symbol.toStringTag,l=!(0 in[,]),f=function(){return!1};if(\"object\"==typeof document){var p=document.all;u.call(p)===u.call(document.all)&&(f=function(e){if((l||!e)&&(void 0===e||\"object\"==typeof e))try{var t=u.call(e);return(\"[object HTMLAllCollection]\"===t||\"[object HTML document.all class]\"===t||\"[object HTMLCollection]\"===t||\"[object Object]\"===t)&&null==e(\"\")}catch(e){}return!1})}e.exports=o?function(e){if(f(e))return!0;if(!e)return!1;if(\"function\"!=typeof e&&\"object\"!=typeof e)return!1;try{o(e,null,t)}catch(e){if(e!==r)return!1}return!a(e)&&s(e)}:function(e){if(f(e))return!0;if(!e)return!1;if(\"function\"!=typeof e&&\"object\"!=typeof e)return!1;if(c)return s(e);if(a(e))return!1;var t=u.call(e);return!(\"[object Function]\"!==t&&\"[object GeneratorFunction]\"!==t&&!/^\\[object HTML/.test(t))&&s(e)}},8184:(e,t,r)=>{\"use strict\";var n,o=Object.prototype.toString,i=Function.prototype.toString,a=/^\\s*(?:function)?\\*/,s=r(9092)(),u=Object.getPrototypeOf;e.exports=function(e){if(\"function\"!=typeof e)return!1;if(a.test(i.call(e)))return!0;if(!s)return\"[object GeneratorFunction]\"===o.call(e);if(!u)return!1;if(void 0===n){var t=function(){if(!s)return!1;try{return Function(\"return function*() {}\")()}catch(e){}}();n=!!t&&u(t)}return u(e)===n}},5680:(e,t,r)=>{\"use strict\";var n=r(5767);e.exports=function(e){return!!n(e)}},1514:e=>{\"use strict\";e.exports=Math.abs},8968:e=>{\"use strict\";e.exports=Math.floor},6188:e=>{\"use strict\";e.exports=Math.max},8002:e=>{\"use strict\";e.exports=Math.min},5880:e=>{\"use strict\";e.exports=Math.pow},8859:(e,t,r)=>{var n=\"function\"==typeof Map&&Map.prototype,o=Object.getOwnPropertyDescriptor&&n?Object.getOwnPropertyDescriptor(Map.prototype,\"size\"):null,i=n&&o&&\"function\"==typeof o.get?o.get:null,a=n&&Map.prototype.forEach,s=\"function\"==typeof Set&&Set.prototype,u=Object.getOwnPropertyDescriptor&&s?Object.getOwnPropertyDescriptor(Set.prototype,\"size\"):null,c=s&&u&&\"function\"==typeof u.get?u.get:null,l=s&&Set.prototype.forEach,f=\"function\"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,p=\"function\"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,d=\"function\"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,h=Boolean.prototype.valueOf,y=Object.prototype.toString,m=Function.prototype.toString,v=String.prototype.match,g=String.prototype.slice,b=String.prototype.replace,w=String.prototype.toUpperCase,S=String.prototype.toLowerCase,E=RegExp.prototype.test,_=Array.prototype.concat,k=Array.prototype.join,T=Array.prototype.slice,O=Math.floor,x=\"function\"==typeof BigInt?BigInt.prototype.valueOf:null,A=Object.getOwnPropertySymbols,P=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?Symbol.prototype.toString:null,R=\"function\"==typeof Symbol&&\"object\"==typeof Symbol.iterator,j=\"function\"==typeof Symbol&&Symbol.toStringTag&&(typeof Symbol.toStringTag===R||\"symbol\")?Symbol.toStringTag:null,C=Object.prototype.propertyIsEnumerable,I=(\"function\"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(e){return e.__proto__}:null);function L(e,t){if(e===1/0||e===-1/0||e!=e||e&&e>-1e3&&e<1e3||E.call(/e/,t))return t;var r=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if(\"number\"==typeof e){var n=e<0?-O(-e):O(e);if(n!==e){var o=String(n),i=g.call(t,o.length+1);return b.call(o,r,\"$&_\")+\".\"+b.call(b.call(i,/([0-9]{3})/g,\"$&_\"),/_$/,\"\")}}return b.call(t,r,\"$&_\")}var B=r(2634),N=B.custom,U=H(N)?N:null,M={__proto__:null,double:'\"',single:\"'\"},D={__proto__:null,double:/([\"\\\\])/g,single:/(['\\\\])/g};function F(e,t,r){var n=r.quoteStyle||t,o=M[n];return o+e+o}function V(e){return b.call(String(e),/\"/g,\"&quot;\")}function q(e){return!(\"[object Array]\"!==G(e)||j&&\"object\"==typeof e&&j in e)}function K(e){return!(\"[object RegExp]\"!==G(e)||j&&\"object\"==typeof e&&j in e)}function H(e){if(R)return e&&\"object\"==typeof e&&e instanceof Symbol;if(\"symbol\"==typeof e)return!0;if(!e||\"object\"!=typeof e||!P)return!1;try{return P.call(e),!0}catch(e){}return!1}e.exports=function e(t,n,o,s){var u=n||{};if(X(u,\"quoteStyle\")&&!X(M,u.quoteStyle))throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');if(X(u,\"maxStringLength\")&&(\"number\"==typeof u.maxStringLength?u.maxStringLength<0&&u.maxStringLength!==1/0:null!==u.maxStringLength))throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');var y=!X(u,\"customInspect\")||u.customInspect;if(\"boolean\"!=typeof y&&\"symbol\"!==y)throw new TypeError(\"option \\\"customInspect\\\", if provided, must be `true`, `false`, or `'symbol'`\");if(X(u,\"indent\")&&null!==u.indent&&\"\\t\"!==u.indent&&!(parseInt(u.indent,10)===u.indent&&u.indent>0))throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');if(X(u,\"numericSeparator\")&&\"boolean\"!=typeof u.numericSeparator)throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');var w=u.numericSeparator;if(void 0===t)return\"undefined\";if(null===t)return\"null\";if(\"boolean\"==typeof t)return t?\"true\":\"false\";if(\"string\"==typeof t)return $(t,u);if(\"number\"==typeof t){if(0===t)return 1/0/t>0?\"0\":\"-0\";var E=String(t);return w?L(t,E):E}if(\"bigint\"==typeof t){var O=String(t)+\"n\";return w?L(t,O):O}var A=void 0===u.depth?5:u.depth;if(void 0===o&&(o=0),o>=A&&A>0&&\"object\"==typeof t)return q(t)?\"[Array]\":\"[Object]\";var N=function(e,t){var r;if(\"\\t\"===e.indent)r=\"\\t\";else{if(!(\"number\"==typeof e.indent&&e.indent>0))return null;r=k.call(Array(e.indent+1),\" \")}return{base:r,prev:k.call(Array(t+1),r)}}(u,o);if(void 0===s)s=[];else if(W(s,t)>=0)return\"[Circular]\";function D(t,r,n){if(r&&(s=T.call(s)).push(r),n){var i={depth:u.depth};return X(u,\"quoteStyle\")&&(i.quoteStyle=u.quoteStyle),e(t,i,o+1,s)}return e(t,u,o+1,s)}if(\"function\"==typeof t&&!K(t)){var z=function(e){if(e.name)return e.name;var t=v.call(m.call(e),/^function\\s*([\\w$]+)/);if(t)return t[1];return null}(t),Q=te(t,D);return\"[Function\"+(z?\": \"+z:\" (anonymous)\")+\"]\"+(Q.length>0?\" { \"+k.call(Q,\", \")+\" }\":\"\")}if(H(t)){var re=R?b.call(String(t),/^(Symbol\\(.*\\))_[^)]*$/,\"$1\"):P.call(t);return\"object\"!=typeof t||R?re:Y(re)}if(function(e){if(!e||\"object\"!=typeof e)return!1;if(\"undefined\"!=typeof HTMLElement&&e instanceof HTMLElement)return!0;return\"string\"==typeof e.nodeName&&\"function\"==typeof e.getAttribute}(t)){for(var ne=\"<\"+S.call(String(t.nodeName)),oe=t.attributes||[],ie=0;ie<oe.length;ie++)ne+=\" \"+oe[ie].name+\"=\"+F(V(oe[ie].value),\"double\",u);return ne+=\">\",t.childNodes&&t.childNodes.length&&(ne+=\"...\"),ne+=\"</\"+S.call(String(t.nodeName))+\">\"}if(q(t)){if(0===t.length)return\"[]\";var ae=te(t,D);return N&&!function(e){for(var t=0;t<e.length;t++)if(W(e[t],\"\\n\")>=0)return!1;return!0}(ae)?\"[\"+ee(ae,N)+\"]\":\"[ \"+k.call(ae,\", \")+\" ]\"}if(function(e){return!(\"[object Error]\"!==G(e)||j&&\"object\"==typeof e&&j in e)}(t)){var se=te(t,D);return\"cause\"in Error.prototype||!(\"cause\"in t)||C.call(t,\"cause\")?0===se.length?\"[\"+String(t)+\"]\":\"{ [\"+String(t)+\"] \"+k.call(se,\", \")+\" }\":\"{ [\"+String(t)+\"] \"+k.call(_.call(\"[cause]: \"+D(t.cause),se),\", \")+\" }\"}if(\"object\"==typeof t&&y){if(U&&\"function\"==typeof t[U]&&B)return B(t,{depth:A-o});if(\"symbol\"!==y&&\"function\"==typeof t.inspect)return t.inspect()}if(function(e){if(!i||!e||\"object\"!=typeof e)return!1;try{i.call(e);try{c.call(e)}catch(e){return!0}return e instanceof Map}catch(e){}return!1}(t)){var ue=[];return a&&a.call(t,(function(e,r){ue.push(D(r,t,!0)+\" => \"+D(e,t))})),Z(\"Map\",i.call(t),ue,N)}if(function(e){if(!c||!e||\"object\"!=typeof e)return!1;try{c.call(e);try{i.call(e)}catch(e){return!0}return e instanceof Set}catch(e){}return!1}(t)){var ce=[];return l&&l.call(t,(function(e){ce.push(D(e,t))})),Z(\"Set\",c.call(t),ce,N)}if(function(e){if(!f||!e||\"object\"!=typeof e)return!1;try{f.call(e,f);try{p.call(e,p)}catch(e){return!0}return e instanceof WeakMap}catch(e){}return!1}(t))return J(\"WeakMap\");if(function(e){if(!p||!e||\"object\"!=typeof e)return!1;try{p.call(e,p);try{f.call(e,f)}catch(e){return!0}return e instanceof WeakSet}catch(e){}return!1}(t))return J(\"WeakSet\");if(function(e){if(!d||!e||\"object\"!=typeof e)return!1;try{return d.call(e),!0}catch(e){}return!1}(t))return J(\"WeakRef\");if(function(e){return!(\"[object Number]\"!==G(e)||j&&\"object\"==typeof e&&j in e)}(t))return Y(D(Number(t)));if(function(e){if(!e||\"object\"!=typeof e||!x)return!1;try{return x.call(e),!0}catch(e){}return!1}(t))return Y(D(x.call(t)));if(function(e){return!(\"[object Boolean]\"!==G(e)||j&&\"object\"==typeof e&&j in e)}(t))return Y(h.call(t));if(function(e){return!(\"[object String]\"!==G(e)||j&&\"object\"==typeof e&&j in e)}(t))return Y(D(String(t)));if(\"undefined\"!=typeof window&&t===window)return\"{ [object Window] }\";if(\"undefined\"!=typeof globalThis&&t===globalThis||void 0!==r.g&&t===r.g)return\"{ [object globalThis] }\";if(!function(e){return!(\"[object Date]\"!==G(e)||j&&\"object\"==typeof e&&j in e)}(t)&&!K(t)){var le=te(t,D),fe=I?I(t)===Object.prototype:t instanceof Object||t.constructor===Object,pe=t instanceof Object?\"\":\"null prototype\",de=!fe&&j&&Object(t)===t&&j in t?g.call(G(t),8,-1):pe?\"Object\":\"\",he=(fe||\"function\"!=typeof t.constructor?\"\":t.constructor.name?t.constructor.name+\" \":\"\")+(de||pe?\"[\"+k.call(_.call([],de||[],pe||[]),\": \")+\"] \":\"\");return 0===le.length?he+\"{}\":N?he+\"{\"+ee(le,N)+\"}\":he+\"{ \"+k.call(le,\", \")+\" }\"}return String(t)};var z=Object.prototype.hasOwnProperty||function(e){return e in this};function X(e,t){return z.call(e,t)}function G(e){return y.call(e)}function W(e,t){if(e.indexOf)return e.indexOf(t);for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1}function $(e,t){if(e.length>t.maxStringLength){var r=e.length-t.maxStringLength,n=\"... \"+r+\" more character\"+(r>1?\"s\":\"\");return $(g.call(e,0,t.maxStringLength),t)+n}var o=D[t.quoteStyle||\"single\"];return o.lastIndex=0,F(b.call(b.call(e,o,\"\\\\$1\"),/[\\x00-\\x1f]/g,Q),\"single\",t)}function Q(e){var t=e.charCodeAt(0),r={8:\"b\",9:\"t\",10:\"n\",12:\"f\",13:\"r\"}[t];return r?\"\\\\\"+r:\"\\\\x\"+(t<16?\"0\":\"\")+w.call(t.toString(16))}function Y(e){return\"Object(\"+e+\")\"}function J(e){return e+\" { ? }\"}function Z(e,t,r,n){return e+\" (\"+t+\") {\"+(n?ee(r,n):k.call(r,\", \"))+\"}\"}function ee(e,t){if(0===e.length)return\"\";var r=\"\\n\"+t.prev+t.base;return r+k.call(e,\",\"+r)+\"\\n\"+t.prev}function te(e,t){var r=q(e),n=[];if(r){n.length=e.length;for(var o=0;o<e.length;o++)n[o]=X(e,o)?t(e[o],e):\"\"}var i,a=\"function\"==typeof A?A(e):[];if(R){i={};for(var s=0;s<a.length;s++)i[\"$\"+a[s]]=a[s]}for(var u in e)X(e,u)&&(r&&String(Number(u))===u&&u<e.length||R&&i[\"$\"+u]instanceof Symbol||(E.call(/[^\\w$]/,u)?n.push(t(u,e)+\": \"+t(e[u],e)):n.push(u+\": \"+t(e[u],e))));if(\"function\"==typeof A)for(var c=0;c<a.length;c++)C.call(e,a[c])&&n.push(\"[\"+t(a[c])+\"]: \"+t(e[a[c]],e));return n}},6578:e=>{\"use strict\";e.exports=[\"Float32Array\",\"Float64Array\",\"Int8Array\",\"Int16Array\",\"Int32Array\",\"Uint8Array\",\"Uint8ClampedArray\",\"Uint16Array\",\"Uint32Array\",\"BigInt64Array\",\"BigUint64Array\"]},4765:e=>{\"use strict\";var t=String.prototype.replace,r=/%20/g,n=\"RFC1738\",o=\"RFC3986\";e.exports={default:o,formatters:{RFC1738:function(e){return t.call(e,r,\"+\")},RFC3986:function(e){return String(e)}},RFC1738:n,RFC3986:o}},5373:(e,t,r)=>{\"use strict\";var n=r(8636),o=r(2642),i=r(4765);e.exports={formats:i,parse:o,stringify:n}},2642:(e,t,r)=>{\"use strict\";var n=r(7720),o=Object.prototype.hasOwnProperty,i=Array.isArray,a={allowDots:!1,allowEmptyArrays:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:\"utf-8\",charsetSentinel:!1,comma:!1,decodeDotInKeys:!1,decoder:n.decode,delimiter:\"&\",depth:5,duplicates:\"combine\",ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictDepth:!1,strictNullHandling:!1},s=function(e){return e.replace(/&#(\\d+);/g,(function(e,t){return String.fromCharCode(parseInt(t,10))}))},u=function(e,t){return e&&\"string\"==typeof e&&t.comma&&e.indexOf(\",\")>-1?e.split(\",\"):e},c=function(e,t,r,n){if(e){var i=r.allowDots?e.replace(/\\.([^.[]+)/g,\"[$1]\"):e,a=/(\\[[^[\\]]*])/g,s=r.depth>0&&/(\\[[^[\\]]*])/.exec(i),c=s?i.slice(0,s.index):i,l=[];if(c){if(!r.plainObjects&&o.call(Object.prototype,c)&&!r.allowPrototypes)return;l.push(c)}for(var f=0;r.depth>0&&null!==(s=a.exec(i))&&f<r.depth;){if(f+=1,!r.plainObjects&&o.call(Object.prototype,s[1].slice(1,-1))&&!r.allowPrototypes)return;l.push(s[1])}if(s){if(!0===r.strictDepth)throw new RangeError(\"Input depth exceeded depth option of \"+r.depth+\" and strictDepth is true\");l.push(\"[\"+i.slice(s.index)+\"]\")}return function(e,t,r,n){for(var o=n?t:u(t,r),i=e.length-1;i>=0;--i){var a,s=e[i];if(\"[]\"===s&&r.parseArrays)a=r.allowEmptyArrays&&(\"\"===o||r.strictNullHandling&&null===o)?[]:[].concat(o);else{a=r.plainObjects?{__proto__:null}:{};var c=\"[\"===s.charAt(0)&&\"]\"===s.charAt(s.length-1)?s.slice(1,-1):s,l=r.decodeDotInKeys?c.replace(/%2E/g,\".\"):c,f=parseInt(l,10);r.parseArrays||\"\"!==l?!isNaN(f)&&s!==l&&String(f)===l&&f>=0&&r.parseArrays&&f<=r.arrayLimit?(a=[])[f]=o:\"__proto__\"!==l&&(a[l]=o):a={0:o}}o=a}return o}(l,t,r,n)}};e.exports=function(e,t){var r=function(e){if(!e)return a;if(void 0!==e.allowEmptyArrays&&\"boolean\"!=typeof e.allowEmptyArrays)throw new TypeError(\"`allowEmptyArrays` option can only be `true` or `false`, when provided\");if(void 0!==e.decodeDotInKeys&&\"boolean\"!=typeof e.decodeDotInKeys)throw new TypeError(\"`decodeDotInKeys` option can only be `true` or `false`, when provided\");if(null!==e.decoder&&void 0!==e.decoder&&\"function\"!=typeof e.decoder)throw new TypeError(\"Decoder has to be a function.\");if(void 0!==e.charset&&\"utf-8\"!==e.charset&&\"iso-8859-1\"!==e.charset)throw new TypeError(\"The charset option must be either utf-8, iso-8859-1, or undefined\");var t=void 0===e.charset?a.charset:e.charset,r=void 0===e.duplicates?a.duplicates:e.duplicates;if(\"combine\"!==r&&\"first\"!==r&&\"last\"!==r)throw new TypeError(\"The duplicates option must be either combine, first, or last\");return{allowDots:void 0===e.allowDots?!0===e.decodeDotInKeys||a.allowDots:!!e.allowDots,allowEmptyArrays:\"boolean\"==typeof e.allowEmptyArrays?!!e.allowEmptyArrays:a.allowEmptyArrays,allowPrototypes:\"boolean\"==typeof e.allowPrototypes?e.allowPrototypes:a.allowPrototypes,allowSparse:\"boolean\"==typeof e.allowSparse?e.allowSparse:a.allowSparse,arrayLimit:\"number\"==typeof e.arrayLimit?e.arrayLimit:a.arrayLimit,charset:t,charsetSentinel:\"boolean\"==typeof e.charsetSentinel?e.charsetSentinel:a.charsetSentinel,comma:\"boolean\"==typeof e.comma?e.comma:a.comma,decodeDotInKeys:\"boolean\"==typeof e.decodeDotInKeys?e.decodeDotInKeys:a.decodeDotInKeys,decoder:\"function\"==typeof e.decoder?e.decoder:a.decoder,delimiter:\"string\"==typeof e.delimiter||n.isRegExp(e.delimiter)?e.delimiter:a.delimiter,depth:\"number\"==typeof e.depth||!1===e.depth?+e.depth:a.depth,duplicates:r,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:\"boolean\"==typeof e.interpretNumericEntities?e.interpretNumericEntities:a.interpretNumericEntities,parameterLimit:\"number\"==typeof e.parameterLimit?e.parameterLimit:a.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:\"boolean\"==typeof e.plainObjects?e.plainObjects:a.plainObjects,strictDepth:\"boolean\"==typeof e.strictDepth?!!e.strictDepth:a.strictDepth,strictNullHandling:\"boolean\"==typeof e.strictNullHandling?e.strictNullHandling:a.strictNullHandling}}(t);if(\"\"===e||null==e)return r.plainObjects?{__proto__:null}:{};for(var l=\"string\"==typeof e?function(e,t){var r={__proto__:null},c=t.ignoreQueryPrefix?e.replace(/^\\?/,\"\"):e;c=c.replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\");var l,f=t.parameterLimit===1/0?void 0:t.parameterLimit,p=c.split(t.delimiter,f),d=-1,h=t.charset;if(t.charsetSentinel)for(l=0;l<p.length;++l)0===p[l].indexOf(\"utf8=\")&&(\"utf8=%E2%9C%93\"===p[l]?h=\"utf-8\":\"utf8=%26%2310003%3B\"===p[l]&&(h=\"iso-8859-1\"),d=l,l=p.length);for(l=0;l<p.length;++l)if(l!==d){var y,m,v=p[l],g=v.indexOf(\"]=\"),b=-1===g?v.indexOf(\"=\"):g+1;-1===b?(y=t.decoder(v,a.decoder,h,\"key\"),m=t.strictNullHandling?null:\"\"):(y=t.decoder(v.slice(0,b),a.decoder,h,\"key\"),m=n.maybeMap(u(v.slice(b+1),t),(function(e){return t.decoder(e,a.decoder,h,\"value\")}))),m&&t.interpretNumericEntities&&\"iso-8859-1\"===h&&(m=s(String(m))),v.indexOf(\"[]=\")>-1&&(m=i(m)?[m]:m);var w=o.call(r,y);w&&\"combine\"===t.duplicates?r[y]=n.combine(r[y],m):w&&\"last\"!==t.duplicates||(r[y]=m)}return r}(e,r):e,f=r.plainObjects?{__proto__:null}:{},p=Object.keys(l),d=0;d<p.length;++d){var h=p[d],y=c(h,l[h],r,\"string\"==typeof e);f=n.merge(f,y,r)}return!0===r.allowSparse?f:n.compact(f)}},8636:(e,t,r)=>{\"use strict\";var n=r(920),o=r(7720),i=r(4765),a=Object.prototype.hasOwnProperty,s={brackets:function(e){return e+\"[]\"},comma:\"comma\",indices:function(e,t){return e+\"[\"+t+\"]\"},repeat:function(e){return e}},u=Array.isArray,c=Array.prototype.push,l=function(e,t){c.apply(e,u(t)?t:[t])},f=Date.prototype.toISOString,p=i.default,d={addQueryPrefix:!1,allowDots:!1,allowEmptyArrays:!1,arrayFormat:\"indices\",charset:\"utf-8\",charsetSentinel:!1,commaRoundTrip:!1,delimiter:\"&\",encode:!0,encodeDotInKeys:!1,encoder:o.encode,encodeValuesOnly:!1,filter:void 0,format:p,formatter:i.formatters[p],indices:!1,serializeDate:function(e){return f.call(e)},skipNulls:!1,strictNullHandling:!1},h={},y=function e(t,r,i,a,s,c,f,p,y,m,v,g,b,w,S,E,_,k){for(var T,O=t,x=k,A=0,P=!1;void 0!==(x=x.get(h))&&!P;){var R=x.get(t);if(A+=1,void 0!==R){if(R===A)throw new RangeError(\"Cyclic object value\");P=!0}void 0===x.get(h)&&(A=0)}if(\"function\"==typeof m?O=m(r,O):O instanceof Date?O=b(O):\"comma\"===i&&u(O)&&(O=o.maybeMap(O,(function(e){return e instanceof Date?b(e):e}))),null===O){if(c)return y&&!E?y(r,d.encoder,_,\"key\",w):r;O=\"\"}if(\"string\"==typeof(T=O)||\"number\"==typeof T||\"boolean\"==typeof T||\"symbol\"==typeof T||\"bigint\"==typeof T||o.isBuffer(O))return y?[S(E?r:y(r,d.encoder,_,\"key\",w))+\"=\"+S(y(O,d.encoder,_,\"value\",w))]:[S(r)+\"=\"+S(String(O))];var j,C=[];if(void 0===O)return C;if(\"comma\"===i&&u(O))E&&y&&(O=o.maybeMap(O,y)),j=[{value:O.length>0?O.join(\",\")||null:void 0}];else if(u(m))j=m;else{var I=Object.keys(O);j=v?I.sort(v):I}var L=p?String(r).replace(/\\./g,\"%2E\"):String(r),B=a&&u(O)&&1===O.length?L+\"[]\":L;if(s&&u(O)&&0===O.length)return B+\"[]\";for(var N=0;N<j.length;++N){var U=j[N],M=\"object\"==typeof U&&U&&void 0!==U.value?U.value:O[U];if(!f||null!==M){var D=g&&p?String(U).replace(/\\./g,\"%2E\"):String(U),F=u(O)?\"function\"==typeof i?i(B,D):B:B+(g?\".\"+D:\"[\"+D+\"]\");k.set(t,A);var V=n();V.set(h,k),l(C,e(M,F,i,a,s,c,f,p,\"comma\"===i&&E&&u(O)?null:y,m,v,g,b,w,S,E,_,V))}}return C};e.exports=function(e,t){var r,o=e,c=function(e){if(!e)return d;if(void 0!==e.allowEmptyArrays&&\"boolean\"!=typeof e.allowEmptyArrays)throw new TypeError(\"`allowEmptyArrays` option can only be `true` or `false`, when provided\");if(void 0!==e.encodeDotInKeys&&\"boolean\"!=typeof e.encodeDotInKeys)throw new TypeError(\"`encodeDotInKeys` option can only be `true` or `false`, when provided\");if(null!==e.encoder&&void 0!==e.encoder&&\"function\"!=typeof e.encoder)throw new TypeError(\"Encoder has to be a function.\");var t=e.charset||d.charset;if(void 0!==e.charset&&\"utf-8\"!==e.charset&&\"iso-8859-1\"!==e.charset)throw new TypeError(\"The charset option must be either utf-8, iso-8859-1, or undefined\");var r=i.default;if(void 0!==e.format){if(!a.call(i.formatters,e.format))throw new TypeError(\"Unknown format option provided.\");r=e.format}var n,o=i.formatters[r],c=d.filter;if((\"function\"==typeof e.filter||u(e.filter))&&(c=e.filter),n=e.arrayFormat in s?e.arrayFormat:\"indices\"in e?e.indices?\"indices\":\"repeat\":d.arrayFormat,\"commaRoundTrip\"in e&&\"boolean\"!=typeof e.commaRoundTrip)throw new TypeError(\"`commaRoundTrip` must be a boolean, or absent\");var l=void 0===e.allowDots?!0===e.encodeDotInKeys||d.allowDots:!!e.allowDots;return{addQueryPrefix:\"boolean\"==typeof e.addQueryPrefix?e.addQueryPrefix:d.addQueryPrefix,allowDots:l,allowEmptyArrays:\"boolean\"==typeof e.allowEmptyArrays?!!e.allowEmptyArrays:d.allowEmptyArrays,arrayFormat:n,charset:t,charsetSentinel:\"boolean\"==typeof e.charsetSentinel?e.charsetSentinel:d.charsetSentinel,commaRoundTrip:!!e.commaRoundTrip,delimiter:void 0===e.delimiter?d.delimiter:e.delimiter,encode:\"boolean\"==typeof e.encode?e.encode:d.encode,encodeDotInKeys:\"boolean\"==typeof e.encodeDotInKeys?e.encodeDotInKeys:d.encodeDotInKeys,encoder:\"function\"==typeof e.encoder?e.encoder:d.encoder,encodeValuesOnly:\"boolean\"==typeof e.encodeValuesOnly?e.encodeValuesOnly:d.encodeValuesOnly,filter:c,format:r,formatter:o,serializeDate:\"function\"==typeof e.serializeDate?e.serializeDate:d.serializeDate,skipNulls:\"boolean\"==typeof e.skipNulls?e.skipNulls:d.skipNulls,sort:\"function\"==typeof e.sort?e.sort:null,strictNullHandling:\"boolean\"==typeof e.strictNullHandling?e.strictNullHandling:d.strictNullHandling}}(t);\"function\"==typeof c.filter?o=(0,c.filter)(\"\",o):u(c.filter)&&(r=c.filter);var f=[];if(\"object\"!=typeof o||null===o)return\"\";var p=s[c.arrayFormat],h=\"comma\"===p&&c.commaRoundTrip;r||(r=Object.keys(o)),c.sort&&r.sort(c.sort);for(var m=n(),v=0;v<r.length;++v){var g=r[v],b=o[g];c.skipNulls&&null===b||l(f,y(b,g,p,h,c.allowEmptyArrays,c.strictNullHandling,c.skipNulls,c.encodeDotInKeys,c.encode?c.encoder:null,c.filter,c.sort,c.allowDots,c.serializeDate,c.format,c.formatter,c.encodeValuesOnly,c.charset,m))}var w=f.join(c.delimiter),S=!0===c.addQueryPrefix?\"?\":\"\";return c.charsetSentinel&&(\"iso-8859-1\"===c.charset?S+=\"utf8=%26%2310003%3B&\":S+=\"utf8=%E2%9C%93&\"),w.length>0?S+w:\"\"}},7720:(e,t,r)=>{\"use strict\";var n=r(4765),o=Object.prototype.hasOwnProperty,i=Array.isArray,a=function(){for(var e=[],t=0;t<256;++t)e.push(\"%\"+((t<16?\"0\":\"\")+t.toString(16)).toUpperCase());return e}(),s=function(e,t){for(var r=t&&t.plainObjects?{__proto__:null}:{},n=0;n<e.length;++n)void 0!==e[n]&&(r[n]=e[n]);return r},u=1024;e.exports={arrayToObject:s,assign:function(e,t){return Object.keys(t).reduce((function(e,r){return e[r]=t[r],e}),e)},combine:function(e,t){return[].concat(e,t)},compact:function(e){for(var t=[{obj:{o:e},prop:\"o\"}],r=[],n=0;n<t.length;++n)for(var o=t[n],a=o.obj[o.prop],s=Object.keys(a),u=0;u<s.length;++u){var c=s[u],l=a[c];\"object\"==typeof l&&null!==l&&-1===r.indexOf(l)&&(t.push({obj:a,prop:c}),r.push(l))}return function(e){for(;e.length>1;){var t=e.pop(),r=t.obj[t.prop];if(i(r)){for(var n=[],o=0;o<r.length;++o)void 0!==r[o]&&n.push(r[o]);t.obj[t.prop]=n}}}(t),e},decode:function(e,t,r){var n=e.replace(/\\+/g,\" \");if(\"iso-8859-1\"===r)return n.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(n)}catch(e){return n}},encode:function(e,t,r,o,i){if(0===e.length)return e;var s=e;if(\"symbol\"==typeof e?s=Symbol.prototype.toString.call(e):\"string\"!=typeof e&&(s=String(e)),\"iso-8859-1\"===r)return escape(s).replace(/%u[0-9a-f]{4}/gi,(function(e){return\"%26%23\"+parseInt(e.slice(2),16)+\"%3B\"}));for(var c=\"\",l=0;l<s.length;l+=u){for(var f=s.length>=u?s.slice(l,l+u):s,p=[],d=0;d<f.length;++d){var h=f.charCodeAt(d);45===h||46===h||95===h||126===h||h>=48&&h<=57||h>=65&&h<=90||h>=97&&h<=122||i===n.RFC1738&&(40===h||41===h)?p[p.length]=f.charAt(d):h<128?p[p.length]=a[h]:h<2048?p[p.length]=a[192|h>>6]+a[128|63&h]:h<55296||h>=57344?p[p.length]=a[224|h>>12]+a[128|h>>6&63]+a[128|63&h]:(d+=1,h=65536+((1023&h)<<10|1023&f.charCodeAt(d)),p[p.length]=a[240|h>>18]+a[128|h>>12&63]+a[128|h>>6&63]+a[128|63&h])}c+=p.join(\"\")}return c},isBuffer:function(e){return!(!e||\"object\"!=typeof e)&&!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))},isRegExp:function(e){return\"[object RegExp]\"===Object.prototype.toString.call(e)},maybeMap:function(e,t){if(i(e)){for(var r=[],n=0;n<e.length;n+=1)r.push(t(e[n]));return r}return t(e)},merge:function e(t,r,n){if(!r)return t;if(\"object\"!=typeof r&&\"function\"!=typeof r){if(i(t))t.push(r);else{if(!t||\"object\"!=typeof t)return[t,r];(n&&(n.plainObjects||n.allowPrototypes)||!o.call(Object.prototype,r))&&(t[r]=!0)}return t}if(!t||\"object\"!=typeof t)return[t].concat(r);var a=t;return i(t)&&!i(r)&&(a=s(t,n)),i(t)&&i(r)?(r.forEach((function(r,i){if(o.call(t,i)){var a=t[i];a&&\"object\"==typeof a&&r&&\"object\"==typeof r?t[i]=e(a,r,n):t.push(r)}else t[i]=r})),t):Object.keys(r).reduce((function(t,i){var a=r[i];return o.call(t,i)?t[i]=e(t[i],a,n):t[i]=a,t}),a)}}},3209:(e,t,r)=>{\"use strict\";var n=65536,o=4294967295;var i=r(2861).Buffer,a=r.g.crypto||r.g.msCrypto;a&&a.getRandomValues?e.exports=function(e,t){if(e>o)throw new RangeError(\"requested too many random bytes\");var r=i.allocUnsafe(e);if(e>0)if(e>n)for(var s=0;s<e;s+=n)a.getRandomValues(r.slice(s,s+n));else a.getRandomValues(r);if(\"function\"==typeof t)return process.nextTick((function(){t(null,r)}));return r}:e.exports=function(){throw new Error(\"Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11\")}},6048:e=>{\"use strict\";var t={};function r(e,r,n){n||(n=Error);var o=function(e){var t,n;function o(t,n,o){return e.call(this,function(e,t,n){return\"string\"==typeof r?r:r(e,t,n)}(t,n,o))||this}return n=e,(t=o).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,o}(n);o.prototype.name=n.name,o.prototype.code=e,t[e]=o}function n(e,t){if(Array.isArray(e)){var r=e.length;return e=e.map((function(e){return String(e)})),r>2?\"one of \".concat(t,\" \").concat(e.slice(0,r-1).join(\", \"),\", or \")+e[r-1]:2===r?\"one of \".concat(t,\" \").concat(e[0],\" or \").concat(e[1]):\"of \".concat(t,\" \").concat(e[0])}return\"of \".concat(t,\" \").concat(String(e))}r(\"ERR_INVALID_OPT_VALUE\",(function(e,t){return'The value \"'+t+'\" is invalid for option \"'+e+'\"'}),TypeError),r(\"ERR_INVALID_ARG_TYPE\",(function(e,t,r){var o,i,a,s;if(\"string\"==typeof t&&(i=\"not \",t.substr(!a||a<0?0:+a,i.length)===i)?(o=\"must not be\",t=t.replace(/^not /,\"\")):o=\"must be\",function(e,t,r){return(void 0===r||r>e.length)&&(r=e.length),e.substring(r-t.length,r)===t}(e,\" argument\"))s=\"The \".concat(e,\" \").concat(o,\" \").concat(n(t,\"type\"));else{var u=function(e,t,r){return\"number\"!=typeof r&&(r=0),!(r+t.length>e.length)&&-1!==e.indexOf(t,r)}(e,\".\")?\"property\":\"argument\";s='The \"'.concat(e,'\" ').concat(u,\" \").concat(o,\" \").concat(n(t,\"type\"))}return s+=\". Received type \".concat(typeof r)}),TypeError),r(\"ERR_STREAM_PUSH_AFTER_EOF\",\"stream.push() after EOF\"),r(\"ERR_METHOD_NOT_IMPLEMENTED\",(function(e){return\"The \"+e+\" method is not implemented\"})),r(\"ERR_STREAM_PREMATURE_CLOSE\",\"Premature close\"),r(\"ERR_STREAM_DESTROYED\",(function(e){return\"Cannot call \"+e+\" after a stream was destroyed\"})),r(\"ERR_MULTIPLE_CALLBACK\",\"Callback called multiple times\"),r(\"ERR_STREAM_CANNOT_PIPE\",\"Cannot pipe, not readable\"),r(\"ERR_STREAM_WRITE_AFTER_END\",\"write after end\"),r(\"ERR_STREAM_NULL_VALUES\",\"May not write null values to stream\",TypeError),r(\"ERR_UNKNOWN_ENCODING\",(function(e){return\"Unknown encoding: \"+e}),TypeError),r(\"ERR_STREAM_UNSHIFT_AFTER_END_EVENT\",\"stream.unshift() after end event\"),e.exports.F=t},5382:(e,t,r)=>{\"use strict\";var n=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t};e.exports=c;var o=r(5412),i=r(6708);r(6698)(c,o);for(var a=n(i.prototype),s=0;s<a.length;s++){var u=a[s];c.prototype[u]||(c.prototype[u]=i.prototype[u])}function c(e){if(!(this instanceof c))return new c(e);o.call(this,e),i.call(this,e),this.allowHalfOpen=!0,e&&(!1===e.readable&&(this.readable=!1),!1===e.writable&&(this.writable=!1),!1===e.allowHalfOpen&&(this.allowHalfOpen=!1,this.once(\"end\",l)))}function l(){this._writableState.ended||process.nextTick(f,this)}function f(e){e.end()}Object.defineProperty(c.prototype,\"writableHighWaterMark\",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(c.prototype,\"writableBuffer\",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(c.prototype,\"writableLength\",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(c.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}})},3600:(e,t,r)=>{\"use strict\";e.exports=o;var n=r(4610);function o(e){if(!(this instanceof o))return new o(e);n.call(this,e)}r(6698)(o,n),o.prototype._transform=function(e,t,r){r(null,e)}},5412:(e,t,r)=>{\"use strict\";var n;e.exports=k,k.ReadableState=_;r(7007).EventEmitter;var o=function(e,t){return e.listeners(t).length},i=r(345),a=r(8287).Buffer,s=(void 0!==r.g?r.g:\"undefined\"!=typeof window?window:\"undefined\"!=typeof self?self:{}).Uint8Array||function(){};var u,c=r(9838);u=c&&c.debuglog?c.debuglog(\"stream\"):function(){};var l,f,p,d=r(2726),h=r(5896),y=r(5291).getHighWaterMark,m=r(6048).F,v=m.ERR_INVALID_ARG_TYPE,g=m.ERR_STREAM_PUSH_AFTER_EOF,b=m.ERR_METHOD_NOT_IMPLEMENTED,w=m.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;r(6698)(k,i);var S=h.errorOrDestroy,E=[\"error\",\"close\",\"destroy\",\"pause\",\"resume\"];function _(e,t,o){n=n||r(5382),e=e||{},\"boolean\"!=typeof o&&(o=t instanceof n),this.objectMode=!!e.objectMode,o&&(this.objectMode=this.objectMode||!!e.readableObjectMode),this.highWaterMark=y(this,e,\"readableHighWaterMark\",o),this.buffer=new d,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.destroyed=!1,this.defaultEncoding=e.defaultEncoding||\"utf8\",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(l||(l=r(3141).I),this.decoder=new l(e.encoding),this.encoding=e.encoding)}function k(e){if(n=n||r(5382),!(this instanceof k))return new k(e);var t=this instanceof n;this._readableState=new _(e,this,t),this.readable=!0,e&&(\"function\"==typeof e.read&&(this._read=e.read),\"function\"==typeof e.destroy&&(this._destroy=e.destroy)),i.call(this)}function T(e,t,r,n,o){u(\"readableAddChunk\",t);var i,c=e._readableState;if(null===t)c.reading=!1,function(e,t){if(u(\"onEofChunk\"),t.ended)return;if(t.decoder){var r=t.decoder.end();r&&r.length&&(t.buffer.push(r),t.length+=t.objectMode?1:r.length)}t.ended=!0,t.sync?P(e):(t.needReadable=!1,t.emittedReadable||(t.emittedReadable=!0,R(e)))}(e,c);else if(o||(i=function(e,t){var r;n=t,a.isBuffer(n)||n instanceof s||\"string\"==typeof t||void 0===t||e.objectMode||(r=new v(\"chunk\",[\"string\",\"Buffer\",\"Uint8Array\"],t));var n;return r}(c,t)),i)S(e,i);else if(c.objectMode||t&&t.length>0)if(\"string\"==typeof t||c.objectMode||Object.getPrototypeOf(t)===a.prototype||(t=function(e){return a.from(e)}(t)),n)c.endEmitted?S(e,new w):O(e,c,t,!0);else if(c.ended)S(e,new g);else{if(c.destroyed)return!1;c.reading=!1,c.decoder&&!r?(t=c.decoder.write(t),c.objectMode||0!==t.length?O(e,c,t,!1):j(e,c)):O(e,c,t,!1)}else n||(c.reading=!1,j(e,c));return!c.ended&&(c.length<c.highWaterMark||0===c.length)}function O(e,t,r,n){t.flowing&&0===t.length&&!t.sync?(t.awaitDrain=0,e.emit(\"data\",r)):(t.length+=t.objectMode?1:r.length,n?t.buffer.unshift(r):t.buffer.push(r),t.needReadable&&P(e)),j(e,t)}Object.defineProperty(k.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),k.prototype.destroy=h.destroy,k.prototype._undestroy=h.undestroy,k.prototype._destroy=function(e,t){t(e)},k.prototype.push=function(e,t){var r,n=this._readableState;return n.objectMode?r=!0:\"string\"==typeof e&&((t=t||n.defaultEncoding)!==n.encoding&&(e=a.from(e,t),t=\"\"),r=!0),T(this,e,t,!1,r)},k.prototype.unshift=function(e){return T(this,e,null,!0,!1)},k.prototype.isPaused=function(){return!1===this._readableState.flowing},k.prototype.setEncoding=function(e){l||(l=r(3141).I);var t=new l(e);this._readableState.decoder=t,this._readableState.encoding=this._readableState.decoder.encoding;for(var n=this._readableState.buffer.head,o=\"\";null!==n;)o+=t.write(n.data),n=n.next;return this._readableState.buffer.clear(),\"\"!==o&&this._readableState.buffer.push(o),this._readableState.length=o.length,this};var x=1073741824;function A(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=x?e=x:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function P(e){var t=e._readableState;u(\"emitReadable\",t.needReadable,t.emittedReadable),t.needReadable=!1,t.emittedReadable||(u(\"emitReadable\",t.flowing),t.emittedReadable=!0,process.nextTick(R,e))}function R(e){var t=e._readableState;u(\"emitReadable_\",t.destroyed,t.length,t.ended),t.destroyed||!t.length&&!t.ended||(e.emit(\"readable\"),t.emittedReadable=!1),t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark,N(e)}function j(e,t){t.readingMore||(t.readingMore=!0,process.nextTick(C,e,t))}function C(e,t){for(;!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&0===t.length);){var r=t.length;if(u(\"maybeReadMore read 0\"),e.read(0),r===t.length)break}t.readingMore=!1}function I(e){var t=e._readableState;t.readableListening=e.listenerCount(\"readable\")>0,t.resumeScheduled&&!t.paused?t.flowing=!0:e.listenerCount(\"data\")>0&&e.resume()}function L(e){u(\"readable nexttick read 0\"),e.read(0)}function B(e,t){u(\"resume\",t.reading),t.reading||e.read(0),t.resumeScheduled=!1,e.emit(\"resume\"),N(e),t.flowing&&!t.reading&&e.read(0)}function N(e){var t=e._readableState;for(u(\"flow\",t.flowing);t.flowing&&null!==e.read(););}function U(e,t){return 0===t.length?null:(t.objectMode?r=t.buffer.shift():!e||e>=t.length?(r=t.decoder?t.buffer.join(\"\"):1===t.buffer.length?t.buffer.first():t.buffer.concat(t.length),t.buffer.clear()):r=t.buffer.consume(e,t.decoder),r);var r}function M(e){var t=e._readableState;u(\"endReadable\",t.endEmitted),t.endEmitted||(t.ended=!0,process.nextTick(D,t,e))}function D(e,t){if(u(\"endReadableNT\",e.endEmitted,e.length),!e.endEmitted&&0===e.length&&(e.endEmitted=!0,t.readable=!1,t.emit(\"end\"),e.autoDestroy)){var r=t._writableState;(!r||r.autoDestroy&&r.finished)&&t.destroy()}}function F(e,t){for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1}k.prototype.read=function(e){u(\"read\",e),e=parseInt(e,10);var t=this._readableState,r=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&((0!==t.highWaterMark?t.length>=t.highWaterMark:t.length>0)||t.ended))return u(\"read: emitReadable\",t.length,t.ended),0===t.length&&t.ended?M(this):P(this),null;if(0===(e=A(e,t))&&t.ended)return 0===t.length&&M(this),null;var n,o=t.needReadable;return u(\"need readable\",o),(0===t.length||t.length-e<t.highWaterMark)&&u(\"length less than watermark\",o=!0),t.ended||t.reading?u(\"reading or ended\",o=!1):o&&(u(\"do read\"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=A(r,t))),null===(n=e>0?U(e,t):null)?(t.needReadable=t.length<=t.highWaterMark,e=0):(t.length-=e,t.awaitDrain=0),0===t.length&&(t.ended||(t.needReadable=!0),r!==e&&t.ended&&M(this)),null!==n&&this.emit(\"data\",n),n},k.prototype._read=function(e){S(this,new b(\"_read()\"))},k.prototype.pipe=function(e,t){var r=this,n=this._readableState;switch(n.pipesCount){case 0:n.pipes=e;break;case 1:n.pipes=[n.pipes,e];break;default:n.pipes.push(e)}n.pipesCount+=1,u(\"pipe count=%d opts=%j\",n.pipesCount,t);var i=(!t||!1!==t.end)&&e!==process.stdout&&e!==process.stderr?s:y;function a(t,o){u(\"onunpipe\"),t===r&&o&&!1===o.hasUnpiped&&(o.hasUnpiped=!0,u(\"cleanup\"),e.removeListener(\"close\",d),e.removeListener(\"finish\",h),e.removeListener(\"drain\",c),e.removeListener(\"error\",p),e.removeListener(\"unpipe\",a),r.removeListener(\"end\",s),r.removeListener(\"end\",y),r.removeListener(\"data\",f),l=!0,!n.awaitDrain||e._writableState&&!e._writableState.needDrain||c())}function s(){u(\"onend\"),e.end()}n.endEmitted?process.nextTick(i):r.once(\"end\",i),e.on(\"unpipe\",a);var c=function(e){return function(){var t=e._readableState;u(\"pipeOnDrain\",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&o(e,\"data\")&&(t.flowing=!0,N(e))}}(r);e.on(\"drain\",c);var l=!1;function f(t){u(\"ondata\");var o=e.write(t);u(\"dest.write\",o),!1===o&&((1===n.pipesCount&&n.pipes===e||n.pipesCount>1&&-1!==F(n.pipes,e))&&!l&&(u(\"false write response, pause\",n.awaitDrain),n.awaitDrain++),r.pause())}function p(t){u(\"onerror\",t),y(),e.removeListener(\"error\",p),0===o(e,\"error\")&&S(e,t)}function d(){e.removeListener(\"finish\",h),y()}function h(){u(\"onfinish\"),e.removeListener(\"close\",d),y()}function y(){u(\"unpipe\"),r.unpipe(e)}return r.on(\"data\",f),function(e,t,r){if(\"function\"==typeof e.prependListener)return e.prependListener(t,r);e._events&&e._events[t]?Array.isArray(e._events[t])?e._events[t].unshift(r):e._events[t]=[r,e._events[t]]:e.on(t,r)}(e,\"error\",p),e.once(\"close\",d),e.once(\"finish\",h),e.emit(\"pipe\",r),n.flowing||(u(\"pipe resume\"),r.resume()),e},k.prototype.unpipe=function(e){var t=this._readableState,r={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes||(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit(\"unpipe\",this,r)),this;if(!e){var n=t.pipes,o=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var i=0;i<o;i++)n[i].emit(\"unpipe\",this,{hasUnpiped:!1});return this}var a=F(t.pipes,e);return-1===a||(t.pipes.splice(a,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit(\"unpipe\",this,r)),this},k.prototype.on=function(e,t){var r=i.prototype.on.call(this,e,t),n=this._readableState;return\"data\"===e?(n.readableListening=this.listenerCount(\"readable\")>0,!1!==n.flowing&&this.resume()):\"readable\"===e&&(n.endEmitted||n.readableListening||(n.readableListening=n.needReadable=!0,n.flowing=!1,n.emittedReadable=!1,u(\"on readable\",n.length,n.reading),n.length?P(this):n.reading||process.nextTick(L,this))),r},k.prototype.addListener=k.prototype.on,k.prototype.removeListener=function(e,t){var r=i.prototype.removeListener.call(this,e,t);return\"readable\"===e&&process.nextTick(I,this),r},k.prototype.removeAllListeners=function(e){var t=i.prototype.removeAllListeners.apply(this,arguments);return\"readable\"!==e&&void 0!==e||process.nextTick(I,this),t},k.prototype.resume=function(){var e=this._readableState;return e.flowing||(u(\"resume\"),e.flowing=!e.readableListening,function(e,t){t.resumeScheduled||(t.resumeScheduled=!0,process.nextTick(B,e,t))}(this,e)),e.paused=!1,this},k.prototype.pause=function(){return u(\"call pause flowing=%j\",this._readableState.flowing),!1!==this._readableState.flowing&&(u(\"pause\"),this._readableState.flowing=!1,this.emit(\"pause\")),this._readableState.paused=!0,this},k.prototype.wrap=function(e){var t=this,r=this._readableState,n=!1;for(var o in e.on(\"end\",(function(){if(u(\"wrapped end\"),r.decoder&&!r.ended){var e=r.decoder.end();e&&e.length&&t.push(e)}t.push(null)})),e.on(\"data\",(function(o){(u(\"wrapped data\"),r.decoder&&(o=r.decoder.write(o)),r.objectMode&&null==o)||(r.objectMode||o&&o.length)&&(t.push(o)||(n=!0,e.pause()))})),e)void 0===this[o]&&\"function\"==typeof e[o]&&(this[o]=function(t){return function(){return e[t].apply(e,arguments)}}(o));for(var i=0;i<E.length;i++)e.on(E[i],this.emit.bind(this,E[i]));return this._read=function(t){u(\"wrapped _read\",t),n&&(n=!1,e.resume())},this},\"function\"==typeof Symbol&&(k.prototype[Symbol.asyncIterator]=function(){return void 0===f&&(f=r(2955)),f(this)}),Object.defineProperty(k.prototype,\"readableHighWaterMark\",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(k.prototype,\"readableBuffer\",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(k.prototype,\"readableFlowing\",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}}),k._fromList=U,Object.defineProperty(k.prototype,\"readableLength\",{enumerable:!1,get:function(){return this._readableState.length}}),\"function\"==typeof Symbol&&(k.from=function(e,t){return void 0===p&&(p=r(5157)),p(k,e,t)})},4610:(e,t,r)=>{\"use strict\";e.exports=l;var n=r(6048).F,o=n.ERR_METHOD_NOT_IMPLEMENTED,i=n.ERR_MULTIPLE_CALLBACK,a=n.ERR_TRANSFORM_ALREADY_TRANSFORMING,s=n.ERR_TRANSFORM_WITH_LENGTH_0,u=r(5382);function c(e,t){var r=this._transformState;r.transforming=!1;var n=r.writecb;if(null===n)return this.emit(\"error\",new i);r.writechunk=null,r.writecb=null,null!=t&&this.push(t),n(e);var o=this._readableState;o.reading=!1,(o.needReadable||o.length<o.highWaterMark)&&this._read(o.highWaterMark)}function l(e){if(!(this instanceof l))return new l(e);u.call(this,e),this._transformState={afterTransform:c.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&(\"function\"==typeof e.transform&&(this._transform=e.transform),\"function\"==typeof e.flush&&(this._flush=e.flush)),this.on(\"prefinish\",f)}function f(){var e=this;\"function\"!=typeof this._flush||this._readableState.destroyed?p(this,null,null):this._flush((function(t,r){p(e,t,r)}))}function p(e,t,r){if(t)return e.emit(\"error\",t);if(null!=r&&e.push(r),e._writableState.length)throw new s;if(e._transformState.transforming)throw new a;return e.push(null)}r(6698)(l,u),l.prototype.push=function(e,t){return this._transformState.needTransform=!1,u.prototype.push.call(this,e,t)},l.prototype._transform=function(e,t,r){r(new o(\"_transform()\"))},l.prototype._write=function(e,t,r){var n=this._transformState;if(n.writecb=r,n.writechunk=e,n.writeencoding=t,!n.transforming){var o=this._readableState;(n.needTransform||o.needReadable||o.length<o.highWaterMark)&&this._read(o.highWaterMark)}},l.prototype._read=function(e){var t=this._transformState;null===t.writechunk||t.transforming?t.needTransform=!0:(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform))},l.prototype._destroy=function(e,t){u.prototype._destroy.call(this,e,(function(e){t(e)}))}},6708:(e,t,r)=>{\"use strict\";function n(e){var t=this;this.next=null,this.entry=null,this.finish=function(){!function(e,t,r){var n=e.entry;e.entry=null;for(;n;){var o=n.callback;t.pendingcb--,o(r),n=n.next}t.corkedRequestsFree.next=e}(t,e)}}var o;e.exports=k,k.WritableState=_;var i={deprecate:r(4643)},a=r(345),s=r(8287).Buffer,u=(void 0!==r.g?r.g:\"undefined\"!=typeof window?window:\"undefined\"!=typeof self?self:{}).Uint8Array||function(){};var c,l=r(5896),f=r(5291).getHighWaterMark,p=r(6048).F,d=p.ERR_INVALID_ARG_TYPE,h=p.ERR_METHOD_NOT_IMPLEMENTED,y=p.ERR_MULTIPLE_CALLBACK,m=p.ERR_STREAM_CANNOT_PIPE,v=p.ERR_STREAM_DESTROYED,g=p.ERR_STREAM_NULL_VALUES,b=p.ERR_STREAM_WRITE_AFTER_END,w=p.ERR_UNKNOWN_ENCODING,S=l.errorOrDestroy;function E(){}function _(e,t,i){o=o||r(5382),e=e||{},\"boolean\"!=typeof i&&(i=t instanceof o),this.objectMode=!!e.objectMode,i&&(this.objectMode=this.objectMode||!!e.writableObjectMode),this.highWaterMark=f(this,e,\"writableHighWaterMark\",i),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var a=!1===e.decodeStrings;this.decodeStrings=!a,this.defaultEncoding=e.defaultEncoding||\"utf8\",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,t){var r=e._writableState,n=r.sync,o=r.writecb;if(\"function\"!=typeof o)throw new y;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(r),t)!function(e,t,r,n,o){--t.pendingcb,r?(process.nextTick(o,n),process.nextTick(R,e,t),e._writableState.errorEmitted=!0,S(e,n)):(o(n),e._writableState.errorEmitted=!0,S(e,n),R(e,t))}(e,r,n,t,o);else{var i=A(r)||e.destroyed;i||r.corked||r.bufferProcessing||!r.bufferedRequest||x(e,r),n?process.nextTick(O,e,r,i,o):O(e,r,i,o)}}(t,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new n(this)}function k(e){var t=this instanceof(o=o||r(5382));if(!t&&!c.call(k,this))return new k(e);this._writableState=new _(e,this,t),this.writable=!0,e&&(\"function\"==typeof e.write&&(this._write=e.write),\"function\"==typeof e.writev&&(this._writev=e.writev),\"function\"==typeof e.destroy&&(this._destroy=e.destroy),\"function\"==typeof e.final&&(this._final=e.final)),a.call(this)}function T(e,t,r,n,o,i,a){t.writelen=n,t.writecb=a,t.writing=!0,t.sync=!0,t.destroyed?t.onwrite(new v(\"write\")):r?e._writev(o,t.onwrite):e._write(o,i,t.onwrite),t.sync=!1}function O(e,t,r,n){r||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit(\"drain\"))}(e,t),t.pendingcb--,n(),R(e,t)}function x(e,t){t.bufferProcessing=!0;var r=t.bufferedRequest;if(e._writev&&r&&r.next){var o=t.bufferedRequestCount,i=new Array(o),a=t.corkedRequestsFree;a.entry=r;for(var s=0,u=!0;r;)i[s]=r,r.isBuf||(u=!1),r=r.next,s+=1;i.allBuffers=u,T(e,t,!0,t.length,i,\"\",a.finish),t.pendingcb++,t.lastBufferedRequest=null,a.next?(t.corkedRequestsFree=a.next,a.next=null):t.corkedRequestsFree=new n(t),t.bufferedRequestCount=0}else{for(;r;){var c=r.chunk,l=r.encoding,f=r.callback;if(T(e,t,!1,t.objectMode?1:c.length,c,l,f),r=r.next,t.bufferedRequestCount--,t.writing)break}null===r&&(t.lastBufferedRequest=null)}t.bufferedRequest=r,t.bufferProcessing=!1}function A(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function P(e,t){e._final((function(r){t.pendingcb--,r&&S(e,r),t.prefinished=!0,e.emit(\"prefinish\"),R(e,t)}))}function R(e,t){var r=A(t);if(r&&(function(e,t){t.prefinished||t.finalCalled||(\"function\"!=typeof e._final||t.destroyed?(t.prefinished=!0,e.emit(\"prefinish\")):(t.pendingcb++,t.finalCalled=!0,process.nextTick(P,e,t)))}(e,t),0===t.pendingcb&&(t.finished=!0,e.emit(\"finish\"),t.autoDestroy))){var n=e._readableState;(!n||n.autoDestroy&&n.endEmitted)&&e.destroy()}return r}r(6698)(k,a),_.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(_.prototype,\"buffer\",{get:i.deprecate((function(){return this.getBuffer()}),\"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.\",\"DEP0003\")})}catch(e){}}(),\"function\"==typeof Symbol&&Symbol.hasInstance&&\"function\"==typeof Function.prototype[Symbol.hasInstance]?(c=Function.prototype[Symbol.hasInstance],Object.defineProperty(k,Symbol.hasInstance,{value:function(e){return!!c.call(this,e)||this===k&&(e&&e._writableState instanceof _)}})):c=function(e){return e instanceof this},k.prototype.pipe=function(){S(this,new m)},k.prototype.write=function(e,t,r){var n,o=this._writableState,i=!1,a=!o.objectMode&&(n=e,s.isBuffer(n)||n instanceof u);return a&&!s.isBuffer(e)&&(e=function(e){return s.from(e)}(e)),\"function\"==typeof t&&(r=t,t=null),a?t=\"buffer\":t||(t=o.defaultEncoding),\"function\"!=typeof r&&(r=E),o.ending?function(e,t){var r=new b;S(e,r),process.nextTick(t,r)}(this,r):(a||function(e,t,r,n){var o;return null===r?o=new g:\"string\"==typeof r||t.objectMode||(o=new d(\"chunk\",[\"string\",\"Buffer\"],r)),!o||(S(e,o),process.nextTick(n,o),!1)}(this,o,e,r))&&(o.pendingcb++,i=function(e,t,r,n,o,i){if(!r){var a=function(e,t,r){e.objectMode||!1===e.decodeStrings||\"string\"!=typeof t||(t=s.from(t,r));return t}(t,n,o);n!==a&&(r=!0,o=\"buffer\",n=a)}var u=t.objectMode?1:n.length;t.length+=u;var c=t.length<t.highWaterMark;c||(t.needDrain=!0);if(t.writing||t.corked){var l=t.lastBufferedRequest;t.lastBufferedRequest={chunk:n,encoding:o,isBuf:r,callback:i,next:null},l?l.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else T(e,t,!1,u,n,o,i);return c}(this,o,a,e,t,r)),i},k.prototype.cork=function(){this._writableState.corked++},k.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.bufferProcessing||!e.bufferedRequest||x(this,e))},k.prototype.setDefaultEncoding=function(e){if(\"string\"==typeof e&&(e=e.toLowerCase()),!([\"hex\",\"utf8\",\"utf-8\",\"ascii\",\"binary\",\"base64\",\"ucs2\",\"ucs-2\",\"utf16le\",\"utf-16le\",\"raw\"].indexOf((e+\"\").toLowerCase())>-1))throw new w(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(k.prototype,\"writableBuffer\",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(k.prototype,\"writableHighWaterMark\",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),k.prototype._write=function(e,t,r){r(new h(\"_write()\"))},k.prototype._writev=null,k.prototype.end=function(e,t,r){var n=this._writableState;return\"function\"==typeof e?(r=e,e=null,t=null):\"function\"==typeof t&&(r=t,t=null),null!=e&&this.write(e,t),n.corked&&(n.corked=1,this.uncork()),n.ending||function(e,t,r){t.ending=!0,R(e,t),r&&(t.finished?process.nextTick(r):e.once(\"finish\",r));t.ended=!0,e.writable=!1}(this,n,r),this},Object.defineProperty(k.prototype,\"writableLength\",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(k.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),k.prototype.destroy=l.destroy,k.prototype._undestroy=l.undestroy,k.prototype._destroy=function(e,t){t(e)}},2955:(e,t,r)=>{\"use strict\";var n;function o(e,t,r){return(t=function(e){var t=function(e,t){if(\"object\"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var i=r(6238),a=Symbol(\"lastResolve\"),s=Symbol(\"lastReject\"),u=Symbol(\"error\"),c=Symbol(\"ended\"),l=Symbol(\"lastPromise\"),f=Symbol(\"handlePromise\"),p=Symbol(\"stream\");function d(e,t){return{value:e,done:t}}function h(e){var t=e[a];if(null!==t){var r=e[p].read();null!==r&&(e[l]=null,e[a]=null,e[s]=null,t(d(r,!1)))}}function y(e){process.nextTick(h,e)}var m=Object.getPrototypeOf((function(){})),v=Object.setPrototypeOf((o(n={get stream(){return this[p]},next:function(){var e=this,t=this[u];if(null!==t)return Promise.reject(t);if(this[c])return Promise.resolve(d(void 0,!0));if(this[p].destroyed)return new Promise((function(t,r){process.nextTick((function(){e[u]?r(e[u]):t(d(void 0,!0))}))}));var r,n=this[l];if(n)r=new Promise(function(e,t){return function(r,n){e.then((function(){t[c]?r(d(void 0,!0)):t[f](r,n)}),n)}}(n,this));else{var o=this[p].read();if(null!==o)return Promise.resolve(d(o,!1));r=new Promise(this[f])}return this[l]=r,r}},Symbol.asyncIterator,(function(){return this})),o(n,\"return\",(function(){var e=this;return new Promise((function(t,r){e[p].destroy(null,(function(e){e?r(e):t(d(void 0,!0))}))}))})),n),m);e.exports=function(e){var t,r=Object.create(v,(o(t={},p,{value:e,writable:!0}),o(t,a,{value:null,writable:!0}),o(t,s,{value:null,writable:!0}),o(t,u,{value:null,writable:!0}),o(t,c,{value:e._readableState.endEmitted,writable:!0}),o(t,f,{value:function(e,t){var n=r[p].read();n?(r[l]=null,r[a]=null,r[s]=null,e(d(n,!1))):(r[a]=e,r[s]=t)},writable:!0}),t));return r[l]=null,i(e,(function(e){if(e&&\"ERR_STREAM_PREMATURE_CLOSE\"!==e.code){var t=r[s];return null!==t&&(r[l]=null,r[a]=null,r[s]=null,t(e)),void(r[u]=e)}var n=r[a];null!==n&&(r[l]=null,r[a]=null,r[s]=null,n(d(void 0,!0))),r[c]=!0})),e.on(\"readable\",y.bind(null,r)),r}},2726:(e,t,r)=>{\"use strict\";function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t,r){return(t=s(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,s(n.key),n)}}function s(e){var t=function(e,t){if(\"object\"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==typeof t?t:String(t)}var u=r(8287).Buffer,c=r(5340).inspect,l=c&&c.custom||\"inspect\";e.exports=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.head=null,this.tail=null,this.length=0}var t,r,n;return t=e,(r=[{key:\"push\",value:function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length}},{key:\"unshift\",value:function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length}},{key:\"shift\",value:function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}}},{key:\"clear\",value:function(){this.head=this.tail=null,this.length=0}},{key:\"join\",value:function(e){if(0===this.length)return\"\";for(var t=this.head,r=\"\"+t.data;t=t.next;)r+=e+t.data;return r}},{key:\"concat\",value:function(e){if(0===this.length)return u.alloc(0);for(var t,r,n,o=u.allocUnsafe(e>>>0),i=this.head,a=0;i;)t=i.data,r=o,n=a,u.prototype.copy.call(t,r,n),a+=i.data.length,i=i.next;return o}},{key:\"consume\",value:function(e,t){var r;return e<this.head.data.length?(r=this.head.data.slice(0,e),this.head.data=this.head.data.slice(e)):r=e===this.head.data.length?this.shift():t?this._getString(e):this._getBuffer(e),r}},{key:\"first\",value:function(){return this.head.data}},{key:\"_getString\",value:function(e){var t=this.head,r=1,n=t.data;for(e-=n.length;t=t.next;){var o=t.data,i=e>o.length?o.length:e;if(i===o.length?n+=o:n+=o.slice(0,e),0==(e-=i)){i===o.length?(++r,t.next?this.head=t.next:this.head=this.tail=null):(this.head=t,t.data=o.slice(i));break}++r}return this.length-=r,n}},{key:\"_getBuffer\",value:function(e){var t=u.allocUnsafe(e),r=this.head,n=1;for(r.data.copy(t),e-=r.data.length;r=r.next;){var o=r.data,i=e>o.length?o.length:e;if(o.copy(t,t.length-e,0,i),0==(e-=i)){i===o.length?(++n,r.next?this.head=r.next:this.head=this.tail=null):(this.head=r,r.data=o.slice(i));break}++n}return this.length-=n,t}},{key:l,value:function(e,t){return c(this,o(o({},t),{},{depth:0,customInspect:!1}))}}])&&a(t.prototype,r),n&&a(t,n),Object.defineProperty(t,\"prototype\",{writable:!1}),e}()},5896:e=>{\"use strict\";function t(e,t){n(e,t),r(e)}function r(e){e._writableState&&!e._writableState.emitClose||e._readableState&&!e._readableState.emitClose||e.emit(\"close\")}function n(e,t){e.emit(\"error\",t)}e.exports={destroy:function(e,o){var i=this,a=this._readableState&&this._readableState.destroyed,s=this._writableState&&this._writableState.destroyed;return a||s?(o?o(e):e&&(this._writableState?this._writableState.errorEmitted||(this._writableState.errorEmitted=!0,process.nextTick(n,this,e)):process.nextTick(n,this,e)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(e||null,(function(e){!o&&e?i._writableState?i._writableState.errorEmitted?process.nextTick(r,i):(i._writableState.errorEmitted=!0,process.nextTick(t,i,e)):process.nextTick(t,i,e):o?(process.nextTick(r,i),o(e)):process.nextTick(r,i)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(e,t){var r=e._readableState,n=e._writableState;r&&r.autoDestroy||n&&n.autoDestroy?e.destroy(t):e.emit(\"error\",t)}}},6238:(e,t,r)=>{\"use strict\";var n=r(6048).F.ERR_STREAM_PREMATURE_CLOSE;function o(){}e.exports=function e(t,r,i){if(\"function\"==typeof r)return e(t,null,r);r||(r={}),i=function(e){var t=!1;return function(){if(!t){t=!0;for(var r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];e.apply(this,n)}}}(i||o);var a=r.readable||!1!==r.readable&&t.readable,s=r.writable||!1!==r.writable&&t.writable,u=function(){t.writable||l()},c=t._writableState&&t._writableState.finished,l=function(){s=!1,c=!0,a||i.call(t)},f=t._readableState&&t._readableState.endEmitted,p=function(){a=!1,f=!0,s||i.call(t)},d=function(e){i.call(t,e)},h=function(){var e;return a&&!f?(t._readableState&&t._readableState.ended||(e=new n),i.call(t,e)):s&&!c?(t._writableState&&t._writableState.ended||(e=new n),i.call(t,e)):void 0},y=function(){t.req.on(\"finish\",l)};return!function(e){return e.setHeader&&\"function\"==typeof e.abort}(t)?s&&!t._writableState&&(t.on(\"end\",u),t.on(\"close\",u)):(t.on(\"complete\",l),t.on(\"abort\",h),t.req?y():t.on(\"request\",y)),t.on(\"end\",p),t.on(\"finish\",l),!1!==r.error&&t.on(\"error\",d),t.on(\"close\",h),function(){t.removeListener(\"complete\",l),t.removeListener(\"abort\",h),t.removeListener(\"request\",y),t.req&&t.req.removeListener(\"finish\",l),t.removeListener(\"end\",u),t.removeListener(\"close\",u),t.removeListener(\"finish\",l),t.removeListener(\"end\",p),t.removeListener(\"error\",d),t.removeListener(\"close\",h)}}},5157:e=>{e.exports=function(){throw new Error(\"Readable.from is not available in the browser\")}},7758:(e,t,r)=>{\"use strict\";var n;var o=r(6048).F,i=o.ERR_MISSING_ARGS,a=o.ERR_STREAM_DESTROYED;function s(e){if(e)throw e}function u(e){e()}function c(e,t){return e.pipe(t)}e.exports=function(){for(var e=arguments.length,t=new Array(e),o=0;o<e;o++)t[o]=arguments[o];var l,f=function(e){return e.length?\"function\"!=typeof e[e.length-1]?s:e.pop():s}(t);if(Array.isArray(t[0])&&(t=t[0]),t.length<2)throw new i(\"streams\");var p=t.map((function(e,o){var i=o<t.length-1;return function(e,t,o,i){i=function(e){var t=!1;return function(){t||(t=!0,e.apply(void 0,arguments))}}(i);var s=!1;e.on(\"close\",(function(){s=!0})),void 0===n&&(n=r(6238)),n(e,{readable:t,writable:o},(function(e){if(e)return i(e);s=!0,i()}));var u=!1;return function(t){if(!s&&!u)return u=!0,function(e){return e.setHeader&&\"function\"==typeof e.abort}(e)?e.abort():\"function\"==typeof e.destroy?e.destroy():void i(t||new a(\"pipe\"))}}(e,i,o>0,(function(e){l||(l=e),e&&p.forEach(u),i||(p.forEach(u),f(l))}))}));return t.reduce(c)}},5291:(e,t,r)=>{\"use strict\";var n=r(6048).F.ERR_INVALID_OPT_VALUE;e.exports={getHighWaterMark:function(e,t,r,o){var i=function(e,t,r){return null!=e.highWaterMark?e.highWaterMark:t?e[r]:null}(t,o,r);if(null!=i){if(!isFinite(i)||Math.floor(i)!==i||i<0)throw new n(o?r:\"highWaterMark\",i);return Math.floor(i)}return e.objectMode?16:16384}}},345:(e,t,r)=>{e.exports=r(7007).EventEmitter},8399:(e,t,r)=>{(t=e.exports=r(5412)).Stream=t,t.Readable=t,t.Writable=r(6708),t.Duplex=r(5382),t.Transform=r(4610),t.PassThrough=r(3600),t.finished=r(6238),t.pipeline=r(7758)},2861:(e,t,r)=>{var n=r(8287),o=n.Buffer;function i(e,t){for(var r in e)t[r]=e[r]}function a(e,t,r){return o(e,t,r)}o.from&&o.alloc&&o.allocUnsafe&&o.allocUnsafeSlow?e.exports=n:(i(n,t),t.Buffer=a),a.prototype=Object.create(o.prototype),i(o,a),a.from=function(e,t,r){if(\"number\"==typeof e)throw new TypeError(\"Argument must not be a number\");return o(e,t,r)},a.alloc=function(e,t,r){if(\"number\"!=typeof e)throw new TypeError(\"Argument must be a number\");var n=o(e);return void 0!==t?\"string\"==typeof r?n.fill(t,r):n.fill(t):n.fill(0),n},a.allocUnsafe=function(e){if(\"number\"!=typeof e)throw new TypeError(\"Argument must be a number\");return o(e)},a.allocUnsafeSlow=function(e){if(\"number\"!=typeof e)throw new TypeError(\"Argument must be a number\");return n.SlowBuffer(e)}},6897:(e,t,r)=>{\"use strict\";var n=r(453),o=r(41),i=r(592)(),a=r(5795),s=r(9675),u=n(\"%Math.floor%\");e.exports=function(e,t){if(\"function\"!=typeof e)throw new s(\"`fn` is not a function\");if(\"number\"!=typeof t||t<0||t>4294967295||u(t)!==t)throw new s(\"`length` must be a positive 32-bit integer\");var r=arguments.length>2&&!!arguments[2],n=!0,c=!0;if(\"length\"in e&&a){var l=a(e,\"length\");l&&!l.configurable&&(n=!1),l&&!l.writable&&(c=!1)}return(n||c||!r)&&(i?o(e,\"length\",t,!0,!0):o(e,\"length\",t)),e}},392:(e,t,r)=>{var n=r(2861).Buffer;function o(e,t){this._block=n.alloc(e),this._finalSize=t,this._blockSize=e,this._len=0}o.prototype.update=function(e,t){\"string\"==typeof e&&(t=t||\"utf8\",e=n.from(e,t));for(var r=this._block,o=this._blockSize,i=e.length,a=this._len,s=0;s<i;){for(var u=a%o,c=Math.min(i-s,o-u),l=0;l<c;l++)r[u+l]=e[s+l];s+=c,(a+=c)%o==0&&this._update(r)}return this._len+=i,this},o.prototype.digest=function(e){var t=this._len%this._blockSize;this._block[t]=128,this._block.fill(0,t+1),t>=this._finalSize&&(this._update(this._block),this._block.fill(0));var r=8*this._len;if(r<=4294967295)this._block.writeUInt32BE(r,this._blockSize-4);else{var n=(4294967295&r)>>>0,o=(r-n)/4294967296;this._block.writeUInt32BE(o,this._blockSize-8),this._block.writeUInt32BE(n,this._blockSize-4)}this._update(this._block);var i=this._hash();return e?i.toString(e):i},o.prototype._update=function(){throw new Error(\"_update must be implemented by subclass\")},e.exports=o},2802:(e,t,r)=>{var n=e.exports=function(e){e=e.toLowerCase();var t=n[e];if(!t)throw new Error(e+\" is not supported (we accept pull requests)\");return new t};n.sha=r(7816),n.sha1=r(3737),n.sha224=r(6710),n.sha256=r(4107),n.sha384=r(2827),n.sha512=r(2890)},7816:(e,t,r)=>{var n=r(6698),o=r(392),i=r(2861).Buffer,a=[1518500249,1859775393,-1894007588,-899497514],s=new Array(80);function u(){this.init(),this._w=s,o.call(this,64,56)}function c(e){return e<<30|e>>>2}function l(e,t,r,n){return 0===e?t&r|~t&n:2===e?t&r|t&n|r&n:t^r^n}n(u,o),u.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},u.prototype._update=function(e){for(var t,r=this._w,n=0|this._a,o=0|this._b,i=0|this._c,s=0|this._d,u=0|this._e,f=0;f<16;++f)r[f]=e.readInt32BE(4*f);for(;f<80;++f)r[f]=r[f-3]^r[f-8]^r[f-14]^r[f-16];for(var p=0;p<80;++p){var d=~~(p/20),h=0|((t=n)<<5|t>>>27)+l(d,o,i,s)+u+r[p]+a[d];u=s,s=i,i=c(o),o=n,n=h}this._a=n+this._a|0,this._b=o+this._b|0,this._c=i+this._c|0,this._d=s+this._d|0,this._e=u+this._e|0},u.prototype._hash=function(){var e=i.allocUnsafe(20);return e.writeInt32BE(0|this._a,0),e.writeInt32BE(0|this._b,4),e.writeInt32BE(0|this._c,8),e.writeInt32BE(0|this._d,12),e.writeInt32BE(0|this._e,16),e},e.exports=u},3737:(e,t,r)=>{var n=r(6698),o=r(392),i=r(2861).Buffer,a=[1518500249,1859775393,-1894007588,-899497514],s=new Array(80);function u(){this.init(),this._w=s,o.call(this,64,56)}function c(e){return e<<5|e>>>27}function l(e){return e<<30|e>>>2}function f(e,t,r,n){return 0===e?t&r|~t&n:2===e?t&r|t&n|r&n:t^r^n}n(u,o),u.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},u.prototype._update=function(e){for(var t,r=this._w,n=0|this._a,o=0|this._b,i=0|this._c,s=0|this._d,u=0|this._e,p=0;p<16;++p)r[p]=e.readInt32BE(4*p);for(;p<80;++p)r[p]=(t=r[p-3]^r[p-8]^r[p-14]^r[p-16])<<1|t>>>31;for(var d=0;d<80;++d){var h=~~(d/20),y=c(n)+f(h,o,i,s)+u+r[d]+a[h]|0;u=s,s=i,i=l(o),o=n,n=y}this._a=n+this._a|0,this._b=o+this._b|0,this._c=i+this._c|0,this._d=s+this._d|0,this._e=u+this._e|0},u.prototype._hash=function(){var e=i.allocUnsafe(20);return e.writeInt32BE(0|this._a,0),e.writeInt32BE(0|this._b,4),e.writeInt32BE(0|this._c,8),e.writeInt32BE(0|this._d,12),e.writeInt32BE(0|this._e,16),e},e.exports=u},6710:(e,t,r)=>{var n=r(6698),o=r(4107),i=r(392),a=r(2861).Buffer,s=new Array(64);function u(){this.init(),this._w=s,i.call(this,64,56)}n(u,o),u.prototype.init=function(){return this._a=3238371032,this._b=914150663,this._c=812702999,this._d=4144912697,this._e=4290775857,this._f=1750603025,this._g=1694076839,this._h=3204075428,this},u.prototype._hash=function(){var e=a.allocUnsafe(28);return e.writeInt32BE(this._a,0),e.writeInt32BE(this._b,4),e.writeInt32BE(this._c,8),e.writeInt32BE(this._d,12),e.writeInt32BE(this._e,16),e.writeInt32BE(this._f,20),e.writeInt32BE(this._g,24),e},e.exports=u},4107:(e,t,r)=>{var n=r(6698),o=r(392),i=r(2861).Buffer,a=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],s=new Array(64);function u(){this.init(),this._w=s,o.call(this,64,56)}function c(e,t,r){return r^e&(t^r)}function l(e,t,r){return e&t|r&(e|t)}function f(e){return(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10)}function p(e){return(e>>>6|e<<26)^(e>>>11|e<<21)^(e>>>25|e<<7)}function d(e){return(e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3}n(u,o),u.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},u.prototype._update=function(e){for(var t,r=this._w,n=0|this._a,o=0|this._b,i=0|this._c,s=0|this._d,u=0|this._e,h=0|this._f,y=0|this._g,m=0|this._h,v=0;v<16;++v)r[v]=e.readInt32BE(4*v);for(;v<64;++v)r[v]=0|(((t=r[v-2])>>>17|t<<15)^(t>>>19|t<<13)^t>>>10)+r[v-7]+d(r[v-15])+r[v-16];for(var g=0;g<64;++g){var b=m+p(u)+c(u,h,y)+a[g]+r[g]|0,w=f(n)+l(n,o,i)|0;m=y,y=h,h=u,u=s+b|0,s=i,i=o,o=n,n=b+w|0}this._a=n+this._a|0,this._b=o+this._b|0,this._c=i+this._c|0,this._d=s+this._d|0,this._e=u+this._e|0,this._f=h+this._f|0,this._g=y+this._g|0,this._h=m+this._h|0},u.prototype._hash=function(){var e=i.allocUnsafe(32);return e.writeInt32BE(this._a,0),e.writeInt32BE(this._b,4),e.writeInt32BE(this._c,8),e.writeInt32BE(this._d,12),e.writeInt32BE(this._e,16),e.writeInt32BE(this._f,20),e.writeInt32BE(this._g,24),e.writeInt32BE(this._h,28),e},e.exports=u},2827:(e,t,r)=>{var n=r(6698),o=r(2890),i=r(392),a=r(2861).Buffer,s=new Array(160);function u(){this.init(),this._w=s,i.call(this,128,112)}n(u,o),u.prototype.init=function(){return this._ah=3418070365,this._bh=1654270250,this._ch=2438529370,this._dh=355462360,this._eh=1731405415,this._fh=2394180231,this._gh=3675008525,this._hh=1203062813,this._al=3238371032,this._bl=914150663,this._cl=812702999,this._dl=4144912697,this._el=4290775857,this._fl=1750603025,this._gl=1694076839,this._hl=3204075428,this},u.prototype._hash=function(){var e=a.allocUnsafe(48);function t(t,r,n){e.writeInt32BE(t,n),e.writeInt32BE(r,n+4)}return t(this._ah,this._al,0),t(this._bh,this._bl,8),t(this._ch,this._cl,16),t(this._dh,this._dl,24),t(this._eh,this._el,32),t(this._fh,this._fl,40),e},e.exports=u},2890:(e,t,r)=>{var n=r(6698),o=r(392),i=r(2861).Buffer,a=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],s=new Array(160);function u(){this.init(),this._w=s,o.call(this,128,112)}function c(e,t,r){return r^e&(t^r)}function l(e,t,r){return e&t|r&(e|t)}function f(e,t){return(e>>>28|t<<4)^(t>>>2|e<<30)^(t>>>7|e<<25)}function p(e,t){return(e>>>14|t<<18)^(e>>>18|t<<14)^(t>>>9|e<<23)}function d(e,t){return(e>>>1|t<<31)^(e>>>8|t<<24)^e>>>7}function h(e,t){return(e>>>1|t<<31)^(e>>>8|t<<24)^(e>>>7|t<<25)}function y(e,t){return(e>>>19|t<<13)^(t>>>29|e<<3)^e>>>6}function m(e,t){return(e>>>19|t<<13)^(t>>>29|e<<3)^(e>>>6|t<<26)}function v(e,t){return e>>>0<t>>>0?1:0}n(u,o),u.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this},u.prototype._update=function(e){for(var t=this._w,r=0|this._ah,n=0|this._bh,o=0|this._ch,i=0|this._dh,s=0|this._eh,u=0|this._fh,g=0|this._gh,b=0|this._hh,w=0|this._al,S=0|this._bl,E=0|this._cl,_=0|this._dl,k=0|this._el,T=0|this._fl,O=0|this._gl,x=0|this._hl,A=0;A<32;A+=2)t[A]=e.readInt32BE(4*A),t[A+1]=e.readInt32BE(4*A+4);for(;A<160;A+=2){var P=t[A-30],R=t[A-30+1],j=d(P,R),C=h(R,P),I=y(P=t[A-4],R=t[A-4+1]),L=m(R,P),B=t[A-14],N=t[A-14+1],U=t[A-32],M=t[A-32+1],D=C+N|0,F=j+B+v(D,C)|0;F=(F=F+I+v(D=D+L|0,L)|0)+U+v(D=D+M|0,M)|0,t[A]=F,t[A+1]=D}for(var V=0;V<160;V+=2){F=t[V],D=t[V+1];var q=l(r,n,o),K=l(w,S,E),H=f(r,w),z=f(w,r),X=p(s,k),G=p(k,s),W=a[V],$=a[V+1],Q=c(s,u,g),Y=c(k,T,O),J=x+G|0,Z=b+X+v(J,x)|0;Z=(Z=(Z=Z+Q+v(J=J+Y|0,Y)|0)+W+v(J=J+$|0,$)|0)+F+v(J=J+D|0,D)|0;var ee=z+K|0,te=H+q+v(ee,z)|0;b=g,x=O,g=u,O=T,u=s,T=k,s=i+Z+v(k=_+J|0,_)|0,i=o,_=E,o=n,E=S,n=r,S=w,r=Z+te+v(w=J+ee|0,J)|0}this._al=this._al+w|0,this._bl=this._bl+S|0,this._cl=this._cl+E|0,this._dl=this._dl+_|0,this._el=this._el+k|0,this._fl=this._fl+T|0,this._gl=this._gl+O|0,this._hl=this._hl+x|0,this._ah=this._ah+r+v(this._al,w)|0,this._bh=this._bh+n+v(this._bl,S)|0,this._ch=this._ch+o+v(this._cl,E)|0,this._dh=this._dh+i+v(this._dl,_)|0,this._eh=this._eh+s+v(this._el,k)|0,this._fh=this._fh+u+v(this._fl,T)|0,this._gh=this._gh+g+v(this._gl,O)|0,this._hh=this._hh+b+v(this._hl,x)|0},u.prototype._hash=function(){var e=i.allocUnsafe(64);function t(t,r,n){e.writeInt32BE(t,n),e.writeInt32BE(r,n+4)}return t(this._ah,this._al,0),t(this._bh,this._bl,8),t(this._ch,this._cl,16),t(this._dh,this._dl,24),t(this._eh,this._el,32),t(this._fh,this._fl,40),t(this._gh,this._gl,48),t(this._hh,this._hl,56),e},e.exports=u},4803:(e,t,r)=>{\"use strict\";var n=r(8859),o=r(9675),i=function(e,t,r){for(var n,o=e;null!=(n=o.next);o=n)if(n.key===t)return o.next=n.next,r||(n.next=e.next,e.next=n),n};e.exports=function(){var e,t={assert:function(e){if(!t.has(e))throw new o(\"Side channel does not contain \"+n(e))},delete:function(t){var r=e&&e.next,n=function(e,t){if(e)return i(e,t,!0)}(e,t);return n&&r&&r===n&&(e=void 0),!!n},get:function(t){return function(e,t){if(e){var r=i(e,t);return r&&r.value}}(e,t)},has:function(t){return function(e,t){return!!e&&!!i(e,t)}(e,t)},set:function(t,r){e||(e={next:void 0}),function(e,t,r){var n=i(e,t);n?n.value=r:e.next={key:t,next:e.next,value:r}}(e,t,r)}};return t}},507:(e,t,r)=>{\"use strict\";var n=r(453),o=r(6556),i=r(8859),a=r(9675),s=n(\"%Map%\",!0),u=o(\"Map.prototype.get\",!0),c=o(\"Map.prototype.set\",!0),l=o(\"Map.prototype.has\",!0),f=o(\"Map.prototype.delete\",!0),p=o(\"Map.prototype.size\",!0);e.exports=!!s&&function(){var e,t={assert:function(e){if(!t.has(e))throw new a(\"Side channel does not contain \"+i(e))},delete:function(t){if(e){var r=f(e,t);return 0===p(e)&&(e=void 0),r}return!1},get:function(t){if(e)return u(e,t)},has:function(t){return!!e&&l(e,t)},set:function(t,r){e||(e=new s),c(e,t,r)}};return t}},2271:(e,t,r)=>{\"use strict\";var n=r(453),o=r(6556),i=r(8859),a=r(507),s=r(9675),u=n(\"%WeakMap%\",!0),c=o(\"WeakMap.prototype.get\",!0),l=o(\"WeakMap.prototype.set\",!0),f=o(\"WeakMap.prototype.has\",!0),p=o(\"WeakMap.prototype.delete\",!0);e.exports=u?function(){var e,t,r={assert:function(e){if(!r.has(e))throw new s(\"Side channel does not contain \"+i(e))},delete:function(r){if(u&&r&&(\"object\"==typeof r||\"function\"==typeof r)){if(e)return p(e,r)}else if(a&&t)return t.delete(r);return!1},get:function(r){return u&&r&&(\"object\"==typeof r||\"function\"==typeof r)&&e?c(e,r):t&&t.get(r)},has:function(r){return u&&r&&(\"object\"==typeof r||\"function\"==typeof r)&&e?f(e,r):!!t&&t.has(r)},set:function(r,n){u&&r&&(\"object\"==typeof r||\"function\"==typeof r)?(e||(e=new u),l(e,r,n)):a&&(t||(t=a()),t.set(r,n))}};return r}:a},920:(e,t,r)=>{\"use strict\";var n=r(9675),o=r(8859),i=r(4803),a=r(507),s=r(2271)||a||i;e.exports=function(){var e,t={assert:function(e){if(!t.has(e))throw new n(\"Side channel does not contain \"+o(e))},delete:function(t){return!!e&&e.delete(t)},get:function(t){return e&&e.get(t)},has:function(t){return!!e&&e.has(t)},set:function(t,r){e||(e=s()),e.set(t,r)}};return t}},1568:(e,t,r)=>{var n=r(5537),o=r(6917),i=r(7510),a=r(6866),s=r(8835),u=t;u.request=function(e,t){e=\"string\"==typeof e?s.parse(e):i(e);var o=-1===r.g.location.protocol.search(/^https?:$/)?\"http:\":\"\",a=e.protocol||o,u=e.hostname||e.host,c=e.port,l=e.path||\"/\";u&&-1!==u.indexOf(\":\")&&(u=\"[\"+u+\"]\"),e.url=(u?a+\"//\"+u:\"\")+(c?\":\"+c:\"\")+l,e.method=(e.method||\"GET\").toUpperCase(),e.headers=e.headers||{};var f=new n(e);return t&&f.on(\"response\",t),f},u.get=function(e,t){var r=u.request(e,t);return r.end(),r},u.ClientRequest=n,u.IncomingMessage=o.IncomingMessage,u.Agent=function(){},u.Agent.defaultMaxSockets=4,u.globalAgent=new u.Agent,u.STATUS_CODES=a,u.METHODS=[\"CHECKOUT\",\"CONNECT\",\"COPY\",\"DELETE\",\"GET\",\"HEAD\",\"LOCK\",\"M-SEARCH\",\"MERGE\",\"MKACTIVITY\",\"MKCOL\",\"MOVE\",\"NOTIFY\",\"OPTIONS\",\"PATCH\",\"POST\",\"PROPFIND\",\"PROPPATCH\",\"PURGE\",\"PUT\",\"REPORT\",\"SEARCH\",\"SUBSCRIBE\",\"TRACE\",\"UNLOCK\",\"UNSUBSCRIBE\"]},6688:(e,t,r)=>{var n;function o(){if(void 0!==n)return n;if(r.g.XMLHttpRequest){n=new r.g.XMLHttpRequest;try{n.open(\"GET\",r.g.XDomainRequest?\"/\":\"https://example.com\")}catch(e){n=null}}else n=null;return n}function i(e){var t=o();if(!t)return!1;try{return t.responseType=e,t.responseType===e}catch(e){}return!1}function a(e){return\"function\"==typeof e}t.fetch=a(r.g.fetch)&&a(r.g.ReadableStream),t.writableStream=a(r.g.WritableStream),t.abortController=a(r.g.AbortController),t.arraybuffer=t.fetch||i(\"arraybuffer\"),t.msstream=!t.fetch&&i(\"ms-stream\"),t.mozchunkedarraybuffer=!t.fetch&&i(\"moz-chunked-arraybuffer\"),t.overrideMimeType=t.fetch||!!o()&&a(o().overrideMimeType),n=null},5537:(e,t,r)=>{var n=r(8287).Buffer,o=r(6688),i=r(6698),a=r(6917),s=r(8399),u=a.IncomingMessage,c=a.readyStates;var l=e.exports=function(e){var t,r=this;s.Writable.call(r),r._opts=e,r._body=[],r._headers={},e.auth&&r.setHeader(\"Authorization\",\"Basic \"+n.from(e.auth).toString(\"base64\")),Object.keys(e.headers).forEach((function(t){r.setHeader(t,e.headers[t])}));var i=!0;if(\"disable-fetch\"===e.mode||\"requestTimeout\"in e&&!o.abortController)i=!1,t=!0;else if(\"prefer-streaming\"===e.mode)t=!1;else if(\"allow-wrong-content-type\"===e.mode)t=!o.overrideMimeType;else{if(e.mode&&\"default\"!==e.mode&&\"prefer-fast\"!==e.mode)throw new Error(\"Invalid value for opts.mode\");t=!0}r._mode=function(e,t){return o.fetch&&t?\"fetch\":o.mozchunkedarraybuffer?\"moz-chunked-arraybuffer\":o.msstream?\"ms-stream\":o.arraybuffer&&e?\"arraybuffer\":\"text\"}(t,i),r._fetchTimer=null,r._socketTimeout=null,r._socketTimer=null,r.on(\"finish\",(function(){r._onFinish()}))};i(l,s.Writable),l.prototype.setHeader=function(e,t){var r=e.toLowerCase();-1===f.indexOf(r)&&(this._headers[r]={name:e,value:t})},l.prototype.getHeader=function(e){var t=this._headers[e.toLowerCase()];return t?t.value:null},l.prototype.removeHeader=function(e){delete this._headers[e.toLowerCase()]},l.prototype._onFinish=function(){var e=this;if(!e._destroyed){var t=e._opts;\"timeout\"in t&&0!==t.timeout&&e.setTimeout(t.timeout);var n=e._headers,i=null;\"GET\"!==t.method&&\"HEAD\"!==t.method&&(i=new Blob(e._body,{type:(n[\"content-type\"]||{}).value||\"\"}));var a=[];if(Object.keys(n).forEach((function(e){var t=n[e].name,r=n[e].value;Array.isArray(r)?r.forEach((function(e){a.push([t,e])})):a.push([t,r])})),\"fetch\"===e._mode){var s=null;if(o.abortController){var u=new AbortController;s=u.signal,e._fetchAbortController=u,\"requestTimeout\"in t&&0!==t.requestTimeout&&(e._fetchTimer=r.g.setTimeout((function(){e.emit(\"requestTimeout\"),e._fetchAbortController&&e._fetchAbortController.abort()}),t.requestTimeout))}r.g.fetch(e._opts.url,{method:e._opts.method,headers:a,body:i||void 0,mode:\"cors\",credentials:t.withCredentials?\"include\":\"same-origin\",signal:s}).then((function(t){e._fetchResponse=t,e._resetTimers(!1),e._connect()}),(function(t){e._resetTimers(!0),e._destroyed||e.emit(\"error\",t)}))}else{var l=e._xhr=new r.g.XMLHttpRequest;try{l.open(e._opts.method,e._opts.url,!0)}catch(t){return void process.nextTick((function(){e.emit(\"error\",t)}))}\"responseType\"in l&&(l.responseType=e._mode),\"withCredentials\"in l&&(l.withCredentials=!!t.withCredentials),\"text\"===e._mode&&\"overrideMimeType\"in l&&l.overrideMimeType(\"text/plain; charset=x-user-defined\"),\"requestTimeout\"in t&&(l.timeout=t.requestTimeout,l.ontimeout=function(){e.emit(\"requestTimeout\")}),a.forEach((function(e){l.setRequestHeader(e[0],e[1])})),e._response=null,l.onreadystatechange=function(){switch(l.readyState){case c.LOADING:case c.DONE:e._onXHRProgress()}},\"moz-chunked-arraybuffer\"===e._mode&&(l.onprogress=function(){e._onXHRProgress()}),l.onerror=function(){e._destroyed||(e._resetTimers(!0),e.emit(\"error\",new Error(\"XHR error\")))};try{l.send(i)}catch(t){return void process.nextTick((function(){e.emit(\"error\",t)}))}}}},l.prototype._onXHRProgress=function(){var e=this;e._resetTimers(!1),function(e){try{var t=e.status;return null!==t&&0!==t}catch(e){return!1}}(e._xhr)&&!e._destroyed&&(e._response||e._connect(),e._response._onXHRProgress(e._resetTimers.bind(e)))},l.prototype._connect=function(){var e=this;e._destroyed||(e._response=new u(e._xhr,e._fetchResponse,e._mode,e._resetTimers.bind(e)),e._response.on(\"error\",(function(t){e.emit(\"error\",t)})),e.emit(\"response\",e._response))},l.prototype._write=function(e,t,r){this._body.push(e),r()},l.prototype._resetTimers=function(e){var t=this;r.g.clearTimeout(t._socketTimer),t._socketTimer=null,e?(r.g.clearTimeout(t._fetchTimer),t._fetchTimer=null):t._socketTimeout&&(t._socketTimer=r.g.setTimeout((function(){t.emit(\"timeout\")}),t._socketTimeout))},l.prototype.abort=l.prototype.destroy=function(e){var t=this;t._destroyed=!0,t._resetTimers(!0),t._response&&(t._response._destroyed=!0),t._xhr?t._xhr.abort():t._fetchAbortController&&t._fetchAbortController.abort(),e&&t.emit(\"error\",e)},l.prototype.end=function(e,t,r){\"function\"==typeof e&&(r=e,e=void 0),s.Writable.prototype.end.call(this,e,t,r)},l.prototype.setTimeout=function(e,t){var r=this;t&&r.once(\"timeout\",t),r._socketTimeout=e,r._resetTimers(!1)},l.prototype.flushHeaders=function(){},l.prototype.setNoDelay=function(){},l.prototype.setSocketKeepAlive=function(){};var f=[\"accept-charset\",\"accept-encoding\",\"access-control-request-headers\",\"access-control-request-method\",\"connection\",\"content-length\",\"cookie\",\"cookie2\",\"date\",\"dnt\",\"expect\",\"host\",\"keep-alive\",\"origin\",\"referer\",\"te\",\"trailer\",\"transfer-encoding\",\"upgrade\",\"via\"]},6917:(e,t,r)=>{var n=r(8287).Buffer,o=r(6688),i=r(6698),a=r(8399),s=t.readyStates={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4},u=t.IncomingMessage=function(e,t,r,i){var s=this;if(a.Readable.call(s),s._mode=r,s.headers={},s.rawHeaders=[],s.trailers={},s.rawTrailers=[],s.on(\"end\",(function(){process.nextTick((function(){s.emit(\"close\")}))})),\"fetch\"===r){if(s._fetchResponse=t,s.url=t.url,s.statusCode=t.status,s.statusMessage=t.statusText,t.headers.forEach((function(e,t){s.headers[t.toLowerCase()]=e,s.rawHeaders.push(t,e)})),o.writableStream){var u=new WritableStream({write:function(e){return i(!1),new Promise((function(t,r){s._destroyed?r():s.push(n.from(e))?t():s._resumeFetch=t}))},close:function(){i(!0),s._destroyed||s.push(null)},abort:function(e){i(!0),s._destroyed||s.emit(\"error\",e)}});try{return void t.body.pipeTo(u).catch((function(e){i(!0),s._destroyed||s.emit(\"error\",e)}))}catch(e){}}var c=t.body.getReader();!function e(){c.read().then((function(t){s._destroyed||(i(t.done),t.done?s.push(null):(s.push(n.from(t.value)),e()))})).catch((function(e){i(!0),s._destroyed||s.emit(\"error\",e)}))}()}else{if(s._xhr=e,s._pos=0,s.url=e.responseURL,s.statusCode=e.status,s.statusMessage=e.statusText,e.getAllResponseHeaders().split(/\\r?\\n/).forEach((function(e){var t=e.match(/^([^:]+):\\s*(.*)/);if(t){var r=t[1].toLowerCase();\"set-cookie\"===r?(void 0===s.headers[r]&&(s.headers[r]=[]),s.headers[r].push(t[2])):void 0!==s.headers[r]?s.headers[r]+=\", \"+t[2]:s.headers[r]=t[2],s.rawHeaders.push(t[1],t[2])}})),s._charset=\"x-user-defined\",!o.overrideMimeType){var l=s.rawHeaders[\"mime-type\"];if(l){var f=l.match(/;\\s*charset=([^;])(;|$)/);f&&(s._charset=f[1].toLowerCase())}s._charset||(s._charset=\"utf-8\")}}};i(u,a.Readable),u.prototype._read=function(){var e=this._resumeFetch;e&&(this._resumeFetch=null,e())},u.prototype._onXHRProgress=function(e){var t=this,o=t._xhr,i=null;switch(t._mode){case\"text\":if((i=o.responseText).length>t._pos){var a=i.substr(t._pos);if(\"x-user-defined\"===t._charset){for(var u=n.alloc(a.length),c=0;c<a.length;c++)u[c]=255&a.charCodeAt(c);t.push(u)}else t.push(a,t._charset);t._pos=i.length}break;case\"arraybuffer\":if(o.readyState!==s.DONE||!o.response)break;i=o.response,t.push(n.from(new Uint8Array(i)));break;case\"moz-chunked-arraybuffer\":if(i=o.response,o.readyState!==s.LOADING||!i)break;t.push(n.from(new Uint8Array(i)));break;case\"ms-stream\":if(i=o.response,o.readyState!==s.LOADING)break;var l=new r.g.MSStreamReader;l.onprogress=function(){l.result.byteLength>t._pos&&(t.push(n.from(new Uint8Array(l.result.slice(t._pos)))),t._pos=l.result.byteLength)},l.onload=function(){e(!0),t.push(null)},l.readAsArrayBuffer(i)}t._xhr.readyState===s.DONE&&\"ms-stream\"!==t._mode&&(e(!0),t.push(null))}},3141:(e,t,r)=>{\"use strict\";var n=r(2861).Buffer,o=n.isEncoding||function(e){switch((e=\"\"+e)&&e.toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":case\"raw\":return!0;default:return!1}};function i(e){var t;switch(this.encoding=function(e){var t=function(e){if(!e)return\"utf8\";for(var t;;)switch(e){case\"utf8\":case\"utf-8\":return\"utf8\";case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return\"utf16le\";case\"latin1\":case\"binary\":return\"latin1\";case\"base64\":case\"ascii\":case\"hex\":return e;default:if(t)return;e=(\"\"+e).toLowerCase(),t=!0}}(e);if(\"string\"!=typeof t&&(n.isEncoding===o||!o(e)))throw new Error(\"Unknown encoding: \"+e);return t||e}(e),this.encoding){case\"utf16le\":this.text=u,this.end=c,t=4;break;case\"utf8\":this.fillLast=s,t=4;break;case\"base64\":this.text=l,this.end=f,t=3;break;default:return this.write=p,void(this.end=d)}this.lastNeed=0,this.lastTotal=0,this.lastChar=n.allocUnsafe(t)}function a(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:e>>6==2?-1:-2}function s(e){var t=this.lastTotal-this.lastNeed,r=function(e,t){if(128!=(192&t[0]))return e.lastNeed=0,\"\\ufffd\";if(e.lastNeed>1&&t.length>1){if(128!=(192&t[1]))return e.lastNeed=1,\"\\ufffd\";if(e.lastNeed>2&&t.length>2&&128!=(192&t[2]))return e.lastNeed=2,\"\\ufffd\"}}(this,e);return void 0!==r?r:this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,t,0,e.length),void(this.lastNeed-=e.length))}function u(e,t){if((e.length-t)%2==0){var r=e.toString(\"utf16le\",t);if(r){var n=r.charCodeAt(r.length-1);if(n>=55296&&n<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],r.slice(0,-1)}return r}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString(\"utf16le\",t,e.length-1)}function c(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed){var r=this.lastTotal-this.lastNeed;return t+this.lastChar.toString(\"utf16le\",0,r)}return t}function l(e,t){var r=(e.length-t)%3;return 0===r?e.toString(\"base64\",t):(this.lastNeed=3-r,this.lastTotal=3,1===r?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString(\"base64\",t,e.length-r))}function f(e){var t=e&&e.length?this.write(e):\"\";return this.lastNeed?t+this.lastChar.toString(\"base64\",0,3-this.lastNeed):t}function p(e){return e.toString(this.encoding)}function d(e){return e&&e.length?this.write(e):\"\"}t.I=i,i.prototype.write=function(e){if(0===e.length)return\"\";var t,r;if(this.lastNeed){if(void 0===(t=this.fillLast(e)))return\"\";r=this.lastNeed,this.lastNeed=0}else r=0;return r<e.length?t?t+this.text(e,r):this.text(e,r):t||\"\"},i.prototype.end=function(e){var t=e&&e.length?this.write(e):\"\";return this.lastNeed?t+\"\\ufffd\":t},i.prototype.text=function(e,t){var r=function(e,t,r){var n=t.length-1;if(n<r)return 0;var o=a(t[n]);if(o>=0)return o>0&&(e.lastNeed=o-1),o;if(--n<r||-2===o)return 0;if(o=a(t[n]),o>=0)return o>0&&(e.lastNeed=o-2),o;if(--n<r||-2===o)return 0;if(o=a(t[n]),o>=0)return o>0&&(2===o?o=0:e.lastNeed=o-3),o;return 0}(this,e,t);if(!this.lastNeed)return e.toString(\"utf8\",t);this.lastTotal=r;var n=e.length-(r-this.lastNeed);return e.copy(this.lastChar,0,n),e.toString(\"utf8\",t,n)},i.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length}},1293:(e,t,r)=>{var n=r(5546),o=r(2708);e.exports={parse:function(e){var t=n.parse(e.toString());return o.compile(t)}}},2708:e=>{\"use strict\";e.exports={compile:function(e){var t=[],r=[],n=\"\",o=Object.create(null),i=o;return function(e){for(var t,r=0;r<e.length;r++)switch((t=e[r]).type){case\"Assign\":s(t);break;case\"ObjectPath\":f(t);break;case\"ArrayPath\":p(t)}return o}(e);function a(e,t,r){var n=new Error(e);throw n.line=t,n.column=r,n}function s(e){var o,s=e.key,l=e.value,f=e.line,p=e.column;o=n?n+\".\"+s:s,void 0!==i[s]&&a(\"Cannot redefine existing key '\"+o+\"'.\",f,p),i[s]=c(l),u(o)||(t.push(o),r.push(o))}function u(e){return-1!==t.indexOf(e)}function c(e){return\"Array\"===e.type?function(e){for(var t=null,r=0;r<e.length;r++){var n=e[r];null===t?t=n.type:n.type!==t&&a(\"Cannot add value of type \"+n.type+\" to array of type \"+t+\".\",n.line,n.column)}return e.map(c)}(e.value):\"InlineTable\"===e.type?l(e.value):e.value}function l(e){for(var t=Object.create(null),r=0;r<e.length;r++){var n=e[r];\"InlineTable\"===n.value.type?t[n.key]=l(n.value.value):\"InlineTableValue\"===n.type&&(t[n.key]=c(n.value))}return t}function f(e){var r=e.value,s=r.map(h).join(\".\"),c=e.line,l=e.column;u(s)&&a(\"Cannot redefine existing key '\"+r+\"'.\",c,l),t.push(s),i=d(o,r,Object.create(null),c,l),n=r}function p(e){var r=e.value,s=r.map(h).join(\".\"),c=e.line,l=e.column;if(u(s)||t.push(s),(t=t.filter((function(e){return 0!==e.indexOf(s)}))).push(s),i=d(o,r,[],c,l),n=s,i instanceof Array){var f=Object.create(null);i.push(f),i=f}else a(\"Cannot redefine existing key '\"+r+\"'.\",c,l)}function d(e,t,n,o,i){for(var s=[],u=\"\",c=(t.join(\".\"),e),l=0;l<t.length;l++){var f=t[l];s.push(f),u=s.join(\".\"),void 0===c[f]?l===t.length-1?c[f]=n:c[f]=Object.create(null):l!==t.length-1&&r.indexOf(u)>-1&&a(\"Cannot redefine existing key '\"+u+\"'.\",o,i),(c=c[f])instanceof Array&&c.length&&l<t.length-1&&(c=c[c.length-1])}return c}function h(e){return e.indexOf(\".\")>-1?'\"'+e+'\"':e}}}},5546:e=>{e.exports=function(){function e(e,t,r,n,o,i){this.message=e,this.expected=t,this.found=r,this.offset=n,this.line=o,this.column=i,this.name=\"SyntaxError\"}return function(e,t){function r(){this.constructor=e}r.prototype=t.prototype,e.prototype=new r}(e,Error),{SyntaxError:e,parse:function(t){var r,n=arguments.length>1?arguments[1]:{},o={},i={start:Lt},a=Lt,s=function(){return pr},u=o,c=\"#\",l={type:\"literal\",value:\"#\",description:'\"#\"'},f=void 0,p={type:\"any\",description:\"any character\"},d=\"[\",h={type:\"literal\",value:\"[\",description:'\"[\"'},y=\"]\",m={type:\"literal\",value:\"]\",description:'\"]\"'},v=function(e){dr(hr(\"ObjectPath\",e,Pt,Rt))},g=function(e){dr(hr(\"ArrayPath\",e,Pt,Rt))},b=function(e,t){return e.concat(t)},w=function(e){return[e]},S=function(e){return e},E=\".\",_={type:\"literal\",value:\".\",description:'\".\"'},k=\"=\",T={type:\"literal\",value:\"=\",description:'\"=\"'},O=function(e,t){dr(hr(\"Assign\",t,Pt,Rt,e))},x=function(e){return e.join(\"\")},A=function(e){return e.value},P='\"\"\"',R={type:\"literal\",value:'\"\"\"',description:'\"\\\\\"\\\\\"\\\\\"\"'},j=null,C=function(e){return hr(\"String\",e.join(\"\"),Pt,Rt)},I='\"',L={type:\"literal\",value:'\"',description:'\"\\\\\"\"'},B=\"'''\",N={type:\"literal\",value:\"'''\",description:\"\\\"'''\\\"\"},U=\"'\",M={type:\"literal\",value:\"'\",description:'\"\\'\"'},D=function(e){return e},F=function(e){return e},V=\"\\\\\",q={type:\"literal\",value:\"\\\\\",description:'\"\\\\\\\\\"'},K=function(){return\"\"},H=\"e\",z={type:\"literal\",value:\"e\",description:'\"e\"'},X=\"E\",G={type:\"literal\",value:\"E\",description:'\"E\"'},W=function(e,t){return hr(\"Float\",parseFloat(e+\"e\"+t),Pt,Rt)},$=function(e){return hr(\"Float\",parseFloat(e),Pt,Rt)},Q=\"+\",Y={type:\"literal\",value:\"+\",description:'\"+\"'},J=function(e){return e.join(\"\")},Z=\"-\",ee={type:\"literal\",value:\"-\",description:'\"-\"'},te=function(e){return\"-\"+e.join(\"\")},re=function(e){return hr(\"Integer\",parseInt(e,10),Pt,Rt)},ne=\"true\",oe={type:\"literal\",value:\"true\",description:'\"true\"'},ie=function(){return hr(\"Boolean\",!0,Pt,Rt)},ae=\"false\",se={type:\"literal\",value:\"false\",description:'\"false\"'},ue=function(){return hr(\"Boolean\",!1,Pt,Rt)},ce=function(){return hr(\"Array\",[],Pt,Rt)},le=function(e){return hr(\"Array\",e?[e]:[],Pt,Rt)},fe=function(e){return hr(\"Array\",e,Pt,Rt)},pe=function(e,t){return hr(\"Array\",e.concat(t),Pt,Rt)},de=function(e){return e},he=\",\",ye={type:\"literal\",value:\",\",description:'\",\"'},me=\"{\",ve={type:\"literal\",value:\"{\",description:'\"{\"'},ge=\"}\",be={type:\"literal\",value:\"}\",description:'\"}\"'},we=function(e){return hr(\"InlineTable\",e,Pt,Rt)},Se=function(e,t){return hr(\"InlineTableValue\",t,Pt,Rt,e)},Ee=function(e){return\".\"+e},_e=function(e){return e.join(\"\")},ke=\":\",Te={type:\"literal\",value:\":\",description:'\":\"'},Oe=function(e){return e.join(\"\")},xe=\"T\",Ae={type:\"literal\",value:\"T\",description:'\"T\"'},Pe=\"Z\",Re={type:\"literal\",value:\"Z\",description:'\"Z\"'},je=function(e,t){return hr(\"Date\",new Date(e+\"T\"+t+\"Z\"),Pt,Rt)},Ce=function(e,t){return hr(\"Date\",new Date(e+\"T\"+t),Pt,Rt)},Ie=/^[ \\t]/,Le={type:\"class\",value:\"[ \\\\t]\",description:\"[ \\\\t]\"},Be=\"\\n\",Ne={type:\"literal\",value:\"\\n\",description:'\"\\\\n\"'},Ue=\"\\r\",Me={type:\"literal\",value:\"\\r\",description:'\"\\\\r\"'},De=/^[0-9a-f]/i,Fe={type:\"class\",value:\"[0-9a-f]i\",description:\"[0-9a-f]i\"},Ve=/^[0-9]/,qe={type:\"class\",value:\"[0-9]\",description:\"[0-9]\"},Ke=\"_\",He={type:\"literal\",value:\"_\",description:'\"_\"'},ze=function(){return\"\"},Xe=/^[A-Za-z0-9_\\-]/,Ge={type:\"class\",value:\"[A-Za-z0-9_\\\\-]\",description:\"[A-Za-z0-9_\\\\-]\"},We=function(e){return e.join(\"\")},$e='\\\\\"',Qe={type:\"literal\",value:'\\\\\"',description:'\"\\\\\\\\\\\\\"\"'},Ye=function(){return'\"'},Je=\"\\\\\\\\\",Ze={type:\"literal\",value:\"\\\\\\\\\",description:'\"\\\\\\\\\\\\\\\\\"'},et=function(){return\"\\\\\"},tt=\"\\\\b\",rt={type:\"literal\",value:\"\\\\b\",description:'\"\\\\\\\\b\"'},nt=function(){return\"\\b\"},ot=\"\\\\t\",it={type:\"literal\",value:\"\\\\t\",description:'\"\\\\\\\\t\"'},at=function(){return\"\\t\"},st=\"\\\\n\",ut={type:\"literal\",value:\"\\\\n\",description:'\"\\\\\\\\n\"'},ct=function(){return\"\\n\"},lt=\"\\\\f\",ft={type:\"literal\",value:\"\\\\f\",description:'\"\\\\\\\\f\"'},pt=function(){return\"\\f\"},dt=\"\\\\r\",ht={type:\"literal\",value:\"\\\\r\",description:'\"\\\\\\\\r\"'},yt=function(){return\"\\r\"},mt=\"\\\\U\",vt={type:\"literal\",value:\"\\\\U\",description:'\"\\\\\\\\U\"'},gt=function(e){return function(e,t,r){var n=parseInt(\"0x\"+e);if(!(!isFinite(n)||Math.floor(n)!=n||n<0||n>1114111||n>55295&&n<57344))return function(){var e,t,r=16384,n=[],o=-1,i=arguments.length;if(!i)return\"\";var a=\"\";for(;++o<i;){var s=Number(arguments[o]);s<=65535?n.push(s):(e=55296+((s-=65536)>>10),t=s%1024+56320,n.push(e,t)),(o+1==i||n.length>r)&&(a+=String.fromCharCode.apply(null,n),n.length=0)}return a}(n);!function(e,t,r){var n=new Error(e);throw n.line=t,n.column=r,n}(\"Invalid Unicode escape code: \"+e,t,r)}(e.join(\"\"))},bt=\"\\\\u\",wt={type:\"literal\",value:\"\\\\u\",description:'\"\\\\\\\\u\"'},St=0,Et=0,_t=0,kt={line:1,column:1,seenCR:!1},Tt=0,Ot=[],xt=0,At={};if(\"startRule\"in n){if(!(n.startRule in i))throw new Error(\"Can't start parsing from rule \\\"\"+n.startRule+'\".');a=i[n.startRule]}function Pt(){return jt(Et).line}function Rt(){return jt(Et).column}function jt(e){return _t!==e&&(_t>e&&(_t=0,kt={line:1,column:1,seenCR:!1}),function(e,r,n){var o,i;for(o=r;o<n;o++)\"\\n\"===(i=t.charAt(o))?(e.seenCR||e.line++,e.column=1,e.seenCR=!1):\"\\r\"===i||\"\\u2028\"===i||\"\\u2029\"===i?(e.line++,e.column=1,e.seenCR=!0):(e.column++,e.seenCR=!1)}(kt,_t,e),_t=e),kt}function Ct(e){St<Tt||(St>Tt&&(Tt=St,Ot=[]),Ot.push(e))}function It(r,n,o){var i=jt(o),a=o<t.length?t.charAt(o):null;return null!==n&&function(e){var t=1;for(e.sort((function(e,t){return e.description<t.description?-1:e.description>t.description?1:0}));t<e.length;)e[t-1]===e[t]?e.splice(t,1):t++}(n),new e(null!==r?r:function(e,t){var r,n=new Array(e.length);for(r=0;r<e.length;r++)n[r]=e[r].description;return\"Expected \"+(e.length>1?n.slice(0,-1).join(\", \")+\" or \"+n[e.length-1]:n[0])+\" but \"+(t?'\"'+function(e){function t(e){return e.charCodeAt(0).toString(16).toUpperCase()}return e.replace(/\\\\/g,\"\\\\\\\\\").replace(/\"/g,'\\\\\"').replace(/\\x08/g,\"\\\\b\").replace(/\\t/g,\"\\\\t\").replace(/\\n/g,\"\\\\n\").replace(/\\f/g,\"\\\\f\").replace(/\\r/g,\"\\\\r\").replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g,(function(e){return\"\\\\x0\"+t(e)})).replace(/[\\x10-\\x1F\\x80-\\xFF]/g,(function(e){return\"\\\\x\"+t(e)})).replace(/[\\u0180-\\u0FFF]/g,(function(e){return\"\\\\u0\"+t(e)})).replace(/[\\u1080-\\uFFFF]/g,(function(e){return\"\\\\u\"+t(e)}))}(t)+'\"':\"end of input\")+\" found.\"}(n,a),n,a,o,i.line,i.column)}function Lt(){var e,t,r,n=49*St+0,i=At[n];if(i)return St=i.nextPos,i.result;for(e=St,t=[],r=Bt();r!==o;)t.push(r),r=Bt();return t!==o&&(Et=e,t=s()),e=t,At[n]={nextPos:St,result:e},e}function Bt(){var e,r,n,i,a,s,c,l=49*St+1,f=At[l];if(f)return St=f.nextPos,f.result;for(e=St,r=[],n=nr();n!==o;)r.push(n),n=nr();if(r!==o)if(n=function(){var e,r=49*St+2,n=At[r];if(n)return St=n.nextPos,n.result;e=Nt(),e===o&&(e=function(){var e,r,n,i,a,s,c=49*St+4,l=At[c];if(l)return St=l.nextPos,l.result;e=St,91===t.charCodeAt(St)?(r=d,St++):(r=o,0===xt&&Ct(h));if(r!==o){for(n=[],i=nr();i!==o;)n.push(i),i=nr();if(n!==o)if((i=Ut())!==o){for(a=[],s=nr();s!==o;)a.push(s),s=nr();a!==o?(93===t.charCodeAt(St)?(s=y,St++):(s=o,0===xt&&Ct(m)),s!==o?(Et=e,e=r=v(i)):(St=e,e=u)):(St=e,e=u)}else St=e,e=u;else St=e,e=u}else St=e,e=u;return At[c]={nextPos:St,result:e},e}(),e===o&&(e=function(){var e,r,n,i,a,s,c,l,f=49*St+5,p=At[f];if(p)return St=p.nextPos,p.result;e=St,91===t.charCodeAt(St)?(r=d,St++):(r=o,0===xt&&Ct(h));if(r!==o)if(91===t.charCodeAt(St)?(n=d,St++):(n=o,0===xt&&Ct(h)),n!==o){for(i=[],a=nr();a!==o;)i.push(a),a=nr();if(i!==o)if((a=Ut())!==o){for(s=[],c=nr();c!==o;)s.push(c),c=nr();s!==o?(93===t.charCodeAt(St)?(c=y,St++):(c=o,0===xt&&Ct(m)),c!==o?(93===t.charCodeAt(St)?(l=y,St++):(l=o,0===xt&&Ct(m)),l!==o?(Et=e,e=r=g(a)):(St=e,e=u)):(St=e,e=u)):(St=e,e=u)}else St=e,e=u;else St=e,e=u}else St=e,e=u;else St=e,e=u;return At[f]={nextPos:St,result:e},e}(),e===o&&(e=function(){var e,r,n,i,a,s,c=49*St+9,l=At[c];if(l)return St=l.nextPos,l.result;if(e=St,r=Ft(),r!==o){for(n=[],i=nr();i!==o;)n.push(i),i=nr();if(n!==o)if(61===t.charCodeAt(St)?(i=k,St++):(i=o,0===xt&&Ct(T)),i!==o){for(a=[],s=nr();s!==o;)a.push(s),s=nr();a!==o&&(s=qt())!==o?(Et=e,e=r=O(r,s)):(St=e,e=u)}else St=e,e=u;else St=e,e=u}else St=e,e=u;if(e===o)if(e=St,(r=Vt())!==o){for(n=[],i=nr();i!==o;)n.push(i),i=nr();if(n!==o)if(61===t.charCodeAt(St)?(i=k,St++):(i=o,0===xt&&Ct(T)),i!==o){for(a=[],s=nr();s!==o;)a.push(s),s=nr();a!==o&&(s=qt())!==o?(Et=e,e=r=O(r,s)):(St=e,e=u)}else St=e,e=u;else St=e,e=u}else St=e,e=u;return At[c]={nextPos:St,result:e},e}())));return At[r]={nextPos:St,result:e},e}(),n!==o){for(i=[],a=nr();a!==o;)i.push(a),a=nr();if(i!==o){for(a=[],s=Nt();s!==o;)a.push(s),s=Nt();if(a!==o){if(s=[],(c=or())!==o)for(;c!==o;)s.push(c),c=or();else s=u;s===o&&(s=ar()),s!==o?e=r=[r,n,i,a,s]:(St=e,e=u)}else St=e,e=u}else St=e,e=u}else St=e,e=u;else St=e,e=u;if(e===o){if(e=St,r=[],(n=nr())!==o)for(;n!==o;)r.push(n),n=nr();else r=u;if(r!==o){if(n=[],(i=or())!==o)for(;i!==o;)n.push(i),i=or();else n=u;n===o&&(n=ar()),n!==o?e=r=[r,n]:(St=e,e=u)}else St=e,e=u;e===o&&(e=or())}return At[l]={nextPos:St,result:e},e}function Nt(){var e,r,n,i,a,s,d=49*St+3,h=At[d];if(h)return St=h.nextPos,h.result;if(e=St,35===t.charCodeAt(St)?(r=c,St++):(r=o,0===xt&&Ct(l)),r!==o){for(n=[],i=St,a=St,xt++,(s=or())===o&&(s=ar()),xt--,s===o?a=f:(St=a,a=u),a!==o?(t.length>St?(s=t.charAt(St),St++):(s=o,0===xt&&Ct(p)),s!==o?i=a=[a,s]:(St=i,i=u)):(St=i,i=u);i!==o;)n.push(i),i=St,a=St,xt++,(s=or())===o&&(s=ar()),xt--,s===o?a=f:(St=a,a=u),a!==o?(t.length>St?(s=t.charAt(St),St++):(s=o,0===xt&&Ct(p)),s!==o?i=a=[a,s]:(St=i,i=u)):(St=i,i=u);n!==o?e=r=[r,n]:(St=e,e=u)}else St=e,e=u;return At[d]={nextPos:St,result:e},e}function Ut(){var e,t,r,n=49*St+6,i=At[n];if(i)return St=i.nextPos,i.result;if(e=St,t=[],(r=Dt())!==o)for(;r!==o;)t.push(r),r=Dt();else t=u;return t!==o&&(r=Mt())!==o?(Et=e,e=t=b(t,r)):(St=e,e=u),e===o&&(e=St,(t=Mt())!==o&&(Et=e,t=w(t)),e=t),At[n]={nextPos:St,result:e},e}function Mt(){var e,t,r,n,i,a=49*St+7,s=At[a];if(s)return St=s.nextPos,s.result;for(e=St,t=[],r=nr();r!==o;)t.push(r),r=nr();if(t!==o)if((r=Ft())!==o){for(n=[],i=nr();i!==o;)n.push(i),i=nr();n!==o?(Et=e,e=t=S(r)):(St=e,e=u)}else St=e,e=u;else St=e,e=u;if(e===o){for(e=St,t=[],r=nr();r!==o;)t.push(r),r=nr();if(t!==o)if((r=Vt())!==o){for(n=[],i=nr();i!==o;)n.push(i),i=nr();n!==o?(Et=e,e=t=S(r)):(St=e,e=u)}else St=e,e=u;else St=e,e=u}return At[a]={nextPos:St,result:e},e}function Dt(){var e,r,n,i,a,s,c,l=49*St+8,f=At[l];if(f)return St=f.nextPos,f.result;for(e=St,r=[],n=nr();n!==o;)r.push(n),n=nr();if(r!==o)if((n=Ft())!==o){for(i=[],a=nr();a!==o;)i.push(a),a=nr();if(i!==o)if(46===t.charCodeAt(St)?(a=E,St++):(a=o,0===xt&&Ct(_)),a!==o){for(s=[],c=nr();c!==o;)s.push(c),c=nr();s!==o?(Et=e,e=r=S(n)):(St=e,e=u)}else St=e,e=u;else St=e,e=u}else St=e,e=u;else St=e,e=u;if(e===o){for(e=St,r=[],n=nr();n!==o;)r.push(n),n=nr();if(r!==o)if((n=Vt())!==o){for(i=[],a=nr();a!==o;)i.push(a),a=nr();if(i!==o)if(46===t.charCodeAt(St)?(a=E,St++):(a=o,0===xt&&Ct(_)),a!==o){for(s=[],c=nr();c!==o;)s.push(c),c=nr();s!==o?(Et=e,e=r=S(n)):(St=e,e=u)}else St=e,e=u;else St=e,e=u}else St=e,e=u;else St=e,e=u}return At[l]={nextPos:St,result:e},e}function Ft(){var e,t,r,n=49*St+10,i=At[n];if(i)return St=i.nextPos,i.result;if(e=St,t=[],(r=cr())!==o)for(;r!==o;)t.push(r),r=cr();else t=u;return t!==o&&(Et=e,t=x(t)),e=t,At[n]={nextPos:St,result:e},e}function Vt(){var e,t,r=49*St+11,n=At[r];return n?(St=n.nextPos,n.result):(e=St,(t=Kt())!==o&&(Et=e,t=A(t)),(e=t)===o&&(e=St,(t=Ht())!==o&&(Et=e,t=A(t)),e=t),At[r]={nextPos:St,result:e},e)}function qt(){var e,r=49*St+12,n=At[r];return n?(St=n.nextPos,n.result):(e=function(){var e,r=49*St+13,n=At[r];if(n)return St=n.nextPos,n.result;e=function(){var e,r,n,i,a,s=49*St+14,c=At[s];if(c)return St=c.nextPos,c.result;e=St,t.substr(St,3)===P?(r=P,St+=3):(r=o,0===xt&&Ct(R));if(r!==o)if((n=or())===o&&(n=j),n!==o){for(i=[],a=Gt();a!==o;)i.push(a),a=Gt();i!==o?(t.substr(St,3)===P?(a=P,St+=3):(a=o,0===xt&&Ct(R)),a!==o?(Et=e,e=r=C(i)):(St=e,e=u)):(St=e,e=u)}else St=e,e=u;else St=e,e=u;return At[s]={nextPos:St,result:e},e}(),e===o&&(e=Kt())===o&&(e=function(){var e,r,n,i,a,s=49*St+16,c=At[s];if(c)return St=c.nextPos,c.result;e=St,t.substr(St,3)===B?(r=B,St+=3):(r=o,0===xt&&Ct(N));if(r!==o)if((n=or())===o&&(n=j),n!==o){for(i=[],a=Wt();a!==o;)i.push(a),a=Wt();i!==o?(t.substr(St,3)===B?(a=B,St+=3):(a=o,0===xt&&Ct(N)),a!==o?(Et=e,e=r=C(i)):(St=e,e=u)):(St=e,e=u)}else St=e,e=u;else St=e,e=u;return At[s]={nextPos:St,result:e},e}(),e===o&&(e=Ht()));return At[r]={nextPos:St,result:e},e}(),e===o&&(e=function(){var e,r,n,i,a,s=49*St+38,c=At[s];if(c)return St=c.nextPos,c.result;e=St,(r=rr())!==o?(84===t.charCodeAt(St)?(n=xe,St++):(n=o,0===xt&&Ct(Ae)),n!==o?(i=function(){var e,r,n,i,a,s,c,l,f,p,d,h=49*St+36,y=At[h];if(y)return St=y.nextPos,y.result;e=St,r=St,n=ur(),n!==o&&(i=ur())!==o?(58===t.charCodeAt(St)?(a=ke,St++):(a=o,0===xt&&Ct(Te)),a!==o&&(s=ur())!==o&&(c=ur())!==o?(58===t.charCodeAt(St)?(l=ke,St++):(l=o,0===xt&&Ct(Te)),l!==o&&(f=ur())!==o&&(p=ur())!==o?((d=tr())===o&&(d=j),d!==o?r=n=[n,i,a,s,c,l,f,p,d]:(St=r,r=u)):(St=r,r=u)):(St=r,r=u)):(St=r,r=u);r!==o&&(Et=e,r=Oe(r));return e=r,At[h]={nextPos:St,result:e},e}(),i!==o?(90===t.charCodeAt(St)?(a=Pe,St++):(a=o,0===xt&&Ct(Re)),a!==o?(Et=e,e=r=je(r,i)):(St=e,e=u)):(St=e,e=u)):(St=e,e=u)):(St=e,e=u);e===o&&(e=St,(r=rr())!==o?(84===t.charCodeAt(St)?(n=xe,St++):(n=o,0===xt&&Ct(Ae)),n!==o?(i=function(){var e,r,n,i,a,s,c,l,f,p,d,h,y,m,v,g,b,w=49*St+37,S=At[w];if(S)return St=S.nextPos,S.result;e=St,r=St,n=ur(),n!==o&&(i=ur())!==o?(58===t.charCodeAt(St)?(a=ke,St++):(a=o,0===xt&&Ct(Te)),a!==o&&(s=ur())!==o&&(c=ur())!==o?(58===t.charCodeAt(St)?(l=ke,St++):(l=o,0===xt&&Ct(Te)),l!==o&&(f=ur())!==o&&(p=ur())!==o?((d=tr())===o&&(d=j),d!==o?(45===t.charCodeAt(St)?(h=Z,St++):(h=o,0===xt&&Ct(ee)),h===o&&(43===t.charCodeAt(St)?(h=Q,St++):(h=o,0===xt&&Ct(Y))),h!==o&&(y=ur())!==o&&(m=ur())!==o?(58===t.charCodeAt(St)?(v=ke,St++):(v=o,0===xt&&Ct(Te)),v!==o&&(g=ur())!==o&&(b=ur())!==o?r=n=[n,i,a,s,c,l,f,p,d,h,y,m,v,g,b]:(St=r,r=u)):(St=r,r=u)):(St=r,r=u)):(St=r,r=u)):(St=r,r=u)):(St=r,r=u);r!==o&&(Et=e,r=Oe(r));return e=r,At[w]={nextPos:St,result:e},e}(),i!==o?(Et=e,e=r=Ce(r,i)):(St=e,e=u)):(St=e,e=u)):(St=e,e=u));return At[s]={nextPos:St,result:e},e}(),e===o&&(e=function(){var e,r,n,i,a=49*St+23,s=At[a];if(s)return St=s.nextPos,s.result;e=St,(r=$t())===o&&(r=Qt());r!==o?(101===t.charCodeAt(St)?(n=H,St++):(n=o,0===xt&&Ct(z)),n===o&&(69===t.charCodeAt(St)?(n=X,St++):(n=o,0===xt&&Ct(G))),n!==o&&(i=Qt())!==o?(Et=e,e=r=W(r,i)):(St=e,e=u)):(St=e,e=u);e===o&&(e=St,(r=$t())!==o&&(Et=e,r=$(r)),e=r);return At[a]={nextPos:St,result:e},e}(),e===o&&(e=function(){var e,t,r=49*St+25,n=At[r];if(n)return St=n.nextPos,n.result;e=St,(t=Qt())!==o&&(Et=e,t=re(t));return e=t,At[r]={nextPos:St,result:e},e}(),e===o&&(e=function(){var e,r,n=49*St+27,i=At[n];if(i)return St=i.nextPos,i.result;e=St,t.substr(St,4)===ne?(r=ne,St+=4):(r=o,0===xt&&Ct(oe));r!==o&&(Et=e,r=ie());e=r,e===o&&(e=St,t.substr(St,5)===ae?(r=ae,St+=5):(r=o,0===xt&&Ct(se)),r!==o&&(Et=e,r=ue()),e=r);return At[n]={nextPos:St,result:e},e}(),e===o&&(e=function(){var e,r,n,i,a,s=49*St+28,c=At[s];if(c)return St=c.nextPos,c.result;e=St,91===t.charCodeAt(St)?(r=d,St++):(r=o,0===xt&&Ct(h));if(r!==o){for(n=[],i=Zt();i!==o;)n.push(i),i=Zt();n!==o?(93===t.charCodeAt(St)?(i=y,St++):(i=o,0===xt&&Ct(m)),i!==o?(Et=e,e=r=ce()):(St=e,e=u)):(St=e,e=u)}else St=e,e=u;if(e===o&&(e=St,91===t.charCodeAt(St)?(r=d,St++):(r=o,0===xt&&Ct(h)),r!==o?((n=Yt())===o&&(n=j),n!==o?(93===t.charCodeAt(St)?(i=y,St++):(i=o,0===xt&&Ct(m)),i!==o?(Et=e,e=r=le(n)):(St=e,e=u)):(St=e,e=u)):(St=e,e=u),e===o)){if(e=St,91===t.charCodeAt(St)?(r=d,St++):(r=o,0===xt&&Ct(h)),r!==o){if(n=[],(i=Jt())!==o)for(;i!==o;)n.push(i),i=Jt();else n=u;n!==o?(93===t.charCodeAt(St)?(i=y,St++):(i=o,0===xt&&Ct(m)),i!==o?(Et=e,e=r=fe(n)):(St=e,e=u)):(St=e,e=u)}else St=e,e=u;if(e===o)if(e=St,91===t.charCodeAt(St)?(r=d,St++):(r=o,0===xt&&Ct(h)),r!==o){if(n=[],(i=Jt())!==o)for(;i!==o;)n.push(i),i=Jt();else n=u;n!==o&&(i=Yt())!==o?(93===t.charCodeAt(St)?(a=y,St++):(a=o,0===xt&&Ct(m)),a!==o?(Et=e,e=r=pe(n,i)):(St=e,e=u)):(St=e,e=u)}else St=e,e=u}return At[s]={nextPos:St,result:e},e}(),e===o&&(e=function(){var e,r,n,i,a,s,c=49*St+32,l=At[c];if(l)return St=l.nextPos,l.result;e=St,123===t.charCodeAt(St)?(r=me,St++):(r=o,0===xt&&Ct(ve));if(r!==o){for(n=[],i=nr();i!==o;)n.push(i),i=nr();if(n!==o){for(i=[],a=er();a!==o;)i.push(a),a=er();if(i!==o){for(a=[],s=nr();s!==o;)a.push(s),s=nr();a!==o?(125===t.charCodeAt(St)?(s=ge,St++):(s=o,0===xt&&Ct(be)),s!==o?(Et=e,e=r=we(i)):(St=e,e=u)):(St=e,e=u)}else St=e,e=u}else St=e,e=u}else St=e,e=u;return At[c]={nextPos:St,result:e},e}())))))),At[r]={nextPos:St,result:e},e)}function Kt(){var e,r,n,i,a=49*St+15,s=At[a];if(s)return St=s.nextPos,s.result;if(e=St,34===t.charCodeAt(St)?(r=I,St++):(r=o,0===xt&&Ct(L)),r!==o){for(n=[],i=zt();i!==o;)n.push(i),i=zt();n!==o?(34===t.charCodeAt(St)?(i=I,St++):(i=o,0===xt&&Ct(L)),i!==o?(Et=e,e=r=C(n)):(St=e,e=u)):(St=e,e=u)}else St=e,e=u;return At[a]={nextPos:St,result:e},e}function Ht(){var e,r,n,i,a=49*St+17,s=At[a];if(s)return St=s.nextPos,s.result;if(e=St,39===t.charCodeAt(St)?(r=U,St++):(r=o,0===xt&&Ct(M)),r!==o){for(n=[],i=Xt();i!==o;)n.push(i),i=Xt();n!==o?(39===t.charCodeAt(St)?(i=U,St++):(i=o,0===xt&&Ct(M)),i!==o?(Et=e,e=r=C(n)):(St=e,e=u)):(St=e,e=u)}else St=e,e=u;return At[a]={nextPos:St,result:e},e}function zt(){var e,r,n,i=49*St+18,a=At[i];return a?(St=a.nextPos,a.result):((e=fr())===o&&(e=St,r=St,xt++,34===t.charCodeAt(St)?(n=I,St++):(n=o,0===xt&&Ct(L)),xt--,n===o?r=f:(St=r,r=u),r!==o?(t.length>St?(n=t.charAt(St),St++):(n=o,0===xt&&Ct(p)),n!==o?(Et=e,e=r=D(n)):(St=e,e=u)):(St=e,e=u)),At[i]={nextPos:St,result:e},e)}function Xt(){var e,r,n,i=49*St+19,a=At[i];return a?(St=a.nextPos,a.result):(e=St,r=St,xt++,39===t.charCodeAt(St)?(n=U,St++):(n=o,0===xt&&Ct(M)),xt--,n===o?r=f:(St=r,r=u),r!==o?(t.length>St?(n=t.charAt(St),St++):(n=o,0===xt&&Ct(p)),n!==o?(Et=e,e=r=D(n)):(St=e,e=u)):(St=e,e=u),At[i]={nextPos:St,result:e},e)}function Gt(){var e,r,n,i=49*St+20,a=At[i];return a?(St=a.nextPos,a.result):((e=fr())===o&&(e=function(){var e,r,n,i,a=49*St+21,s=At[a];if(s)return St=s.nextPos,s.result;e=St,92===t.charCodeAt(St)?(r=V,St++):(r=o,0===xt&&Ct(q));if(r!==o)if(or()!==o){for(n=[],i=ir();i!==o;)n.push(i),i=ir();n!==o?(Et=e,e=r=K()):(St=e,e=u)}else St=e,e=u;else St=e,e=u;return At[a]={nextPos:St,result:e},e}(),e===o&&(e=St,r=St,xt++,t.substr(St,3)===P?(n=P,St+=3):(n=o,0===xt&&Ct(R)),xt--,n===o?r=f:(St=r,r=u),r!==o?(t.length>St?(n=t.charAt(St),St++):(n=o,0===xt&&Ct(p)),n!==o?(Et=e,e=r=F(n)):(St=e,e=u)):(St=e,e=u))),At[i]={nextPos:St,result:e},e)}function Wt(){var e,r,n,i=49*St+22,a=At[i];return a?(St=a.nextPos,a.result):(e=St,r=St,xt++,t.substr(St,3)===B?(n=B,St+=3):(n=o,0===xt&&Ct(N)),xt--,n===o?r=f:(St=r,r=u),r!==o?(t.length>St?(n=t.charAt(St),St++):(n=o,0===xt&&Ct(p)),n!==o?(Et=e,e=r=D(n)):(St=e,e=u)):(St=e,e=u),At[i]={nextPos:St,result:e},e)}function $t(){var e,r,n,i,a,s,c=49*St+24,l=At[c];return l?(St=l.nextPos,l.result):(e=St,43===t.charCodeAt(St)?(r=Q,St++):(r=o,0===xt&&Ct(Y)),r===o&&(r=j),r!==o?(n=St,(i=lr())!==o?(46===t.charCodeAt(St)?(a=E,St++):(a=o,0===xt&&Ct(_)),a!==o&&(s=lr())!==o?n=i=[i,a,s]:(St=n,n=u)):(St=n,n=u),n!==o?(Et=e,e=r=J(n)):(St=e,e=u)):(St=e,e=u),e===o&&(e=St,45===t.charCodeAt(St)?(r=Z,St++):(r=o,0===xt&&Ct(ee)),r!==o?(n=St,(i=lr())!==o?(46===t.charCodeAt(St)?(a=E,St++):(a=o,0===xt&&Ct(_)),a!==o&&(s=lr())!==o?n=i=[i,a,s]:(St=n,n=u)):(St=n,n=u),n!==o?(Et=e,e=r=te(n)):(St=e,e=u)):(St=e,e=u)),At[c]={nextPos:St,result:e},e)}function Qt(){var e,r,n,i,a,s=49*St+26,c=At[s];if(c)return St=c.nextPos,c.result;if(e=St,43===t.charCodeAt(St)?(r=Q,St++):(r=o,0===xt&&Ct(Y)),r===o&&(r=j),r!==o){if(n=[],(i=ur())!==o)for(;i!==o;)n.push(i),i=ur();else n=u;n!==o?(i=St,xt++,46===t.charCodeAt(St)?(a=E,St++):(a=o,0===xt&&Ct(_)),xt--,a===o?i=f:(St=i,i=u),i!==o?(Et=e,e=r=J(n)):(St=e,e=u)):(St=e,e=u)}else St=e,e=u;if(e===o)if(e=St,45===t.charCodeAt(St)?(r=Z,St++):(r=o,0===xt&&Ct(ee)),r!==o){if(n=[],(i=ur())!==o)for(;i!==o;)n.push(i),i=ur();else n=u;n!==o?(i=St,xt++,46===t.charCodeAt(St)?(a=E,St++):(a=o,0===xt&&Ct(_)),xt--,a===o?i=f:(St=i,i=u),i!==o?(Et=e,e=r=te(n)):(St=e,e=u)):(St=e,e=u)}else St=e,e=u;return At[s]={nextPos:St,result:e},e}function Yt(){var e,t,r,n,i,a=49*St+29,s=At[a];if(s)return St=s.nextPos,s.result;for(e=St,t=[],r=Zt();r!==o;)t.push(r),r=Zt();if(t!==o)if((r=qt())!==o){for(n=[],i=Zt();i!==o;)n.push(i),i=Zt();n!==o?(Et=e,e=t=de(r)):(St=e,e=u)}else St=e,e=u;else St=e,e=u;return At[a]={nextPos:St,result:e},e}function Jt(){var e,r,n,i,a,s,c,l=49*St+30,f=At[l];if(f)return St=f.nextPos,f.result;for(e=St,r=[],n=Zt();n!==o;)r.push(n),n=Zt();if(r!==o)if((n=qt())!==o){for(i=[],a=Zt();a!==o;)i.push(a),a=Zt();if(i!==o)if(44===t.charCodeAt(St)?(a=he,St++):(a=o,0===xt&&Ct(ye)),a!==o){for(s=[],c=Zt();c!==o;)s.push(c),c=Zt();s!==o?(Et=e,e=r=de(n)):(St=e,e=u)}else St=e,e=u;else St=e,e=u}else St=e,e=u;else St=e,e=u;return At[l]={nextPos:St,result:e},e}function Zt(){var e,t=49*St+31,r=At[t];return r?(St=r.nextPos,r.result):((e=nr())===o&&(e=or())===o&&(e=Nt()),At[t]={nextPos:St,result:e},e)}function er(){var e,r,n,i,a,s,c,l,f,p,d,h=49*St+33,y=At[h];if(y)return St=y.nextPos,y.result;for(e=St,r=[],n=nr();n!==o;)r.push(n),n=nr();if(r!==o)if((n=Ft())!==o){for(i=[],a=nr();a!==o;)i.push(a),a=nr();if(i!==o)if(61===t.charCodeAt(St)?(a=k,St++):(a=o,0===xt&&Ct(T)),a!==o){for(s=[],c=nr();c!==o;)s.push(c),c=nr();if(s!==o)if((c=qt())!==o){for(l=[],f=nr();f!==o;)l.push(f),f=nr();if(l!==o)if(44===t.charCodeAt(St)?(f=he,St++):(f=o,0===xt&&Ct(ye)),f!==o){for(p=[],d=nr();d!==o;)p.push(d),d=nr();p!==o?(Et=e,e=r=Se(n,c)):(St=e,e=u)}else St=e,e=u;else St=e,e=u}else St=e,e=u;else St=e,e=u}else St=e,e=u;else St=e,e=u}else St=e,e=u;else St=e,e=u;if(e===o){for(e=St,r=[],n=nr();n!==o;)r.push(n),n=nr();if(r!==o)if((n=Ft())!==o){for(i=[],a=nr();a!==o;)i.push(a),a=nr();if(i!==o)if(61===t.charCodeAt(St)?(a=k,St++):(a=o,0===xt&&Ct(T)),a!==o){for(s=[],c=nr();c!==o;)s.push(c),c=nr();s!==o&&(c=qt())!==o?(Et=e,e=r=Se(n,c)):(St=e,e=u)}else St=e,e=u;else St=e,e=u}else St=e,e=u;else St=e,e=u}return At[h]={nextPos:St,result:e},e}function tr(){var e,r,n,i=49*St+34,a=At[i];return a?(St=a.nextPos,a.result):(e=St,46===t.charCodeAt(St)?(r=E,St++):(r=o,0===xt&&Ct(_)),r!==o&&(n=lr())!==o?(Et=e,e=r=Ee(n)):(St=e,e=u),At[i]={nextPos:St,result:e},e)}function rr(){var e,r,n,i,a,s,c,l,f,p,d,h,y=49*St+35,m=At[y];return m?(St=m.nextPos,m.result):(e=St,r=St,(n=ur())!==o&&(i=ur())!==o&&(a=ur())!==o&&(s=ur())!==o?(45===t.charCodeAt(St)?(c=Z,St++):(c=o,0===xt&&Ct(ee)),c!==o&&(l=ur())!==o&&(f=ur())!==o?(45===t.charCodeAt(St)?(p=Z,St++):(p=o,0===xt&&Ct(ee)),p!==o&&(d=ur())!==o&&(h=ur())!==o?r=n=[n,i,a,s,c,l,f,p,d,h]:(St=r,r=u)):(St=r,r=u)):(St=r,r=u),r!==o&&(Et=e,r=_e(r)),e=r,At[y]={nextPos:St,result:e},e)}function nr(){var e,r=49*St+39,n=At[r];return n?(St=n.nextPos,n.result):(Ie.test(t.charAt(St))?(e=t.charAt(St),St++):(e=o,0===xt&&Ct(Le)),At[r]={nextPos:St,result:e},e)}function or(){var e,r,n,i=49*St+40,a=At[i];return a?(St=a.nextPos,a.result):(10===t.charCodeAt(St)?(e=Be,St++):(e=o,0===xt&&Ct(Ne)),e===o&&(e=St,13===t.charCodeAt(St)?(r=Ue,St++):(r=o,0===xt&&Ct(Me)),r!==o?(10===t.charCodeAt(St)?(n=Be,St++):(n=o,0===xt&&Ct(Ne)),n!==o?e=r=[r,n]:(St=e,e=u)):(St=e,e=u)),At[i]={nextPos:St,result:e},e)}function ir(){var e,t=49*St+41,r=At[t];return r?(St=r.nextPos,r.result):((e=or())===o&&(e=nr()),At[t]={nextPos:St,result:e},e)}function ar(){var e,r,n=49*St+42,i=At[n];return i?(St=i.nextPos,i.result):(e=St,xt++,t.length>St?(r=t.charAt(St),St++):(r=o,0===xt&&Ct(p)),xt--,r===o?e=f:(St=e,e=u),At[n]={nextPos:St,result:e},e)}function sr(){var e,r=49*St+43,n=At[r];return n?(St=n.nextPos,n.result):(De.test(t.charAt(St))?(e=t.charAt(St),St++):(e=o,0===xt&&Ct(Fe)),At[r]={nextPos:St,result:e},e)}function ur(){var e,r,n=49*St+44,i=At[n];return i?(St=i.nextPos,i.result):(Ve.test(t.charAt(St))?(e=t.charAt(St),St++):(e=o,0===xt&&Ct(qe)),e===o&&(e=St,95===t.charCodeAt(St)?(r=Ke,St++):(r=o,0===xt&&Ct(He)),r!==o&&(Et=e,r=ze()),e=r),At[n]={nextPos:St,result:e},e)}function cr(){var e,r=49*St+45,n=At[r];return n?(St=n.nextPos,n.result):(Xe.test(t.charAt(St))?(e=t.charAt(St),St++):(e=o,0===xt&&Ct(Ge)),At[r]={nextPos:St,result:e},e)}function lr(){var e,t,r,n=49*St+46,i=At[n];if(i)return St=i.nextPos,i.result;if(e=St,t=[],(r=ur())!==o)for(;r!==o;)t.push(r),r=ur();else t=u;return t!==o&&(Et=e,t=We(t)),e=t,At[n]={nextPos:St,result:e},e}function fr(){var e,r,n=49*St+47,i=At[n];return i?(St=i.nextPos,i.result):(e=St,t.substr(St,2)===$e?(r=$e,St+=2):(r=o,0===xt&&Ct(Qe)),r!==o&&(Et=e,r=Ye()),(e=r)===o&&(e=St,t.substr(St,2)===Je?(r=Je,St+=2):(r=o,0===xt&&Ct(Ze)),r!==o&&(Et=e,r=et()),(e=r)===o&&(e=St,t.substr(St,2)===tt?(r=tt,St+=2):(r=o,0===xt&&Ct(rt)),r!==o&&(Et=e,r=nt()),(e=r)===o&&(e=St,t.substr(St,2)===ot?(r=ot,St+=2):(r=o,0===xt&&Ct(it)),r!==o&&(Et=e,r=at()),(e=r)===o&&(e=St,t.substr(St,2)===st?(r=st,St+=2):(r=o,0===xt&&Ct(ut)),r!==o&&(Et=e,r=ct()),(e=r)===o&&(e=St,t.substr(St,2)===lt?(r=lt,St+=2):(r=o,0===xt&&Ct(ft)),r!==o&&(Et=e,r=pt()),(e=r)===o&&(e=St,t.substr(St,2)===dt?(r=dt,St+=2):(r=o,0===xt&&Ct(ht)),r!==o&&(Et=e,r=yt()),(e=r)===o&&(e=function(){var e,r,n,i,a,s,c,l,f,p,d,h=49*St+48,y=At[h];if(y)return St=y.nextPos,y.result;e=St,t.substr(St,2)===mt?(r=mt,St+=2):(r=o,0===xt&&Ct(vt));r!==o?(n=St,(i=sr())!==o&&(a=sr())!==o&&(s=sr())!==o&&(c=sr())!==o&&(l=sr())!==o&&(f=sr())!==o&&(p=sr())!==o&&(d=sr())!==o?n=i=[i,a,s,c,l,f,p,d]:(St=n,n=u),n!==o?(Et=e,e=r=gt(n)):(St=e,e=u)):(St=e,e=u);e===o&&(e=St,t.substr(St,2)===bt?(r=bt,St+=2):(r=o,0===xt&&Ct(wt)),r!==o?(n=St,(i=sr())!==o&&(a=sr())!==o&&(s=sr())!==o&&(c=sr())!==o?n=i=[i,a,s,c]:(St=n,n=u),n!==o?(Et=e,e=r=gt(n)):(St=e,e=u)):(St=e,e=u));return At[h]={nextPos:St,result:e},e}()))))))),At[n]={nextPos:St,result:e},e)}var pr=[];function dr(e){pr.push(e)}function hr(e,t,r,n,o){var i={type:e,value:t,line:r(),column:n()};return o&&(i.key=o),i}if((r=a())!==o&&St===t.length)return r;throw r!==o&&St<t.length&&Ct({type:\"end\",description:\"end of input\"}),It(null,Ot,Tt)}}}()},1430:function(e,t,r){var n,o;!function(i,a){\"use strict\";e.exports?e.exports=a():void 0===(o=\"function\"==typeof(n=a)?n.call(t,r,t,e):n)||(e.exports=o)}(0,(function(e){\"use strict\";var t=e&&e.IPv6;return{best:function(e){var t,r,n=e.toLowerCase().split(\":\"),o=n.length,i=8;for(\"\"===n[0]&&\"\"===n[1]&&\"\"===n[2]?(n.shift(),n.shift()):\"\"===n[0]&&\"\"===n[1]?n.shift():\"\"===n[o-1]&&\"\"===n[o-2]&&n.pop(),-1!==n[(o=n.length)-1].indexOf(\".\")&&(i=7),t=0;t<o&&\"\"!==n[t];t++);if(t<i)for(n.splice(t,1,\"0000\");n.length<i;)n.splice(t,0,\"0000\");for(var a=0;a<i;a++){r=n[a].split(\"\");for(var s=0;s<3&&(\"0\"===r[0]&&r.length>1);s++)r.splice(0,1);n[a]=r.join(\"\")}var u=-1,c=0,l=0,f=-1,p=!1;for(a=0;a<i;a++)p?\"0\"===n[a]?l+=1:(p=!1,l>c&&(u=f,c=l)):\"0\"===n[a]&&(p=!0,f=a,l=1);l>c&&(u=f,c=l),c>1&&n.splice(u,c,\"\"),o=n.length;var d=\"\";for(\"\"===n[0]&&(d=\":\"),a=0;a<o&&(d+=n[a],a!==o-1);a++)d+=\":\";return\"\"===n[o-1]&&(d+=\":\"),d},noConflict:function(){return e.IPv6===this&&(e.IPv6=t),this}}}))},4704:function(e,t,r){var n,o;!function(i,a){\"use strict\";e.exports?e.exports=a():void 0===(o=\"function\"==typeof(n=a)?n.call(t,r,t,e):n)||(e.exports=o)}(0,(function(e){\"use strict\";var t=e&&e.SecondLevelDomains,r={list:{ac:\" com gov mil net org \",ae:\" ac co gov mil name net org pro sch \",af:\" com edu gov net org \",al:\" com edu gov mil net org \",ao:\" co ed gv it og pb \",ar:\" com edu gob gov int mil net org tur \",at:\" ac co gv or \",au:\" asn com csiro edu gov id net org \",ba:\" co com edu gov mil net org rs unbi unmo unsa untz unze \",bb:\" biz co com edu gov info net org store tv \",bh:\" biz cc com edu gov info net org \",bn:\" com edu gov net org \",bo:\" com edu gob gov int mil net org tv \",br:\" adm adv agr am arq art ato b bio blog bmd cim cng cnt com coop ecn edu eng esp etc eti far flog fm fnd fot fst g12 ggf gov imb ind inf jor jus lel mat med mil mus net nom not ntr odo org ppg pro psc psi qsl rec slg srv tmp trd tur tv vet vlog wiki zlg \",bs:\" com edu gov net org \",bz:\" du et om ov rg \",ca:\" ab bc mb nb nf nl ns nt nu on pe qc sk yk \",ck:\" biz co edu gen gov info net org \",cn:\" ac ah bj com cq edu fj gd gov gs gx gz ha hb he hi hl hn jl js jx ln mil net nm nx org qh sc sd sh sn sx tj tw xj xz yn zj \",co:\" com edu gov mil net nom org \",cr:\" ac c co ed fi go or sa \",cy:\" ac biz com ekloges gov ltd name net org parliament press pro tm \",do:\" art com edu gob gov mil net org sld web \",dz:\" art asso com edu gov net org pol \",ec:\" com edu fin gov info med mil net org pro \",eg:\" com edu eun gov mil name net org sci \",er:\" com edu gov ind mil net org rochest w \",es:\" com edu gob nom org \",et:\" biz com edu gov info name net org \",fj:\" ac biz com info mil name net org pro \",fk:\" ac co gov net nom org \",fr:\" asso com f gouv nom prd presse tm \",gg:\" co net org \",gh:\" com edu gov mil org \",gn:\" ac com gov net org \",gr:\" com edu gov mil net org \",gt:\" com edu gob ind mil net org \",gu:\" com edu gov net org \",hk:\" com edu gov idv net org \",hu:\" 2000 agrar bolt casino city co erotica erotika film forum games hotel info ingatlan jogasz konyvelo lakas media news org priv reklam sex shop sport suli szex tm tozsde utazas video \",id:\" ac co go mil net or sch web \",il:\" ac co gov idf k12 muni net org \",in:\" ac co edu ernet firm gen gov i ind mil net nic org res \",iq:\" com edu gov i mil net org \",ir:\" ac co dnssec gov i id net org sch \",it:\" edu gov \",je:\" co net org \",jo:\" com edu gov mil name net org sch \",jp:\" ac ad co ed go gr lg ne or \",ke:\" ac co go info me mobi ne or sc \",kh:\" com edu gov mil net org per \",ki:\" biz com de edu gov info mob net org tel \",km:\" asso com coop edu gouv k medecin mil nom notaires pharmaciens presse tm veterinaire \",kn:\" edu gov net org \",kr:\" ac busan chungbuk chungnam co daegu daejeon es gangwon go gwangju gyeongbuk gyeonggi gyeongnam hs incheon jeju jeonbuk jeonnam k kg mil ms ne or pe re sc seoul ulsan \",kw:\" com edu gov net org \",ky:\" com edu gov net org \",kz:\" com edu gov mil net org \",lb:\" com edu gov net org \",lk:\" assn com edu gov grp hotel int ltd net ngo org sch soc web \",lr:\" com edu gov net org \",lv:\" asn com conf edu gov id mil net org \",ly:\" com edu gov id med net org plc sch \",ma:\" ac co gov m net org press \",mc:\" asso tm \",me:\" ac co edu gov its net org priv \",mg:\" com edu gov mil nom org prd tm \",mk:\" com edu gov inf name net org pro \",ml:\" com edu gov net org presse \",mn:\" edu gov org \",mo:\" com edu gov net org \",mt:\" com edu gov net org \",mv:\" aero biz com coop edu gov info int mil museum name net org pro \",mw:\" ac co com coop edu gov int museum net org \",mx:\" com edu gob net org \",my:\" com edu gov mil name net org sch \",nf:\" arts com firm info net other per rec store web \",ng:\" biz com edu gov mil mobi name net org sch \",ni:\" ac co com edu gob mil net nom org \",np:\" com edu gov mil net org \",nr:\" biz com edu gov info net org \",om:\" ac biz co com edu gov med mil museum net org pro sch \",pe:\" com edu gob mil net nom org sld \",ph:\" com edu gov i mil net ngo org \",pk:\" biz com edu fam gob gok gon gop gos gov net org web \",pl:\" art bialystok biz com edu gda gdansk gorzow gov info katowice krakow lodz lublin mil net ngo olsztyn org poznan pwr radom slupsk szczecin torun warszawa waw wroc wroclaw zgora \",pr:\" ac biz com edu est gov info isla name net org pro prof \",ps:\" com edu gov net org plo sec \",pw:\" belau co ed go ne or \",ro:\" arts com firm info nom nt org rec store tm www \",rs:\" ac co edu gov in org \",sb:\" com edu gov net org \",sc:\" com edu gov net org \",sh:\" co com edu gov net nom org \",sl:\" com edu gov net org \",st:\" co com consulado edu embaixada gov mil net org principe saotome store \",sv:\" com edu gob org red \",sz:\" ac co org \",tr:\" av bbs bel biz com dr edu gen gov info k12 name net org pol tel tsk tv web \",tt:\" aero biz cat co com coop edu gov info int jobs mil mobi museum name net org pro tel travel \",tw:\" club com ebiz edu game gov idv mil net org \",mu:\" ac co com gov net or org \",mz:\" ac co edu gov org \",na:\" co com \",nz:\" ac co cri geek gen govt health iwi maori mil net org parliament school \",pa:\" abo ac com edu gob ing med net nom org sld \",pt:\" com edu gov int net nome org publ \",py:\" com edu gov mil net org \",qa:\" com edu gov mil net org \",re:\" asso com nom \",ru:\" ac adygeya altai amur arkhangelsk astrakhan bashkiria belgorod bir bryansk buryatia cbg chel chelyabinsk chita chukotka chuvashia com dagestan e-burg edu gov grozny int irkutsk ivanovo izhevsk jar joshkar-ola kalmykia kaluga kamchatka karelia kazan kchr kemerovo khabarovsk khakassia khv kirov koenig komi kostroma kranoyarsk kuban kurgan kursk lipetsk magadan mari mari-el marine mil mordovia mosreg msk murmansk nalchik net nnov nov novosibirsk nsk omsk orenburg org oryol penza perm pp pskov ptz rnd ryazan sakhalin samara saratov simbirsk smolensk spb stavropol stv surgut tambov tatarstan tom tomsk tsaritsyn tsk tula tuva tver tyumen udm udmurtia ulan-ude vladikavkaz vladimir vladivostok volgograd vologda voronezh vrn vyatka yakutia yamal yekaterinburg yuzhno-sakhalinsk \",rw:\" ac co com edu gouv gov int mil net \",sa:\" com edu gov med net org pub sch \",sd:\" com edu gov info med net org tv \",se:\" a ac b bd c d e f g h i k l m n o org p parti pp press r s t tm u w x y z \",sg:\" com edu gov idn net org per \",sn:\" art com edu gouv org perso univ \",sy:\" com edu gov mil net news org \",th:\" ac co go in mi net or \",tj:\" ac biz co com edu go gov info int mil name net nic org test web \",tn:\" agrinet com defense edunet ens fin gov ind info intl mincom nat net org perso rnrt rns rnu tourism \",tz:\" ac co go ne or \",ua:\" biz cherkassy chernigov chernovtsy ck cn co com crimea cv dn dnepropetrovsk donetsk dp edu gov if in ivano-frankivsk kh kharkov kherson khmelnitskiy kiev kirovograd km kr ks kv lg lugansk lutsk lviv me mk net nikolaev od odessa org pl poltava pp rovno rv sebastopol sumy te ternopil uzhgorod vinnica vn zaporizhzhe zhitomir zp zt \",ug:\" ac co go ne or org sc \",uk:\" ac bl british-library co cym gov govt icnet jet lea ltd me mil mod national-library-scotland nel net nhs nic nls org orgn parliament plc police sch scot soc \",us:\" dni fed isa kids nsn \",uy:\" com edu gub mil net org \",ve:\" co com edu gob info mil net org web \",vi:\" co com k12 net org \",vn:\" ac biz com edu gov health info int name net org pro \",ye:\" co com gov ltd me net org plc \",yu:\" ac co edu gov org \",za:\" ac agric alt bourse city co cybernet db edu gov grondar iaccess imt inca landesign law mil net ngo nis nom olivetti org pix school tm web \",zm:\" ac co com edu gov net org sch \",com:\"ar br cn de eu gb gr hu jpn kr no qc ru sa se uk us uy za \",net:\"gb jp se uk \",org:\"ae\",de:\"com \"},has:function(e){var t=e.lastIndexOf(\".\");if(t<=0||t>=e.length-1)return!1;var n=e.lastIndexOf(\".\",t-1);if(n<=0||n>=t-1)return!1;var o=r.list[e.slice(t+1)];return!!o&&o.indexOf(\" \"+e.slice(n+1,t)+\" \")>=0},is:function(e){var t=e.lastIndexOf(\".\");if(t<=0||t>=e.length-1)return!1;if(e.lastIndexOf(\".\",t-1)>=0)return!1;var n=r.list[e.slice(t+1)];return!!n&&n.indexOf(\" \"+e.slice(0,t)+\" \")>=0},get:function(e){var t=e.lastIndexOf(\".\");if(t<=0||t>=e.length-1)return null;var n=e.lastIndexOf(\".\",t-1);if(n<=0||n>=t-1)return null;var o=r.list[e.slice(t+1)];return o?o.indexOf(\" \"+e.slice(n+1,t)+\" \")<0?null:e.slice(n+1):null},noConflict:function(){return e.SecondLevelDomains===this&&(e.SecondLevelDomains=t),this}};return r}))},4193:function(e,t,r){var n,o,i;!function(a,s){\"use strict\";e.exports?e.exports=s(r(9340),r(1430),r(4704)):(o=[r(9340),r(1430),r(4704)],void 0===(i=\"function\"==typeof(n=s)?n.apply(t,o):n)||(e.exports=i))}(0,(function(e,t,r,n){\"use strict\";var o=n&&n.URI;function i(e,t){var r=arguments.length>=1;if(!(this instanceof i))return r?arguments.length>=2?new i(e,t):new i(e):new i;if(void 0===e){if(r)throw new TypeError(\"undefined is not a valid argument for URI\");e=\"undefined\"!=typeof location?location.href+\"\":\"\"}if(null===e&&r)throw new TypeError(\"null is not a valid argument for URI\");return this.href(e),void 0!==t?this.absoluteTo(t):this}i.version=\"1.19.11\";var a=i.prototype,s=Object.prototype.hasOwnProperty;function u(e){return e.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g,\"\\\\$1\")}function c(e){return void 0===e?\"Undefined\":String(Object.prototype.toString.call(e)).slice(8,-1)}function l(e){return\"Array\"===c(e)}function f(e,t){var r,n,o={};if(\"RegExp\"===c(t))o=null;else if(l(t))for(r=0,n=t.length;r<n;r++)o[t[r]]=!0;else o[t]=!0;for(r=0,n=e.length;r<n;r++){(o&&void 0!==o[e[r]]||!o&&t.test(e[r]))&&(e.splice(r,1),n--,r--)}return e}function p(e,t){var r,n;if(l(t)){for(r=0,n=t.length;r<n;r++)if(!p(e,t[r]))return!1;return!0}var o=c(t);for(r=0,n=e.length;r<n;r++)if(\"RegExp\"===o){if(\"string\"==typeof e[r]&&e[r].match(t))return!0}else if(e[r]===t)return!0;return!1}function d(e,t){if(!l(e)||!l(t))return!1;if(e.length!==t.length)return!1;e.sort(),t.sort();for(var r=0,n=e.length;r<n;r++)if(e[r]!==t[r])return!1;return!0}function h(e){return e.replace(/^\\/+|\\/+$/g,\"\")}function y(e){return escape(e)}function m(e){return encodeURIComponent(e).replace(/[!'()*]/g,y).replace(/\\*/g,\"%2A\")}i._parts=function(){return{protocol:null,username:null,password:null,hostname:null,urn:null,port:null,path:null,query:null,fragment:null,preventInvalidHostname:i.preventInvalidHostname,duplicateQueryParameters:i.duplicateQueryParameters,escapeQuerySpace:i.escapeQuerySpace}},i.preventInvalidHostname=!1,i.duplicateQueryParameters=!1,i.escapeQuerySpace=!0,i.protocol_expression=/^[a-z][a-z0-9.+-]*$/i,i.idn_expression=/[^a-z0-9\\._-]/i,i.punycode_expression=/(xn--)/i,i.ip4_expression=/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/,i.ip6_expression=/^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,i.find_uri_expression=/\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?\\xab\\xbb\\u201c\\u201d\\u2018\\u2019]))/gi,i.findUri={start:/\\b(?:([a-z][a-z0-9.+-]*:\\/\\/)|www\\.)/gi,end:/[\\s\\r\\n]|$/,trim:/[`!()\\[\\]{};:'\".,<>?\\xab\\xbb\\u201c\\u201d\\u201e\\u2018\\u2019]+$/,parens:/(\\([^\\)]*\\)|\\[[^\\]]*\\]|\\{[^}]*\\}|<[^>]*>)/g},i.leading_whitespace_expression=/^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/,i.ascii_tab_whitespace=/[\\u0009\\u000A\\u000D]+/g,i.defaultPorts={http:\"80\",https:\"443\",ftp:\"21\",gopher:\"70\",ws:\"80\",wss:\"443\"},i.hostProtocols=[\"http\",\"https\"],i.invalid_hostname_characters=/[^a-zA-Z0-9\\.\\-:_]/,i.domAttributes={a:\"href\",blockquote:\"cite\",link:\"href\",base:\"href\",script:\"src\",form:\"action\",img:\"src\",area:\"href\",iframe:\"src\",embed:\"src\",source:\"src\",track:\"src\",input:\"src\",audio:\"src\",video:\"src\"},i.getDomAttribute=function(e){if(e&&e.nodeName){var t=e.nodeName.toLowerCase();if(\"input\"!==t||\"image\"===e.type)return i.domAttributes[t]}},i.encode=m,i.decode=decodeURIComponent,i.iso8859=function(){i.encode=escape,i.decode=unescape},i.unicode=function(){i.encode=m,i.decode=decodeURIComponent},i.characters={pathname:{encode:{expression:/%(24|26|2B|2C|3B|3D|3A|40)/gi,map:{\"%24\":\"$\",\"%26\":\"&\",\"%2B\":\"+\",\"%2C\":\",\",\"%3B\":\";\",\"%3D\":\"=\",\"%3A\":\":\",\"%40\":\"@\"}},decode:{expression:/[\\/\\?#]/g,map:{\"/\":\"%2F\",\"?\":\"%3F\",\"#\":\"%23\"}}},reserved:{encode:{expression:/%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/gi,map:{\"%3A\":\":\",\"%2F\":\"/\",\"%3F\":\"?\",\"%23\":\"#\",\"%5B\":\"[\",\"%5D\":\"]\",\"%40\":\"@\",\"%21\":\"!\",\"%24\":\"$\",\"%26\":\"&\",\"%27\":\"'\",\"%28\":\"(\",\"%29\":\")\",\"%2A\":\"*\",\"%2B\":\"+\",\"%2C\":\",\",\"%3B\":\";\",\"%3D\":\"=\"}}},urnpath:{encode:{expression:/%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/gi,map:{\"%21\":\"!\",\"%24\":\"$\",\"%27\":\"'\",\"%28\":\"(\",\"%29\":\")\",\"%2A\":\"*\",\"%2B\":\"+\",\"%2C\":\",\",\"%3B\":\";\",\"%3D\":\"=\",\"%40\":\"@\"}},decode:{expression:/[\\/\\?#:]/g,map:{\"/\":\"%2F\",\"?\":\"%3F\",\"#\":\"%23\",\":\":\"%3A\"}}}},i.encodeQuery=function(e,t){var r=i.encode(e+\"\");return void 0===t&&(t=i.escapeQuerySpace),t?r.replace(/%20/g,\"+\"):r},i.decodeQuery=function(e,t){e+=\"\",void 0===t&&(t=i.escapeQuerySpace);try{return i.decode(t?e.replace(/\\+/g,\"%20\"):e)}catch(t){return e}};var v,g={encode:\"encode\",decode:\"decode\"},b=function(e,t){return function(r){try{return i[t](r+\"\").replace(i.characters[e][t].expression,(function(r){return i.characters[e][t].map[r]}))}catch(e){return r}}};for(v in g)i[v+\"PathSegment\"]=b(\"pathname\",g[v]),i[v+\"UrnPathSegment\"]=b(\"urnpath\",g[v]);var w=function(e,t,r){return function(n){var o;o=r?function(e){return i[t](i[r](e))}:i[t];for(var a=(n+\"\").split(e),s=0,u=a.length;s<u;s++)a[s]=o(a[s]);return a.join(e)}};function S(e){return function(t,r){return void 0===t?this._parts[e]||\"\":(this._parts[e]=t||null,this.build(!r),this)}}function E(e,t){return function(r,n){return void 0===r?this._parts[e]||\"\":(null!==r&&(r+=\"\").charAt(0)===t&&(r=r.substring(1)),this._parts[e]=r,this.build(!n),this)}}i.decodePath=w(\"/\",\"decodePathSegment\"),i.decodeUrnPath=w(\":\",\"decodeUrnPathSegment\"),i.recodePath=w(\"/\",\"encodePathSegment\",\"decode\"),i.recodeUrnPath=w(\":\",\"encodeUrnPathSegment\",\"decode\"),i.encodeReserved=b(\"reserved\",\"encode\"),i.parse=function(e,t){var r;return t||(t={preventInvalidHostname:i.preventInvalidHostname}),(r=(e=(e=e.replace(i.leading_whitespace_expression,\"\")).replace(i.ascii_tab_whitespace,\"\")).indexOf(\"#\"))>-1&&(t.fragment=e.substring(r+1)||null,e=e.substring(0,r)),(r=e.indexOf(\"?\"))>-1&&(t.query=e.substring(r+1)||null,e=e.substring(0,r)),\"//\"===(e=(e=e.replace(/^(https?|ftp|wss?)?:+[/\\\\]*/i,\"$1://\")).replace(/^[/\\\\]{2,}/i,\"//\")).substring(0,2)?(t.protocol=null,e=e.substring(2),e=i.parseAuthority(e,t)):(r=e.indexOf(\":\"))>-1&&(t.protocol=e.substring(0,r)||null,t.protocol&&!t.protocol.match(i.protocol_expression)?t.protocol=void 0:\"//\"===e.substring(r+1,r+3).replace(/\\\\/g,\"/\")?(e=e.substring(r+3),e=i.parseAuthority(e,t)):(e=e.substring(r+1),t.urn=!0)),t.path=e,t},i.parseHost=function(e,t){e||(e=\"\");var r,n,o=(e=e.replace(/\\\\/g,\"/\")).indexOf(\"/\");if(-1===o&&(o=e.length),\"[\"===e.charAt(0))r=e.indexOf(\"]\"),t.hostname=e.substring(1,r)||null,t.port=e.substring(r+2,o)||null,\"/\"===t.port&&(t.port=null);else{var a=e.indexOf(\":\"),s=e.indexOf(\"/\"),u=e.indexOf(\":\",a+1);-1!==u&&(-1===s||u<s)?(t.hostname=e.substring(0,o)||null,t.port=null):(n=e.substring(0,o).split(\":\"),t.hostname=n[0]||null,t.port=n[1]||null)}return t.hostname&&\"/\"!==e.substring(o).charAt(0)&&(o++,e=\"/\"+e),t.preventInvalidHostname&&i.ensureValidHostname(t.hostname,t.protocol),t.port&&i.ensureValidPort(t.port),e.substring(o)||\"/\"},i.parseAuthority=function(e,t){return e=i.parseUserinfo(e,t),i.parseHost(e,t)},i.parseUserinfo=function(e,t){var r=e;-1!==e.indexOf(\"\\\\\")&&(e=e.replace(/\\\\/g,\"/\"));var n,o=e.indexOf(\"/\"),a=e.lastIndexOf(\"@\",o>-1?o:e.length-1);return a>-1&&(-1===o||a<o)?(n=e.substring(0,a).split(\":\"),t.username=n[0]?i.decode(n[0]):null,n.shift(),t.password=n[0]?i.decode(n.join(\":\")):null,e=r.substring(a+1)):(t.username=null,t.password=null),e},i.parseQuery=function(e,t){if(!e)return{};if(!(e=e.replace(/&+/g,\"&\").replace(/^\\?*&*|&+$/g,\"\")))return{};for(var r,n,o,a={},u=e.split(\"&\"),c=u.length,l=0;l<c;l++)r=u[l].split(\"=\"),n=i.decodeQuery(r.shift(),t),o=r.length?i.decodeQuery(r.join(\"=\"),t):null,\"__proto__\"!==n&&(s.call(a,n)?(\"string\"!=typeof a[n]&&null!==a[n]||(a[n]=[a[n]]),a[n].push(o)):a[n]=o);return a},i.build=function(e){var t=\"\",r=!1;return e.protocol&&(t+=e.protocol+\":\"),e.urn||!t&&!e.hostname||(t+=\"//\",r=!0),t+=i.buildAuthority(e)||\"\",\"string\"==typeof e.path&&(\"/\"!==e.path.charAt(0)&&r&&(t+=\"/\"),t+=e.path),\"string\"==typeof e.query&&e.query&&(t+=\"?\"+e.query),\"string\"==typeof e.fragment&&e.fragment&&(t+=\"#\"+e.fragment),t},i.buildHost=function(e){var t=\"\";return e.hostname?(i.ip6_expression.test(e.hostname)?t+=\"[\"+e.hostname+\"]\":t+=e.hostname,e.port&&(t+=\":\"+e.port),t):\"\"},i.buildAuthority=function(e){return i.buildUserinfo(e)+i.buildHost(e)},i.buildUserinfo=function(e){var t=\"\";return e.username&&(t+=i.encode(e.username)),e.password&&(t+=\":\"+i.encode(e.password)),t&&(t+=\"@\"),t},i.buildQuery=function(e,t,r){var n,o,a,u,c=\"\";for(o in e)if(\"__proto__\"!==o&&s.call(e,o))if(l(e[o]))for(n={},a=0,u=e[o].length;a<u;a++)void 0!==e[o][a]&&void 0===n[e[o][a]+\"\"]&&(c+=\"&\"+i.buildQueryParameter(o,e[o][a],r),!0!==t&&(n[e[o][a]+\"\"]=!0));else void 0!==e[o]&&(c+=\"&\"+i.buildQueryParameter(o,e[o],r));return c.substring(1)},i.buildQueryParameter=function(e,t,r){return i.encodeQuery(e,r)+(null!==t?\"=\"+i.encodeQuery(t,r):\"\")},i.addQuery=function(e,t,r){if(\"object\"==typeof t)for(var n in t)s.call(t,n)&&i.addQuery(e,n,t[n]);else{if(\"string\"!=typeof t)throw new TypeError(\"URI.addQuery() accepts an object, string as the name parameter\");if(void 0===e[t])return void(e[t]=r);\"string\"==typeof e[t]&&(e[t]=[e[t]]),l(r)||(r=[r]),e[t]=(e[t]||[]).concat(r)}},i.setQuery=function(e,t,r){if(\"object\"==typeof t)for(var n in t)s.call(t,n)&&i.setQuery(e,n,t[n]);else{if(\"string\"!=typeof t)throw new TypeError(\"URI.setQuery() accepts an object, string as the name parameter\");e[t]=void 0===r?null:r}},i.removeQuery=function(e,t,r){var n,o,a;if(l(t))for(n=0,o=t.length;n<o;n++)e[t[n]]=void 0;else if(\"RegExp\"===c(t))for(a in e)t.test(a)&&(e[a]=void 0);else if(\"object\"==typeof t)for(a in t)s.call(t,a)&&i.removeQuery(e,a,t[a]);else{if(\"string\"!=typeof t)throw new TypeError(\"URI.removeQuery() accepts an object, string, RegExp as the first parameter\");void 0!==r?\"RegExp\"===c(r)?!l(e[t])&&r.test(e[t])?e[t]=void 0:e[t]=f(e[t],r):e[t]!==String(r)||l(r)&&1!==r.length?l(e[t])&&(e[t]=f(e[t],r)):e[t]=void 0:e[t]=void 0}},i.hasQuery=function(e,t,r,n){switch(c(t)){case\"String\":break;case\"RegExp\":for(var o in e)if(s.call(e,o)&&t.test(o)&&(void 0===r||i.hasQuery(e,o,r)))return!0;return!1;case\"Object\":for(var a in t)if(s.call(t,a)&&!i.hasQuery(e,a,t[a]))return!1;return!0;default:throw new TypeError(\"URI.hasQuery() accepts a string, regular expression or object as the name parameter\")}switch(c(r)){case\"Undefined\":return t in e;case\"Boolean\":return r===Boolean(l(e[t])?e[t].length:e[t]);case\"Function\":return!!r(e[t],t,e);case\"Array\":return!!l(e[t])&&(n?p:d)(e[t],r);case\"RegExp\":return l(e[t])?!!n&&p(e[t],r):Boolean(e[t]&&e[t].match(r));case\"Number\":r=String(r);case\"String\":return l(e[t])?!!n&&p(e[t],r):e[t]===r;default:throw new TypeError(\"URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter\")}},i.joinPaths=function(){for(var e=[],t=[],r=0,n=0;n<arguments.length;n++){var o=new i(arguments[n]);e.push(o);for(var a=o.segment(),s=0;s<a.length;s++)\"string\"==typeof a[s]&&t.push(a[s]),a[s]&&r++}if(!t.length||!r)return new i(\"\");var u=new i(\"\").segment(t);return\"\"!==e[0].path()&&\"/\"!==e[0].path().slice(0,1)||u.path(\"/\"+u.path()),u.normalize()},i.commonPath=function(e,t){var r,n=Math.min(e.length,t.length);for(r=0;r<n;r++)if(e.charAt(r)!==t.charAt(r)){r--;break}return r<1?e.charAt(0)===t.charAt(0)&&\"/\"===e.charAt(0)?\"/\":\"\":(\"/\"===e.charAt(r)&&\"/\"===t.charAt(r)||(r=e.substring(0,r).lastIndexOf(\"/\")),e.substring(0,r+1))},i.withinString=function(e,t,r){r||(r={});var n=r.start||i.findUri.start,o=r.end||i.findUri.end,a=r.trim||i.findUri.trim,s=r.parens||i.findUri.parens,u=/[a-z0-9-]=[\"']?$/i;for(n.lastIndex=0;;){var c=n.exec(e);if(!c)break;var l=c.index;if(r.ignoreHtml){var f=e.slice(Math.max(l-3,0),l);if(f&&u.test(f))continue}for(var p=l+e.slice(l).search(o),d=e.slice(l,p),h=-1;;){var y=s.exec(d);if(!y)break;var m=y.index+y[0].length;h=Math.max(h,m)}if(!((d=h>-1?d.slice(0,h)+d.slice(h).replace(a,\"\"):d.replace(a,\"\")).length<=c[0].length||r.ignore&&r.ignore.test(d))){var v=t(d,l,p=l+d.length,e);void 0!==v?(v=String(v),e=e.slice(0,l)+v+e.slice(p),n.lastIndex=l+v.length):n.lastIndex=p}}return n.lastIndex=0,e},i.ensureValidHostname=function(t,r){var n=!!t,o=!1;if(!!r&&(o=p(i.hostProtocols,r)),o&&!n)throw new TypeError(\"Hostname cannot be empty, if protocol is \"+r);if(t&&t.match(i.invalid_hostname_characters)){if(!e)throw new TypeError('Hostname \"'+t+'\" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');if(e.toASCII(t).match(i.invalid_hostname_characters))throw new TypeError('Hostname \"'+t+'\" contains characters other than [A-Z0-9.-:_]')}},i.ensureValidPort=function(e){if(e){var t=Number(e);if(!(/^[0-9]+$/.test(t)&&t>0&&t<65536))throw new TypeError('Port \"'+e+'\" is not a valid port')}},i.noConflict=function(e){if(e){var t={URI:this.noConflict()};return n.URITemplate&&\"function\"==typeof n.URITemplate.noConflict&&(t.URITemplate=n.URITemplate.noConflict()),n.IPv6&&\"function\"==typeof n.IPv6.noConflict&&(t.IPv6=n.IPv6.noConflict()),n.SecondLevelDomains&&\"function\"==typeof n.SecondLevelDomains.noConflict&&(t.SecondLevelDomains=n.SecondLevelDomains.noConflict()),t}return n.URI===this&&(n.URI=o),this},a.build=function(e){return!0===e?this._deferred_build=!0:(void 0===e||this._deferred_build)&&(this._string=i.build(this._parts),this._deferred_build=!1),this},a.clone=function(){return new i(this)},a.valueOf=a.toString=function(){return this.build(!1)._string},a.protocol=S(\"protocol\"),a.username=S(\"username\"),a.password=S(\"password\"),a.hostname=S(\"hostname\"),a.port=S(\"port\"),a.query=E(\"query\",\"?\"),a.fragment=E(\"fragment\",\"#\"),a.search=function(e,t){var r=this.query(e,t);return\"string\"==typeof r&&r.length?\"?\"+r:r},a.hash=function(e,t){var r=this.fragment(e,t);return\"string\"==typeof r&&r.length?\"#\"+r:r},a.pathname=function(e,t){if(void 0===e||!0===e){var r=this._parts.path||(this._parts.hostname?\"/\":\"\");return e?(this._parts.urn?i.decodeUrnPath:i.decodePath)(r):r}return this._parts.urn?this._parts.path=e?i.recodeUrnPath(e):\"\":this._parts.path=e?i.recodePath(e):\"/\",this.build(!t),this},a.path=a.pathname,a.href=function(e,t){var r;if(void 0===e)return this.toString();this._string=\"\",this._parts=i._parts();var n=e instanceof i,o=\"object\"==typeof e&&(e.hostname||e.path||e.pathname);e.nodeName&&(e=e[i.getDomAttribute(e)]||\"\",o=!1);if(!n&&o&&void 0!==e.pathname&&(e=e.toString()),\"string\"==typeof e||e instanceof String)this._parts=i.parse(String(e),this._parts);else{if(!n&&!o)throw new TypeError(\"invalid input\");var a=n?e._parts:e;for(r in a)\"query\"!==r&&s.call(this._parts,r)&&(this._parts[r]=a[r]);a.query&&this.query(a.query,!1)}return this.build(!t),this},a.is=function(e){var t=!1,n=!1,o=!1,a=!1,s=!1,u=!1,c=!1,l=!this._parts.urn;switch(this._parts.hostname&&(l=!1,n=i.ip4_expression.test(this._parts.hostname),o=i.ip6_expression.test(this._parts.hostname),s=(a=!(t=n||o))&&r&&r.has(this._parts.hostname),u=a&&i.idn_expression.test(this._parts.hostname),c=a&&i.punycode_expression.test(this._parts.hostname)),e.toLowerCase()){case\"relative\":return l;case\"absolute\":return!l;case\"domain\":case\"name\":return a;case\"sld\":return s;case\"ip\":return t;case\"ip4\":case\"ipv4\":case\"inet4\":return n;case\"ip6\":case\"ipv6\":case\"inet6\":return o;case\"idn\":return u;case\"url\":return!this._parts.urn;case\"urn\":return!!this._parts.urn;case\"punycode\":return c}return null};var _=a.protocol,k=a.port,T=a.hostname;a.protocol=function(e,t){if(e&&!(e=e.replace(/:(\\/\\/)?$/,\"\")).match(i.protocol_expression))throw new TypeError('Protocol \"'+e+\"\\\" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]\");return _.call(this,e,t)},a.scheme=a.protocol,a.port=function(e,t){return this._parts.urn?void 0===e?\"\":this:(void 0!==e&&(0===e&&(e=null),e&&(\":\"===(e+=\"\").charAt(0)&&(e=e.substring(1)),i.ensureValidPort(e))),k.call(this,e,t))},a.hostname=function(e,t){if(this._parts.urn)return void 0===e?\"\":this;if(void 0!==e){var r={preventInvalidHostname:this._parts.preventInvalidHostname};if(\"/\"!==i.parseHost(e,r))throw new TypeError('Hostname \"'+e+'\" contains characters other than [A-Z0-9.-]');e=r.hostname,this._parts.preventInvalidHostname&&i.ensureValidHostname(e,this._parts.protocol)}return T.call(this,e,t)},a.origin=function(e,t){if(this._parts.urn)return void 0===e?\"\":this;if(void 0===e){var r=this.protocol();return this.authority()?(r?r+\"://\":\"\")+this.authority():\"\"}var n=i(e);return this.protocol(n.protocol()).authority(n.authority()).build(!t),this},a.host=function(e,t){if(this._parts.urn)return void 0===e?\"\":this;if(void 0===e)return this._parts.hostname?i.buildHost(this._parts):\"\";if(\"/\"!==i.parseHost(e,this._parts))throw new TypeError('Hostname \"'+e+'\" contains characters other than [A-Z0-9.-]');return this.build(!t),this},a.authority=function(e,t){if(this._parts.urn)return void 0===e?\"\":this;if(void 0===e)return this._parts.hostname?i.buildAuthority(this._parts):\"\";if(\"/\"!==i.parseAuthority(e,this._parts))throw new TypeError('Hostname \"'+e+'\" contains characters other than [A-Z0-9.-]');return this.build(!t),this},a.userinfo=function(e,t){if(this._parts.urn)return void 0===e?\"\":this;if(void 0===e){var r=i.buildUserinfo(this._parts);return r?r.substring(0,r.length-1):r}return\"@\"!==e[e.length-1]&&(e+=\"@\"),i.parseUserinfo(e,this._parts),this.build(!t),this},a.resource=function(e,t){var r;return void 0===e?this.path()+this.search()+this.hash():(r=i.parse(e),this._parts.path=r.path,this._parts.query=r.query,this._parts.fragment=r.fragment,this.build(!t),this)},a.subdomain=function(e,t){if(this._parts.urn)return void 0===e?\"\":this;if(void 0===e){if(!this._parts.hostname||this.is(\"IP\"))return\"\";var r=this._parts.hostname.length-this.domain().length-1;return this._parts.hostname.substring(0,r)||\"\"}var n=this._parts.hostname.length-this.domain().length,o=this._parts.hostname.substring(0,n),a=new RegExp(\"^\"+u(o));if(e&&\".\"!==e.charAt(e.length-1)&&(e+=\".\"),-1!==e.indexOf(\":\"))throw new TypeError(\"Domains cannot contain colons\");return e&&i.ensureValidHostname(e,this._parts.protocol),this._parts.hostname=this._parts.hostname.replace(a,e),this.build(!t),this},a.domain=function(e,t){if(this._parts.urn)return void 0===e?\"\":this;if(\"boolean\"==typeof e&&(t=e,e=void 0),void 0===e){if(!this._parts.hostname||this.is(\"IP\"))return\"\";var r=this._parts.hostname.match(/\\./g);if(r&&r.length<2)return this._parts.hostname;var n=this._parts.hostname.length-this.tld(t).length-1;return n=this._parts.hostname.lastIndexOf(\".\",n-1)+1,this._parts.hostname.substring(n)||\"\"}if(!e)throw new TypeError(\"cannot set domain empty\");if(-1!==e.indexOf(\":\"))throw new TypeError(\"Domains cannot contain colons\");if(i.ensureValidHostname(e,this._parts.protocol),!this._parts.hostname||this.is(\"IP\"))this._parts.hostname=e;else{var o=new RegExp(u(this.domain())+\"$\");this._parts.hostname=this._parts.hostname.replace(o,e)}return this.build(!t),this},a.tld=function(e,t){if(this._parts.urn)return void 0===e?\"\":this;if(\"boolean\"==typeof e&&(t=e,e=void 0),void 0===e){if(!this._parts.hostname||this.is(\"IP\"))return\"\";var n=this._parts.hostname.lastIndexOf(\".\"),o=this._parts.hostname.substring(n+1);return!0!==t&&r&&r.list[o.toLowerCase()]&&r.get(this._parts.hostname)||o}var i;if(!e)throw new TypeError(\"cannot set TLD empty\");if(e.match(/[^a-zA-Z0-9-]/)){if(!r||!r.is(e))throw new TypeError('TLD \"'+e+'\" contains characters other than [A-Z0-9]');i=new RegExp(u(this.tld())+\"$\"),this._parts.hostname=this._parts.hostname.replace(i,e)}else{if(!this._parts.hostname||this.is(\"IP\"))throw new ReferenceError(\"cannot set TLD on non-domain host\");i=new RegExp(u(this.tld())+\"$\"),this._parts.hostname=this._parts.hostname.replace(i,e)}return this.build(!t),this},a.directory=function(e,t){if(this._parts.urn)return void 0===e?\"\":this;if(void 0===e||!0===e){if(!this._parts.path&&!this._parts.hostname)return\"\";if(\"/\"===this._parts.path)return\"/\";var r=this._parts.path.length-this.filename().length-1,n=this._parts.path.substring(0,r)||(this._parts.hostname?\"/\":\"\");return e?i.decodePath(n):n}var o=this._parts.path.length-this.filename().length,a=this._parts.path.substring(0,o),s=new RegExp(\"^\"+u(a));return this.is(\"relative\")||(e||(e=\"/\"),\"/\"!==e.charAt(0)&&(e=\"/\"+e)),e&&\"/\"!==e.charAt(e.length-1)&&(e+=\"/\"),e=i.recodePath(e),this._parts.path=this._parts.path.replace(s,e),this.build(!t),this},a.filename=function(e,t){if(this._parts.urn)return void 0===e?\"\":this;if(\"string\"!=typeof e){if(!this._parts.path||\"/\"===this._parts.path)return\"\";var r=this._parts.path.lastIndexOf(\"/\"),n=this._parts.path.substring(r+1);return e?i.decodePathSegment(n):n}var o=!1;\"/\"===e.charAt(0)&&(e=e.substring(1)),e.match(/\\.?\\//)&&(o=!0);var a=new RegExp(u(this.filename())+\"$\");return e=i.recodePath(e),this._parts.path=this._parts.path.replace(a,e),o?this.normalizePath(t):this.build(!t),this},a.suffix=function(e,t){if(this._parts.urn)return void 0===e?\"\":this;if(void 0===e||!0===e){if(!this._parts.path||\"/\"===this._parts.path)return\"\";var r,n,o=this.filename(),a=o.lastIndexOf(\".\");return-1===a?\"\":(r=o.substring(a+1),n=/^[a-z0-9%]+$/i.test(r)?r:\"\",e?i.decodePathSegment(n):n)}\".\"===e.charAt(0)&&(e=e.substring(1));var s,c=this.suffix();if(c)s=e?new RegExp(u(c)+\"$\"):new RegExp(u(\".\"+c)+\"$\");else{if(!e)return this;this._parts.path+=\".\"+i.recodePath(e)}return s&&(e=i.recodePath(e),this._parts.path=this._parts.path.replace(s,e)),this.build(!t),this},a.segment=function(e,t,r){var n=this._parts.urn?\":\":\"/\",o=this.path(),i=\"/\"===o.substring(0,1),a=o.split(n);if(void 0!==e&&\"number\"!=typeof e&&(r=t,t=e,e=void 0),void 0!==e&&\"number\"!=typeof e)throw new Error('Bad segment \"'+e+'\", must be 0-based integer');if(i&&a.shift(),e<0&&(e=Math.max(a.length+e,0)),void 0===t)return void 0===e?a:a[e];if(null===e||void 0===a[e])if(l(t)){a=[];for(var s=0,u=t.length;s<u;s++)(t[s].length||a.length&&a[a.length-1].length)&&(a.length&&!a[a.length-1].length&&a.pop(),a.push(h(t[s])))}else(t||\"string\"==typeof t)&&(t=h(t),\"\"===a[a.length-1]?a[a.length-1]=t:a.push(t));else t?a[e]=h(t):a.splice(e,1);return i&&a.unshift(\"\"),this.path(a.join(n),r)},a.segmentCoded=function(e,t,r){var n,o,a;if(\"number\"!=typeof e&&(r=t,t=e,e=void 0),void 0===t){if(l(n=this.segment(e,t,r)))for(o=0,a=n.length;o<a;o++)n[o]=i.decode(n[o]);else n=void 0!==n?i.decode(n):void 0;return n}if(l(t))for(o=0,a=t.length;o<a;o++)t[o]=i.encode(t[o]);else t=\"string\"==typeof t||t instanceof String?i.encode(t):t;return this.segment(e,t,r)};var O=a.query;return a.query=function(e,t){if(!0===e)return i.parseQuery(this._parts.query,this._parts.escapeQuerySpace);if(\"function\"==typeof e){var r=i.parseQuery(this._parts.query,this._parts.escapeQuerySpace),n=e.call(this,r);return this._parts.query=i.buildQuery(n||r,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),this.build(!t),this}return void 0!==e&&\"string\"!=typeof e?(this._parts.query=i.buildQuery(e,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),this.build(!t),this):O.call(this,e,t)},a.setQuery=function(e,t,r){var n=i.parseQuery(this._parts.query,this._parts.escapeQuerySpace);if(\"string\"==typeof e||e instanceof String)n[e]=void 0!==t?t:null;else{if(\"object\"!=typeof e)throw new TypeError(\"URI.addQuery() accepts an object, string as the name parameter\");for(var o in e)s.call(e,o)&&(n[o]=e[o])}return this._parts.query=i.buildQuery(n,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),\"string\"!=typeof e&&(r=t),this.build(!r),this},a.addQuery=function(e,t,r){var n=i.parseQuery(this._parts.query,this._parts.escapeQuerySpace);return i.addQuery(n,e,void 0===t?null:t),this._parts.query=i.buildQuery(n,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),\"string\"!=typeof e&&(r=t),this.build(!r),this},a.removeQuery=function(e,t,r){var n=i.parseQuery(this._parts.query,this._parts.escapeQuerySpace);return i.removeQuery(n,e,t),this._parts.query=i.buildQuery(n,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),\"string\"!=typeof e&&(r=t),this.build(!r),this},a.hasQuery=function(e,t,r){var n=i.parseQuery(this._parts.query,this._parts.escapeQuerySpace);return i.hasQuery(n,e,t,r)},a.setSearch=a.setQuery,a.addSearch=a.addQuery,a.removeSearch=a.removeQuery,a.hasSearch=a.hasQuery,a.normalize=function(){return this._parts.urn?this.normalizeProtocol(!1).normalizePath(!1).normalizeQuery(!1).normalizeFragment(!1).build():this.normalizeProtocol(!1).normalizeHostname(!1).normalizePort(!1).normalizePath(!1).normalizeQuery(!1).normalizeFragment(!1).build()},a.normalizeProtocol=function(e){return\"string\"==typeof this._parts.protocol&&(this._parts.protocol=this._parts.protocol.toLowerCase(),this.build(!e)),this},a.normalizeHostname=function(r){return this._parts.hostname&&(this.is(\"IDN\")&&e?this._parts.hostname=e.toASCII(this._parts.hostname):this.is(\"IPv6\")&&t&&(this._parts.hostname=t.best(this._parts.hostname)),this._parts.hostname=this._parts.hostname.toLowerCase(),this.build(!r)),this},a.normalizePort=function(e){return\"string\"==typeof this._parts.protocol&&this._parts.port===i.defaultPorts[this._parts.protocol]&&(this._parts.port=null,this.build(!e)),this},a.normalizePath=function(e){var t,r=this._parts.path;if(!r)return this;if(this._parts.urn)return this._parts.path=i.recodeUrnPath(this._parts.path),this.build(!e),this;if(\"/\"===this._parts.path)return this;var n,o,a=\"\";for(\"/\"!==(r=i.recodePath(r)).charAt(0)&&(t=!0,r=\"/\"+r),\"/..\"!==r.slice(-3)&&\"/.\"!==r.slice(-2)||(r+=\"/\"),r=r.replace(/(\\/(\\.\\/)+)|(\\/\\.$)/g,\"/\").replace(/\\/{2,}/g,\"/\"),t&&(a=r.substring(1).match(/^(\\.\\.\\/)+/)||\"\")&&(a=a[0]);-1!==(n=r.search(/\\/\\.\\.(\\/|$)/));)0!==n?(-1===(o=r.substring(0,n).lastIndexOf(\"/\"))&&(o=n),r=r.substring(0,o)+r.substring(n+3)):r=r.substring(3);return t&&this.is(\"relative\")&&(r=a+r.substring(1)),this._parts.path=r,this.build(!e),this},a.normalizePathname=a.normalizePath,a.normalizeQuery=function(e){return\"string\"==typeof this._parts.query&&(this._parts.query.length?this.query(i.parseQuery(this._parts.query,this._parts.escapeQuerySpace)):this._parts.query=null,this.build(!e)),this},a.normalizeFragment=function(e){return this._parts.fragment||(this._parts.fragment=null,this.build(!e)),this},a.normalizeSearch=a.normalizeQuery,a.normalizeHash=a.normalizeFragment,a.iso8859=function(){var e=i.encode,t=i.decode;i.encode=escape,i.decode=decodeURIComponent;try{this.normalize()}finally{i.encode=e,i.decode=t}return this},a.unicode=function(){var e=i.encode,t=i.decode;i.encode=m,i.decode=unescape;try{this.normalize()}finally{i.encode=e,i.decode=t}return this},a.readable=function(){var t=this.clone();t.username(\"\").password(\"\").normalize();var r=\"\";if(t._parts.protocol&&(r+=t._parts.protocol+\"://\"),t._parts.hostname&&(t.is(\"punycode\")&&e?(r+=e.toUnicode(t._parts.hostname),t._parts.port&&(r+=\":\"+t._parts.port)):r+=t.host()),t._parts.hostname&&t._parts.path&&\"/\"!==t._parts.path.charAt(0)&&(r+=\"/\"),r+=t.path(!0),t._parts.query){for(var n=\"\",o=0,a=t._parts.query.split(\"&\"),s=a.length;o<s;o++){var u=(a[o]||\"\").split(\"=\");n+=\"&\"+i.decodeQuery(u[0],this._parts.escapeQuerySpace).replace(/&/g,\"%26\"),void 0!==u[1]&&(n+=\"=\"+i.decodeQuery(u[1],this._parts.escapeQuerySpace).replace(/&/g,\"%26\"))}r+=\"?\"+n.substring(1)}return r+=i.decodeQuery(t.hash(),!0)},a.absoluteTo=function(e){var t,r,n,o=this.clone(),a=[\"protocol\",\"username\",\"password\",\"hostname\",\"port\"];if(this._parts.urn)throw new Error(\"URNs do not have any generally defined hierarchical components\");if(e instanceof i||(e=new i(e)),o._parts.protocol)return o;if(o._parts.protocol=e._parts.protocol,this._parts.hostname)return o;for(r=0;n=a[r];r++)o._parts[n]=e._parts[n];return o._parts.path?(\"..\"===o._parts.path.substring(-2)&&(o._parts.path+=\"/\"),\"/\"!==o.path().charAt(0)&&(t=(t=e.directory())||(0===e.path().indexOf(\"/\")?\"/\":\"\"),o._parts.path=(t?t+\"/\":\"\")+o._parts.path,o.normalizePath())):(o._parts.path=e._parts.path,o._parts.query||(o._parts.query=e._parts.query)),o.build(),o},a.relativeTo=function(e){var t,r,n,o,a,s=this.clone().normalize();if(s._parts.urn)throw new Error(\"URNs do not have any generally defined hierarchical components\");if(e=new i(e).normalize(),t=s._parts,r=e._parts,o=s.path(),a=e.path(),\"/\"!==o.charAt(0))throw new Error(\"URI is already relative\");if(\"/\"!==a.charAt(0))throw new Error(\"Cannot calculate a URI relative to another relative URI\");if(t.protocol===r.protocol&&(t.protocol=null),t.username!==r.username||t.password!==r.password)return s.build();if(null!==t.protocol||null!==t.username||null!==t.password)return s.build();if(t.hostname!==r.hostname||t.port!==r.port)return s.build();if(t.hostname=null,t.port=null,o===a)return t.path=\"\",s.build();if(!(n=i.commonPath(o,a)))return s.build();var u=r.path.substring(n.length).replace(/[^\\/]*$/,\"\").replace(/.*?\\//g,\"../\");return t.path=u+t.path.substring(n.length)||\"./\",s.build()},a.equals=function(e){var t,r,n,o,a,u=this.clone(),c=new i(e),f={};if(u.normalize(),c.normalize(),u.toString()===c.toString())return!0;if(n=u.query(),o=c.query(),u.query(\"\"),c.query(\"\"),u.toString()!==c.toString())return!1;if(n.length!==o.length)return!1;for(a in t=i.parseQuery(n,this._parts.escapeQuerySpace),r=i.parseQuery(o,this._parts.escapeQuerySpace),t)if(s.call(t,a)){if(l(t[a])){if(!d(t[a],r[a]))return!1}else if(t[a]!==r[a])return!1;f[a]=!0}for(a in r)if(s.call(r,a)&&!f[a])return!1;return!0},a.preventInvalidHostname=function(e){return this._parts.preventInvalidHostname=!!e,this},a.duplicateQueryParameters=function(e){return this._parts.duplicateQueryParameters=!!e,this},a.escapeQuerySpace=function(e){return this._parts.escapeQuerySpace=!!e,this},i}))},9127:function(e,t,r){var n,o,i;!function(a,s){\"use strict\";e.exports?e.exports=s(r(4193)):(o=[r(4193)],void 0===(i=\"function\"==typeof(n=s)?n.apply(t,o):n)||(e.exports=i))}(0,(function(e,t){\"use strict\";var r=t&&t.URITemplate,n=Object.prototype.hasOwnProperty;function o(e){return o._cache[e]?o._cache[e]:this instanceof o?(this.expression=e,o._cache[e]=this,this):new o(e)}function i(e){this.data=e,this.cache={}}var a=o.prototype,s={\"\":{prefix:\"\",separator:\",\",named:!1,empty_name_separator:!1,encode:\"encode\"},\"+\":{prefix:\"\",separator:\",\",named:!1,empty_name_separator:!1,encode:\"encodeReserved\"},\"#\":{prefix:\"#\",separator:\",\",named:!1,empty_name_separator:!1,encode:\"encodeReserved\"},\".\":{prefix:\".\",separator:\".\",named:!1,empty_name_separator:!1,encode:\"encode\"},\"/\":{prefix:\"/\",separator:\"/\",named:!1,empty_name_separator:!1,encode:\"encode\"},\";\":{prefix:\";\",separator:\";\",named:!0,empty_name_separator:!1,encode:\"encode\"},\"?\":{prefix:\"?\",separator:\"&\",named:!0,empty_name_separator:!0,encode:\"encode\"},\"&\":{prefix:\"&\",separator:\"&\",named:!0,empty_name_separator:!0,encode:\"encode\"}};return o._cache={},o.EXPRESSION_PATTERN=/\\{([^a-zA-Z0-9%_]?)([^\\}]+)(\\}|$)/g,o.VARIABLE_PATTERN=/^([^*:.](?:\\.?[^*:.])*)((\\*)|:(\\d+))?$/,o.VARIABLE_NAME_PATTERN=/[^a-zA-Z0-9%_.]/,o.LITERAL_PATTERN=/[<>{}\"`^| \\\\]/,o.expand=function(e,t,r){var n,i,a,u=s[e.operator],c=u.named?\"Named\":\"Unnamed\",l=e.variables,f=[];for(a=0;i=l[a];a++){if(0===(n=t.get(i.name)).type&&r&&r.strict)throw new Error('Missing expansion value for variable \"'+i.name+'\"');if(n.val.length){if(n.type>1&&i.maxlength)throw new Error('Invalid expression: Prefix modifier not applicable to variable \"'+i.name+'\"');f.push(o[\"expand\"+c](n,u,i.explode,i.explode&&u.separator||\",\",i.maxlength,i.name))}else n.type&&f.push(\"\")}return f.length?u.prefix+f.join(u.separator):\"\"},o.expandNamed=function(t,r,n,o,i,a){var s,u,c,l=\"\",f=r.encode,p=r.empty_name_separator,d=!t[f].length,h=2===t.type?\"\":e[f](a);for(u=0,c=t.val.length;u<c;u++)i?(s=e[f](t.val[u][1].substring(0,i)),2===t.type&&(h=e[f](t.val[u][0].substring(0,i)))):d?(s=e[f](t.val[u][1]),2===t.type?(h=e[f](t.val[u][0]),t[f].push([h,s])):t[f].push([void 0,s])):(s=t[f][u][1],2===t.type&&(h=t[f][u][0])),l&&(l+=o),n?l+=h+(p||s?\"=\":\"\")+s:(u||(l+=e[f](a)+(p||s?\"=\":\"\")),2===t.type&&(l+=h+\",\"),l+=s);return l},o.expandUnnamed=function(t,r,n,o,i){var a,s,u,c=\"\",l=r.encode,f=r.empty_name_separator,p=!t[l].length;for(s=0,u=t.val.length;s<u;s++)i?a=e[l](t.val[s][1].substring(0,i)):p?(a=e[l](t.val[s][1]),t[l].push([2===t.type?e[l](t.val[s][0]):void 0,a])):a=t[l][s][1],c&&(c+=o),2===t.type&&(c+=i?e[l](t.val[s][0].substring(0,i)):t[l][s][0],c+=n?f||a?\"=\":\"\":\",\"),c+=a;return c},o.noConflict=function(){return t.URITemplate===o&&(t.URITemplate=r),o},a.expand=function(e,t){var r=\"\";this.parts&&this.parts.length||this.parse(),e instanceof i||(e=new i(e));for(var n=0,a=this.parts.length;n<a;n++)r+=\"string\"==typeof this.parts[n]?this.parts[n]:o.expand(this.parts[n],e,t);return r},a.parse=function(){var e,t,r,n=this.expression,i=o.EXPRESSION_PATTERN,a=o.VARIABLE_PATTERN,u=o.VARIABLE_NAME_PATTERN,c=o.LITERAL_PATTERN,l=[],f=0,p=function(e){if(e.match(c))throw new Error('Invalid Literal \"'+e+'\"');return e};for(i.lastIndex=0;;){if(null===(t=i.exec(n))){l.push(p(n.substring(f)));break}if(l.push(p(n.substring(f,t.index))),f=t.index+t[0].length,!s[t[1]])throw new Error('Unknown Operator \"'+t[1]+'\" in \"'+t[0]+'\"');if(!t[3])throw new Error('Unclosed Expression \"'+t[0]+'\"');for(var d=0,h=(e=t[2].split(\",\")).length;d<h;d++){if(null===(r=e[d].match(a)))throw new Error('Invalid Variable \"'+e[d]+'\" in \"'+t[0]+'\"');if(r[1].match(u))throw new Error('Invalid Variable Name \"'+r[1]+'\" in \"'+t[0]+'\"');e[d]={name:r[1],explode:!!r[3],maxlength:r[4]&&parseInt(r[4],10)}}if(!e.length)throw new Error('Expression Missing Variable(s) \"'+t[0]+'\"');l.push({expression:t[0],operator:t[1],variables:e})}return l.length||l.push(p(n)),this.parts=l,this},i.prototype.get=function(e){var t,r,o,i=this.data,a={type:0,val:[],encode:[],encodeReserved:[]};if(void 0!==this.cache[e])return this.cache[e];if(this.cache[e]=a,null==(o=\"[object Function]\"===String(Object.prototype.toString.call(i))?i(e):\"[object Function]\"===String(Object.prototype.toString.call(i[e]))?i[e](e):i[e]))return a;if(\"[object Array]\"===String(Object.prototype.toString.call(o))){for(t=0,r=o.length;t<r;t++)void 0!==o[t]&&null!==o[t]&&a.val.push([void 0,String(o[t])]);a.val.length&&(a.type=3)}else if(\"[object Object]\"===String(Object.prototype.toString.call(o))){for(t in o)n.call(o,t)&&void 0!==o[t]&&null!==o[t]&&a.val.push([t,String(o[t])]);a.val.length&&(a.type=2)}else a.type=1,a.val.push([void 0,String(o)]);return a},e.expand=function(t,r){var n=new o(t).expand(r);return new e(n)},o}))},9340:function(e,t,r){var n;e=r.nmd(e),function(){t&&t.nodeType,e&&e.nodeType;var o=\"object\"==typeof r.g&&r.g;o.global!==o&&o.window!==o&&o.self;var i,a=2147483647,s=36,u=/^xn--/,c=/[^\\x20-\\x7E]/,l=/[\\x2E\\u3002\\uFF0E\\uFF61]/g,f={overflow:\"Overflow: input needs wider integers to process\",\"not-basic\":\"Illegal input >= 0x80 (not a basic code point)\",\"invalid-input\":\"Invalid input\"},p=Math.floor,d=String.fromCharCode;function h(e){throw new RangeError(f[e])}function y(e,t){for(var r=e.length,n=[];r--;)n[r]=t(e[r]);return n}function m(e,t){var r=e.split(\"@\"),n=\"\";return r.length>1&&(n=r[0]+\"@\",e=r[1]),n+y((e=e.replace(l,\".\")).split(\".\"),t).join(\".\")}function v(e){for(var t,r,n=[],o=0,i=e.length;o<i;)(t=e.charCodeAt(o++))>=55296&&t<=56319&&o<i?56320==(64512&(r=e.charCodeAt(o++)))?n.push(((1023&t)<<10)+(1023&r)+65536):(n.push(t),o--):n.push(t);return n}function g(e){return y(e,(function(e){var t=\"\";return e>65535&&(t+=d((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+=d(e)})).join(\"\")}function b(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function w(e,t,r){var n=0;for(e=r?p(e/700):e>>1,e+=p(e/t);e>455;n+=s)e=p(e/35);return p(n+36*e/(e+38))}function S(e){var t,r,n,o,i,u,c,l,f,d,y,m=[],v=e.length,b=0,S=128,E=72;for((r=e.lastIndexOf(\"-\"))<0&&(r=0),n=0;n<r;++n)e.charCodeAt(n)>=128&&h(\"not-basic\"),m.push(e.charCodeAt(n));for(o=r>0?r+1:0;o<v;){for(i=b,u=1,c=s;o>=v&&h(\"invalid-input\"),((l=(y=e.charCodeAt(o++))-48<10?y-22:y-65<26?y-65:y-97<26?y-97:s)>=s||l>p((a-b)/u))&&h(\"overflow\"),b+=l*u,!(l<(f=c<=E?1:c>=E+26?26:c-E));c+=s)u>p(a/(d=s-f))&&h(\"overflow\"),u*=d;E=w(b-i,t=m.length+1,0==i),p(b/t)>a-S&&h(\"overflow\"),S+=p(b/t),b%=t,m.splice(b++,0,S)}return g(m)}function E(e){var t,r,n,o,i,u,c,l,f,y,m,g,S,E,_,k=[];for(g=(e=v(e)).length,t=128,r=0,i=72,u=0;u<g;++u)(m=e[u])<128&&k.push(d(m));for(n=o=k.length,o&&k.push(\"-\");n<g;){for(c=a,u=0;u<g;++u)(m=e[u])>=t&&m<c&&(c=m);for(c-t>p((a-r)/(S=n+1))&&h(\"overflow\"),r+=(c-t)*S,t=c,u=0;u<g;++u)if((m=e[u])<t&&++r>a&&h(\"overflow\"),m==t){for(l=r,f=s;!(l<(y=f<=i?1:f>=i+26?26:f-i));f+=s)_=l-y,E=s-y,k.push(d(b(y+_%E,0))),l=p(_/E);k.push(d(b(l,0))),i=w(r,S,n==o),r=0,++n}++r,++t}return k.join(\"\")}i={version:\"1.3.2\",ucs2:{decode:v,encode:g},decode:S,encode:E,toASCII:function(e){return m(e,(function(e){return c.test(e)?\"xn--\"+E(e):e}))},toUnicode:function(e){return m(e,(function(e){return u.test(e)?S(e.slice(4).toLowerCase()):e}))}},void 0===(n=function(){return i}.call(t,r,t,e))||(e.exports=n)}()},1270:function(e,t,r){var n;e=r.nmd(e),function(){t&&t.nodeType,e&&e.nodeType;var o=\"object\"==typeof r.g&&r.g;o.global!==o&&o.window!==o&&o.self;var i,a=2147483647,s=36,u=/^xn--/,c=/[^\\x20-\\x7E]/,l=/[\\x2E\\u3002\\uFF0E\\uFF61]/g,f={overflow:\"Overflow: input needs wider integers to process\",\"not-basic\":\"Illegal input >= 0x80 (not a basic code point)\",\"invalid-input\":\"Invalid input\"},p=Math.floor,d=String.fromCharCode;function h(e){throw new RangeError(f[e])}function y(e,t){for(var r=e.length,n=[];r--;)n[r]=t(e[r]);return n}function m(e,t){var r=e.split(\"@\"),n=\"\";return r.length>1&&(n=r[0]+\"@\",e=r[1]),n+y((e=e.replace(l,\".\")).split(\".\"),t).join(\".\")}function v(e){for(var t,r,n=[],o=0,i=e.length;o<i;)(t=e.charCodeAt(o++))>=55296&&t<=56319&&o<i?56320==(64512&(r=e.charCodeAt(o++)))?n.push(((1023&t)<<10)+(1023&r)+65536):(n.push(t),o--):n.push(t);return n}function g(e){return y(e,(function(e){var t=\"\";return e>65535&&(t+=d((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+=d(e)})).join(\"\")}function b(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function w(e,t,r){var n=0;for(e=r?p(e/700):e>>1,e+=p(e/t);e>455;n+=s)e=p(e/35);return p(n+36*e/(e+38))}function S(e){var t,r,n,o,i,u,c,l,f,d,y,m=[],v=e.length,b=0,S=128,E=72;for((r=e.lastIndexOf(\"-\"))<0&&(r=0),n=0;n<r;++n)e.charCodeAt(n)>=128&&h(\"not-basic\"),m.push(e.charCodeAt(n));for(o=r>0?r+1:0;o<v;){for(i=b,u=1,c=s;o>=v&&h(\"invalid-input\"),((l=(y=e.charCodeAt(o++))-48<10?y-22:y-65<26?y-65:y-97<26?y-97:s)>=s||l>p((a-b)/u))&&h(\"overflow\"),b+=l*u,!(l<(f=c<=E?1:c>=E+26?26:c-E));c+=s)u>p(a/(d=s-f))&&h(\"overflow\"),u*=d;E=w(b-i,t=m.length+1,0==i),p(b/t)>a-S&&h(\"overflow\"),S+=p(b/t),b%=t,m.splice(b++,0,S)}return g(m)}function E(e){var t,r,n,o,i,u,c,l,f,y,m,g,S,E,_,k=[];for(g=(e=v(e)).length,t=128,r=0,i=72,u=0;u<g;++u)(m=e[u])<128&&k.push(d(m));for(n=o=k.length,o&&k.push(\"-\");n<g;){for(c=a,u=0;u<g;++u)(m=e[u])>=t&&m<c&&(c=m);for(c-t>p((a-r)/(S=n+1))&&h(\"overflow\"),r+=(c-t)*S,t=c,u=0;u<g;++u)if((m=e[u])<t&&++r>a&&h(\"overflow\"),m==t){for(l=r,f=s;!(l<(y=f<=i?1:f>=i+26?26:f-i));f+=s)_=l-y,E=s-y,k.push(d(b(y+_%E,0))),l=p(_/E);k.push(d(b(l,0))),i=w(r,S,n==o),r=0,++n}++r,++t}return k.join(\"\")}i={version:\"1.4.1\",ucs2:{decode:v,encode:g},decode:S,encode:E,toASCII:function(e){return m(e,(function(e){return c.test(e)?\"xn--\"+E(e):e}))},toUnicode:function(e){return m(e,(function(e){return u.test(e)?S(e.slice(4).toLowerCase()):e}))}},void 0===(n=function(){return i}.call(t,r,t,e))||(e.exports=n)}()},8835:(e,t,r)=>{\"use strict\";var n=r(1270);function o(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}var i=/^([a-z0-9.+-]+:)/i,a=/:[0-9]*$/,s=/^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,u=[\"{\",\"}\",\"|\",\"\\\\\",\"^\",\"`\"].concat([\"<\",\">\",'\"',\"`\",\" \",\"\\r\",\"\\n\",\"\\t\"]),c=[\"'\"].concat(u),l=[\"%\",\"/\",\"?\",\";\",\"#\"].concat(c),f=[\"/\",\"?\",\"#\"],p=/^[+a-z0-9A-Z_-]{0,63}$/,d=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,h={javascript:!0,\"javascript:\":!0},y={javascript:!0,\"javascript:\":!0},m={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,\"http:\":!0,\"https:\":!0,\"ftp:\":!0,\"gopher:\":!0,\"file:\":!0},v=r(5373);function g(e,t,r){if(e&&\"object\"==typeof e&&e instanceof o)return e;var n=new o;return n.parse(e,t,r),n}o.prototype.parse=function(e,t,r){if(\"string\"!=typeof e)throw new TypeError(\"Parameter 'url' must be a string, not \"+typeof e);var o=e.indexOf(\"?\"),a=-1!==o&&o<e.indexOf(\"#\")?\"?\":\"#\",u=e.split(a);u[0]=u[0].replace(/\\\\/g,\"/\");var g=e=u.join(a);if(g=g.trim(),!r&&1===e.split(\"#\").length){var b=s.exec(g);if(b)return this.path=g,this.href=g,this.pathname=b[1],b[2]?(this.search=b[2],this.query=t?v.parse(this.search.substr(1)):this.search.substr(1)):t&&(this.search=\"\",this.query={}),this}var w=i.exec(g);if(w){var S=(w=w[0]).toLowerCase();this.protocol=S,g=g.substr(w.length)}if(r||w||g.match(/^\\/\\/[^@/]+@[^@/]+/)){var E=\"//\"===g.substr(0,2);!E||w&&y[w]||(g=g.substr(2),this.slashes=!0)}if(!y[w]&&(E||w&&!m[w])){for(var _,k,T=-1,O=0;O<f.length;O++){-1!==(x=g.indexOf(f[O]))&&(-1===T||x<T)&&(T=x)}-1!==(k=-1===T?g.lastIndexOf(\"@\"):g.lastIndexOf(\"@\",T))&&(_=g.slice(0,k),g=g.slice(k+1),this.auth=decodeURIComponent(_)),T=-1;for(O=0;O<l.length;O++){var x;-1!==(x=g.indexOf(l[O]))&&(-1===T||x<T)&&(T=x)}-1===T&&(T=g.length),this.host=g.slice(0,T),g=g.slice(T),this.parseHost(),this.hostname=this.hostname||\"\";var A=\"[\"===this.hostname[0]&&\"]\"===this.hostname[this.hostname.length-1];if(!A)for(var P=this.hostname.split(/\\./),R=(O=0,P.length);O<R;O++){var j=P[O];if(j&&!j.match(p)){for(var C=\"\",I=0,L=j.length;I<L;I++)j.charCodeAt(I)>127?C+=\"x\":C+=j[I];if(!C.match(p)){var B=P.slice(0,O),N=P.slice(O+1),U=j.match(d);U&&(B.push(U[1]),N.unshift(U[2])),N.length&&(g=\"/\"+N.join(\".\")+g),this.hostname=B.join(\".\");break}}}this.hostname.length>255?this.hostname=\"\":this.hostname=this.hostname.toLowerCase(),A||(this.hostname=n.toASCII(this.hostname));var M=this.port?\":\"+this.port:\"\",D=this.hostname||\"\";this.host=D+M,this.href+=this.host,A&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),\"/\"!==g[0]&&(g=\"/\"+g))}if(!h[S])for(O=0,R=c.length;O<R;O++){var F=c[O];if(-1!==g.indexOf(F)){var V=encodeURIComponent(F);V===F&&(V=escape(F)),g=g.split(F).join(V)}}var q=g.indexOf(\"#\");-1!==q&&(this.hash=g.substr(q),g=g.slice(0,q));var K=g.indexOf(\"?\");if(-1!==K?(this.search=g.substr(K),this.query=g.substr(K+1),t&&(this.query=v.parse(this.query)),g=g.slice(0,K)):t&&(this.search=\"\",this.query={}),g&&(this.pathname=g),m[S]&&this.hostname&&!this.pathname&&(this.pathname=\"/\"),this.pathname||this.search){M=this.pathname||\"\";var H=this.search||\"\";this.path=M+H}return this.href=this.format(),this},o.prototype.format=function(){var e=this.auth||\"\";e&&(e=(e=encodeURIComponent(e)).replace(/%3A/i,\":\"),e+=\"@\");var t=this.protocol||\"\",r=this.pathname||\"\",n=this.hash||\"\",o=!1,i=\"\";this.host?o=e+this.host:this.hostname&&(o=e+(-1===this.hostname.indexOf(\":\")?this.hostname:\"[\"+this.hostname+\"]\"),this.port&&(o+=\":\"+this.port)),this.query&&\"object\"==typeof this.query&&Object.keys(this.query).length&&(i=v.stringify(this.query,{arrayFormat:\"repeat\",addQueryPrefix:!1}));var a=this.search||i&&\"?\"+i||\"\";return t&&\":\"!==t.substr(-1)&&(t+=\":\"),this.slashes||(!t||m[t])&&!1!==o?(o=\"//\"+(o||\"\"),r&&\"/\"!==r.charAt(0)&&(r=\"/\"+r)):o||(o=\"\"),n&&\"#\"!==n.charAt(0)&&(n=\"#\"+n),a&&\"?\"!==a.charAt(0)&&(a=\"?\"+a),t+o+(r=r.replace(/[?#]/g,(function(e){return encodeURIComponent(e)})))+(a=a.replace(\"#\",\"%23\"))+n},o.prototype.resolve=function(e){return this.resolveObject(g(e,!1,!0)).format()},o.prototype.resolveObject=function(e){if(\"string\"==typeof e){var t=new o;t.parse(e,!1,!0),e=t}for(var r=new o,n=Object.keys(this),i=0;i<n.length;i++){var a=n[i];r[a]=this[a]}if(r.hash=e.hash,\"\"===e.href)return r.href=r.format(),r;if(e.slashes&&!e.protocol){for(var s=Object.keys(e),u=0;u<s.length;u++){var c=s[u];\"protocol\"!==c&&(r[c]=e[c])}return m[r.protocol]&&r.hostname&&!r.pathname&&(r.pathname=\"/\",r.path=r.pathname),r.href=r.format(),r}if(e.protocol&&e.protocol!==r.protocol){if(!m[e.protocol]){for(var l=Object.keys(e),f=0;f<l.length;f++){var p=l[f];r[p]=e[p]}return r.href=r.format(),r}if(r.protocol=e.protocol,e.host||y[e.protocol])r.pathname=e.pathname;else{for(var d=(e.pathname||\"\").split(\"/\");d.length&&!(e.host=d.shift()););e.host||(e.host=\"\"),e.hostname||(e.hostname=\"\"),\"\"!==d[0]&&d.unshift(\"\"),d.length<2&&d.unshift(\"\"),r.pathname=d.join(\"/\")}if(r.search=e.search,r.query=e.query,r.host=e.host||\"\",r.auth=e.auth,r.hostname=e.hostname||e.host,r.port=e.port,r.pathname||r.search){var h=r.pathname||\"\",v=r.search||\"\";r.path=h+v}return r.slashes=r.slashes||e.slashes,r.href=r.format(),r}var g=r.pathname&&\"/\"===r.pathname.charAt(0),b=e.host||e.pathname&&\"/\"===e.pathname.charAt(0),w=b||g||r.host&&e.pathname,S=w,E=r.pathname&&r.pathname.split(\"/\")||[],_=(d=e.pathname&&e.pathname.split(\"/\")||[],r.protocol&&!m[r.protocol]);if(_&&(r.hostname=\"\",r.port=null,r.host&&(\"\"===E[0]?E[0]=r.host:E.unshift(r.host)),r.host=\"\",e.protocol&&(e.hostname=null,e.port=null,e.host&&(\"\"===d[0]?d[0]=e.host:d.unshift(e.host)),e.host=null),w=w&&(\"\"===d[0]||\"\"===E[0])),b)r.host=e.host||\"\"===e.host?e.host:r.host,r.hostname=e.hostname||\"\"===e.hostname?e.hostname:r.hostname,r.search=e.search,r.query=e.query,E=d;else if(d.length)E||(E=[]),E.pop(),E=E.concat(d),r.search=e.search,r.query=e.query;else if(null!=e.search){if(_)r.host=E.shift(),r.hostname=r.host,(A=!!(r.host&&r.host.indexOf(\"@\")>0)&&r.host.split(\"@\"))&&(r.auth=A.shift(),r.hostname=A.shift(),r.host=r.hostname);return r.search=e.search,r.query=e.query,null===r.pathname&&null===r.search||(r.path=(r.pathname?r.pathname:\"\")+(r.search?r.search:\"\")),r.href=r.format(),r}if(!E.length)return r.pathname=null,r.search?r.path=\"/\"+r.search:r.path=null,r.href=r.format(),r;for(var k=E.slice(-1)[0],T=(r.host||e.host||E.length>1)&&(\".\"===k||\"..\"===k)||\"\"===k,O=0,x=E.length;x>=0;x--)\".\"===(k=E[x])?E.splice(x,1):\"..\"===k?(E.splice(x,1),O++):O&&(E.splice(x,1),O--);if(!w&&!S)for(;O--;O)E.unshift(\"..\");!w||\"\"===E[0]||E[0]&&\"/\"===E[0].charAt(0)||E.unshift(\"\"),T&&\"/\"!==E.join(\"/\").substr(-1)&&E.push(\"\");var A,P=\"\"===E[0]||E[0]&&\"/\"===E[0].charAt(0);_&&(r.hostname=P?\"\":E.length?E.shift():\"\",r.host=r.hostname,(A=!!(r.host&&r.host.indexOf(\"@\")>0)&&r.host.split(\"@\"))&&(r.auth=A.shift(),r.hostname=A.shift(),r.host=r.hostname));return(w=w||r.host&&E.length)&&!P&&E.unshift(\"\"),E.length>0?r.pathname=E.join(\"/\"):(r.pathname=null,r.path=null),null===r.pathname&&null===r.search||(r.path=(r.pathname?r.pathname:\"\")+(r.search?r.search:\"\")),r.auth=e.auth||r.auth,r.slashes=r.slashes||e.slashes,r.href=r.format(),r},o.prototype.parseHost=function(){var e=this.host,t=a.exec(e);t&&(\":\"!==(t=t[0])&&(this.port=t.substr(1)),e=e.substr(0,e.length-t.length)),e&&(this.hostname=e)},t.parse=g,t.resolve=function(e,t){return g(e,!1,!0).resolve(t)},t.resolveObject=function(e,t){return e?g(e,!1,!0).resolveObject(t):t},t.format=function(e){return\"string\"==typeof e&&(e=g(e)),e instanceof o?e.format():o.prototype.format.call(e)},t.Url=o},4643:(e,t,r)=>{function n(e){try{if(!r.g.localStorage)return!1}catch(e){return!1}var t=r.g.localStorage[e];return null!=t&&\"true\"===String(t).toLowerCase()}e.exports=function(e,t){if(n(\"noDeprecation\"))return e;var r=!1;return function(){if(!r){if(n(\"throwDeprecation\"))throw new Error(t);n(\"traceDeprecation\")?console.trace(t):console.warn(t),r=!0}return e.apply(this,arguments)}}},1135:e=>{e.exports=function(e){return e&&\"object\"==typeof e&&\"function\"==typeof e.copy&&\"function\"==typeof e.fill&&\"function\"==typeof e.readUInt8}},9032:(e,t,r)=>{\"use strict\";var n=r(7244),o=r(8184),i=r(5767),a=r(5680);function s(e){return e.call.bind(e)}var u=\"undefined\"!=typeof BigInt,c=\"undefined\"!=typeof Symbol,l=s(Object.prototype.toString),f=s(Number.prototype.valueOf),p=s(String.prototype.valueOf),d=s(Boolean.prototype.valueOf);if(u)var h=s(BigInt.prototype.valueOf);if(c)var y=s(Symbol.prototype.valueOf);function m(e,t){if(\"object\"!=typeof e)return!1;try{return t(e),!0}catch(e){return!1}}function v(e){return\"[object Map]\"===l(e)}function g(e){return\"[object Set]\"===l(e)}function b(e){return\"[object WeakMap]\"===l(e)}function w(e){return\"[object WeakSet]\"===l(e)}function S(e){return\"[object ArrayBuffer]\"===l(e)}function E(e){return\"undefined\"!=typeof ArrayBuffer&&(S.working?S(e):e instanceof ArrayBuffer)}function _(e){return\"[object DataView]\"===l(e)}function k(e){return\"undefined\"!=typeof DataView&&(_.working?_(e):e instanceof DataView)}t.isArgumentsObject=n,t.isGeneratorFunction=o,t.isTypedArray=a,t.isPromise=function(e){return\"undefined\"!=typeof Promise&&e instanceof Promise||null!==e&&\"object\"==typeof e&&\"function\"==typeof e.then&&\"function\"==typeof e.catch},t.isArrayBufferView=function(e){return\"undefined\"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):a(e)||k(e)},t.isUint8Array=function(e){return\"Uint8Array\"===i(e)},t.isUint8ClampedArray=function(e){return\"Uint8ClampedArray\"===i(e)},t.isUint16Array=function(e){return\"Uint16Array\"===i(e)},t.isUint32Array=function(e){return\"Uint32Array\"===i(e)},t.isInt8Array=function(e){return\"Int8Array\"===i(e)},t.isInt16Array=function(e){return\"Int16Array\"===i(e)},t.isInt32Array=function(e){return\"Int32Array\"===i(e)},t.isFloat32Array=function(e){return\"Float32Array\"===i(e)},t.isFloat64Array=function(e){return\"Float64Array\"===i(e)},t.isBigInt64Array=function(e){return\"BigInt64Array\"===i(e)},t.isBigUint64Array=function(e){return\"BigUint64Array\"===i(e)},v.working=\"undefined\"!=typeof Map&&v(new Map),t.isMap=function(e){return\"undefined\"!=typeof Map&&(v.working?v(e):e instanceof Map)},g.working=\"undefined\"!=typeof Set&&g(new Set),t.isSet=function(e){return\"undefined\"!=typeof Set&&(g.working?g(e):e instanceof Set)},b.working=\"undefined\"!=typeof WeakMap&&b(new WeakMap),t.isWeakMap=function(e){return\"undefined\"!=typeof WeakMap&&(b.working?b(e):e instanceof WeakMap)},w.working=\"undefined\"!=typeof WeakSet&&w(new WeakSet),t.isWeakSet=function(e){return w(e)},S.working=\"undefined\"!=typeof ArrayBuffer&&S(new ArrayBuffer),t.isArrayBuffer=E,_.working=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof DataView&&_(new DataView(new ArrayBuffer(1),0,1)),t.isDataView=k;var T=\"undefined\"!=typeof SharedArrayBuffer?SharedArrayBuffer:void 0;function O(e){return\"[object SharedArrayBuffer]\"===l(e)}function x(e){return void 0!==T&&(void 0===O.working&&(O.working=O(new T)),O.working?O(e):e instanceof T)}function A(e){return m(e,f)}function P(e){return m(e,p)}function R(e){return m(e,d)}function j(e){return u&&m(e,h)}function C(e){return c&&m(e,y)}t.isSharedArrayBuffer=x,t.isAsyncFunction=function(e){return\"[object AsyncFunction]\"===l(e)},t.isMapIterator=function(e){return\"[object Map Iterator]\"===l(e)},t.isSetIterator=function(e){return\"[object Set Iterator]\"===l(e)},t.isGeneratorObject=function(e){return\"[object Generator]\"===l(e)},t.isWebAssemblyCompiledModule=function(e){return\"[object WebAssembly.Module]\"===l(e)},t.isNumberObject=A,t.isStringObject=P,t.isBooleanObject=R,t.isBigIntObject=j,t.isSymbolObject=C,t.isBoxedPrimitive=function(e){return A(e)||P(e)||R(e)||j(e)||C(e)},t.isAnyArrayBuffer=function(e){return\"undefined\"!=typeof Uint8Array&&(E(e)||x(e))},[\"isProxy\",\"isExternal\",\"isModuleNamespaceObject\"].forEach((function(e){Object.defineProperty(t,e,{enumerable:!1,value:function(){throw new Error(e+\" is not supported in userland\")}})}))},537:(e,t,r)=>{var n=Object.getOwnPropertyDescriptors||function(e){for(var t=Object.keys(e),r={},n=0;n<t.length;n++)r[t[n]]=Object.getOwnPropertyDescriptor(e,t[n]);return r},o=/%[sdj%]/g;t.format=function(e){if(!g(e)){for(var t=[],r=0;r<arguments.length;r++)t.push(u(arguments[r]));return t.join(\" \")}r=1;for(var n=arguments,i=n.length,a=String(e).replace(o,(function(e){if(\"%%\"===e)return\"%\";if(r>=i)return e;switch(e){case\"%s\":return String(n[r++]);case\"%d\":return Number(n[r++]);case\"%j\":try{return JSON.stringify(n[r++])}catch(e){return\"[Circular]\"}default:return e}})),s=n[r];r<i;s=n[++r])m(s)||!S(s)?a+=\" \"+s:a+=\" \"+u(s);return a},t.deprecate=function(e,r){if(\"undefined\"!=typeof process&&!0===process.noDeprecation)return e;if(\"undefined\"==typeof process)return function(){return t.deprecate(e,r).apply(this,arguments)};var n=!1;return function(){if(!n){if(process.throwDeprecation)throw new Error(r);process.traceDeprecation?console.trace(r):console.error(r),n=!0}return e.apply(this,arguments)}};var i={},a=/^$/;if(process.env.NODE_DEBUG){var s=process.env.NODE_DEBUG;s=s.replace(/[|\\\\{}()[\\]^$+?.]/g,\"\\\\$&\").replace(/\\*/g,\".*\").replace(/,/g,\"$|^\").toUpperCase(),a=new RegExp(\"^\"+s+\"$\",\"i\")}function u(e,r){var n={seen:[],stylize:l};return arguments.length>=3&&(n.depth=arguments[2]),arguments.length>=4&&(n.colors=arguments[3]),y(r)?n.showHidden=r:r&&t._extend(n,r),b(n.showHidden)&&(n.showHidden=!1),b(n.depth)&&(n.depth=2),b(n.colors)&&(n.colors=!1),b(n.customInspect)&&(n.customInspect=!0),n.colors&&(n.stylize=c),f(n,e,n.depth)}function c(e,t){var r=u.styles[t];return r?\"\\x1b[\"+u.colors[r][0]+\"m\"+e+\"\\x1b[\"+u.colors[r][1]+\"m\":e}function l(e,t){return e}function f(e,r,n){if(e.customInspect&&r&&k(r.inspect)&&r.inspect!==t.inspect&&(!r.constructor||r.constructor.prototype!==r)){var o=r.inspect(n,e);return g(o)||(o=f(e,o,n)),o}var i=function(e,t){if(b(t))return e.stylize(\"undefined\",\"undefined\");if(g(t)){var r=\"'\"+JSON.stringify(t).replace(/^\"|\"$/g,\"\").replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"')+\"'\";return e.stylize(r,\"string\")}if(v(t))return e.stylize(\"\"+t,\"number\");if(y(t))return e.stylize(\"\"+t,\"boolean\");if(m(t))return e.stylize(\"null\",\"null\")}(e,r);if(i)return i;var a=Object.keys(r),s=function(e){var t={};return e.forEach((function(e,r){t[e]=!0})),t}(a);if(e.showHidden&&(a=Object.getOwnPropertyNames(r)),_(r)&&(a.indexOf(\"message\")>=0||a.indexOf(\"description\")>=0))return p(r);if(0===a.length){if(k(r)){var u=r.name?\": \"+r.name:\"\";return e.stylize(\"[Function\"+u+\"]\",\"special\")}if(w(r))return e.stylize(RegExp.prototype.toString.call(r),\"regexp\");if(E(r))return e.stylize(Date.prototype.toString.call(r),\"date\");if(_(r))return p(r)}var c,l=\"\",S=!1,T=[\"{\",\"}\"];(h(r)&&(S=!0,T=[\"[\",\"]\"]),k(r))&&(l=\" [Function\"+(r.name?\": \"+r.name:\"\")+\"]\");return w(r)&&(l=\" \"+RegExp.prototype.toString.call(r)),E(r)&&(l=\" \"+Date.prototype.toUTCString.call(r)),_(r)&&(l=\" \"+p(r)),0!==a.length||S&&0!=r.length?n<0?w(r)?e.stylize(RegExp.prototype.toString.call(r),\"regexp\"):e.stylize(\"[Object]\",\"special\"):(e.seen.push(r),c=S?function(e,t,r,n,o){for(var i=[],a=0,s=t.length;a<s;++a)A(t,String(a))?i.push(d(e,t,r,n,String(a),!0)):i.push(\"\");return o.forEach((function(o){o.match(/^\\d+$/)||i.push(d(e,t,r,n,o,!0))})),i}(e,r,n,s,a):a.map((function(t){return d(e,r,n,s,t,S)})),e.seen.pop(),function(e,t,r){var n=e.reduce((function(e,t){return t.indexOf(\"\\n\")>=0&&0,e+t.replace(/\\u001b\\[\\d\\d?m/g,\"\").length+1}),0);if(n>60)return r[0]+(\"\"===t?\"\":t+\"\\n \")+\" \"+e.join(\",\\n  \")+\" \"+r[1];return r[0]+t+\" \"+e.join(\", \")+\" \"+r[1]}(c,l,T)):T[0]+l+T[1]}function p(e){return\"[\"+Error.prototype.toString.call(e)+\"]\"}function d(e,t,r,n,o,i){var a,s,u;if((u=Object.getOwnPropertyDescriptor(t,o)||{value:t[o]}).get?s=u.set?e.stylize(\"[Getter/Setter]\",\"special\"):e.stylize(\"[Getter]\",\"special\"):u.set&&(s=e.stylize(\"[Setter]\",\"special\")),A(n,o)||(a=\"[\"+o+\"]\"),s||(e.seen.indexOf(u.value)<0?(s=m(r)?f(e,u.value,null):f(e,u.value,r-1)).indexOf(\"\\n\")>-1&&(s=i?s.split(\"\\n\").map((function(e){return\"  \"+e})).join(\"\\n\").slice(2):\"\\n\"+s.split(\"\\n\").map((function(e){return\"   \"+e})).join(\"\\n\")):s=e.stylize(\"[Circular]\",\"special\")),b(a)){if(i&&o.match(/^\\d+$/))return s;(a=JSON.stringify(\"\"+o)).match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?(a=a.slice(1,-1),a=e.stylize(a,\"name\")):(a=a.replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"').replace(/(^\"|\"$)/g,\"'\"),a=e.stylize(a,\"string\"))}return a+\": \"+s}function h(e){return Array.isArray(e)}function y(e){return\"boolean\"==typeof e}function m(e){return null===e}function v(e){return\"number\"==typeof e}function g(e){return\"string\"==typeof e}function b(e){return void 0===e}function w(e){return S(e)&&\"[object RegExp]\"===T(e)}function S(e){return\"object\"==typeof e&&null!==e}function E(e){return S(e)&&\"[object Date]\"===T(e)}function _(e){return S(e)&&(\"[object Error]\"===T(e)||e instanceof Error)}function k(e){return\"function\"==typeof e}function T(e){return Object.prototype.toString.call(e)}function O(e){return e<10?\"0\"+e.toString(10):e.toString(10)}t.debuglog=function(e){if(e=e.toUpperCase(),!i[e])if(a.test(e)){var r=process.pid;i[e]=function(){var n=t.format.apply(t,arguments);console.error(\"%s %d: %s\",e,r,n)}}else i[e]=function(){};return i[e]},t.inspect=u,u.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},u.styles={special:\"cyan\",number:\"yellow\",boolean:\"yellow\",undefined:\"grey\",null:\"bold\",string:\"green\",date:\"magenta\",regexp:\"red\"},t.types=r(9032),t.isArray=h,t.isBoolean=y,t.isNull=m,t.isNullOrUndefined=function(e){return null==e},t.isNumber=v,t.isString=g,t.isSymbol=function(e){return\"symbol\"==typeof e},t.isUndefined=b,t.isRegExp=w,t.types.isRegExp=w,t.isObject=S,t.isDate=E,t.types.isDate=E,t.isError=_,t.types.isNativeError=_,t.isFunction=k,t.isPrimitive=function(e){return null===e||\"boolean\"==typeof e||\"number\"==typeof e||\"string\"==typeof e||\"symbol\"==typeof e||void 0===e},t.isBuffer=r(1135);var x=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];function A(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.log=function(){var e,r;console.log(\"%s - %s\",(e=new Date,r=[O(e.getHours()),O(e.getMinutes()),O(e.getSeconds())].join(\":\"),[e.getDate(),x[e.getMonth()],r].join(\" \")),t.format.apply(t,arguments))},t.inherits=r(6698),t._extend=function(e,t){if(!t||!S(t))return e;for(var r=Object.keys(t),n=r.length;n--;)e[r[n]]=t[r[n]];return e};var P=\"undefined\"!=typeof Symbol?Symbol(\"util.promisify.custom\"):void 0;function R(e,t){if(!e){var r=new Error(\"Promise was rejected with a falsy value\");r.reason=e,e=r}return t(e)}t.promisify=function(e){if(\"function\"!=typeof e)throw new TypeError('The \"original\" argument must be of type Function');if(P&&e[P]){var t;if(\"function\"!=typeof(t=e[P]))throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');return Object.defineProperty(t,P,{value:t,enumerable:!1,writable:!1,configurable:!0}),t}function t(){for(var t,r,n=new Promise((function(e,n){t=e,r=n})),o=[],i=0;i<arguments.length;i++)o.push(arguments[i]);o.push((function(e,n){e?r(e):t(n)}));try{e.apply(this,o)}catch(e){r(e)}return n}return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),P&&Object.defineProperty(t,P,{value:t,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(t,n(e))},t.promisify.custom=P,t.callbackify=function(e){if(\"function\"!=typeof e)throw new TypeError('The \"original\" argument must be of type Function');function t(){for(var t=[],r=0;r<arguments.length;r++)t.push(arguments[r]);var n=t.pop();if(\"function\"!=typeof n)throw new TypeError(\"The last argument must be of type Function\");var o=this,i=function(){return n.apply(o,arguments)};e.apply(this,t).then((function(e){process.nextTick(i.bind(null,null,e))}),(function(e){process.nextTick(R.bind(null,e,i))}))}return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),Object.defineProperties(t,n(e)),t}},5767:(e,t,r)=>{\"use strict\";var n=r(2682),o=r(9209),i=r(487),a=r(8075),s=r(5795),u=a(\"Object.prototype.toString\"),c=r(9092)(),l=\"undefined\"==typeof globalThis?r.g:globalThis,f=o(),p=a(\"String.prototype.slice\"),d=Object.getPrototypeOf,h=a(\"Array.prototype.indexOf\",!0)||function(e,t){for(var r=0;r<e.length;r+=1)if(e[r]===t)return r;return-1},y={__proto__:null};n(f,c&&s&&d?function(e){var t=new l[e];if(Symbol.toStringTag in t){var r=d(t),n=s(r,Symbol.toStringTag);if(!n){var o=d(r);n=s(o,Symbol.toStringTag)}y[\"$\"+e]=i(n.get)}}:function(e){var t=new l[e],r=t.slice||t.set;r&&(y[\"$\"+e]=i(r))});e.exports=function(e){if(!e||\"object\"!=typeof e)return!1;if(!c){var t=p(u(e),8,-1);return h(f,t)>-1?t:\"Object\"===t&&function(e){var t=!1;return n(y,(function(r,n){if(!t)try{r(e),t=p(n,1)}catch(e){}})),t}(e)}return s?function(e){var t=!1;return n(y,(function(r,n){if(!t)try{\"$\"+r(e)===n&&(t=p(n,1))}catch(e){}})),t}(e):null}},7510:e=>{e.exports=function(){for(var e={},r=0;r<arguments.length;r++){var n=arguments[r];for(var o in n)t.call(n,o)&&(e[o]=n[o])}return e};var t=Object.prototype.hasOwnProperty},2894:()=>{},2634:()=>{},5340:()=>{},9838:()=>{},9209:(e,t,r)=>{\"use strict\";var n=r(6578),o=\"undefined\"==typeof globalThis?r.g:globalThis;e.exports=function(){for(var e=[],t=0;t<n.length;t++)\"function\"==typeof o[n[t]]&&(e[e.length]=n[t]);return e}}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={id:n,loaded:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.loaded=!0,i.exports}return r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(e){if(\"object\"==typeof window)return window}}(),r.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,\"exports\",{enumerable:!0,set:()=>{throw new Error(\"ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: \"+e.id)}}),e),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),r(1924)})()));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/@stellar/stellar-sdk/dist/stellar-sdk.min.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVosa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQixxQkFBcUI7O0FBRXJCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1DQUFtQyxTQUFTO0FBQzVDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGNBQWMsU0FBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFNBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQ0FBMkMsVUFBVTtBQUNyRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9iaXNob3BiZXRoZWwvZGV2YXNpZ24tYnVpbGQtdjEvZGV2YXNpZ24tcG0tZnJvbnRlbmQvbm9kZV9tb2R1bGVzL2Jhc2U2NC1qcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuZXhwb3J0cy50b0J5dGVBcnJheSA9IHRvQnl0ZUFycmF5XG5leHBvcnRzLmZyb21CeXRlQXJyYXkgPSBmcm9tQnl0ZUFycmF5XG5cbnZhciBsb29rdXAgPSBbXVxudmFyIHJldkxvb2t1cCA9IFtdXG52YXIgQXJyID0gdHlwZW9mIFVpbnQ4QXJyYXkgIT09ICd1bmRlZmluZWQnID8gVWludDhBcnJheSA6IEFycmF5XG5cbnZhciBjb2RlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXG5mb3IgKHZhciBpID0gMCwgbGVuID0gY29kZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICBsb29rdXBbaV0gPSBjb2RlW2ldXG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaVxufVxuXG4vLyBTdXBwb3J0IGRlY29kaW5nIFVSTC1zYWZlIGJhc2U2NCBzdHJpbmdzLCBhcyBOb2RlLmpzIGRvZXMuXG4vLyBTZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jhc2U2NCNVUkxfYXBwbGljYXRpb25zXG5yZXZMb29rdXBbJy0nLmNoYXJDb2RlQXQoMCldID0gNjJcbnJldkxvb2t1cFsnXycuY2hhckNvZGVBdCgwKV0gPSA2M1xuXG5mdW5jdGlvbiBnZXRMZW5zIChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcblxuICBpZiAobGVuICUgNCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQnKVxuICB9XG5cbiAgLy8gVHJpbSBvZmYgZXh0cmEgYnl0ZXMgYWZ0ZXIgcGxhY2Vob2xkZXIgYnl0ZXMgYXJlIGZvdW5kXG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2JlYXRnYW1taXQvYmFzZTY0LWpzL2lzc3Vlcy80MlxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZignPScpXG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuXG5cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IHZhbGlkTGVuID09PSBsZW5cbiAgICA/IDBcbiAgICA6IDQgLSAodmFsaWRMZW4gJSA0KVxuXG4gIHJldHVybiBbdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbl1cbn1cblxuLy8gYmFzZTY0IGlzIDQvMyArIHVwIHRvIHR3byBjaGFyYWN0ZXJzIG9mIHRoZSBvcmlnaW5hbCBkYXRhXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChiNjQpIHtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gX2J5dGVMZW5ndGggKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikge1xuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cblxuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKVxuXG4gIHZhciBjdXJCeXRlID0gMFxuXG4gIC8vIGlmIHRoZXJlIGFyZSBwbGFjZWhvbGRlcnMsIG9ubHkgZ2V0IHVwIHRvIHRoZSBsYXN0IGNvbXBsZXRlIDQgY2hhcnNcbiAgdmFyIGxlbiA9IHBsYWNlSG9sZGVyc0xlbiA+IDBcbiAgICA/IHZhbGlkTGVuIC0gNFxuICAgIDogdmFsaWRMZW5cblxuICB2YXIgaVxuICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTgpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCAxMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYpIHxcbiAgICAgIHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDE2KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAyKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA+PiA0KVxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMSkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxMCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDQpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA+PiAyKVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBhcnJcbn1cblxuZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0IChudW0pIHtcbiAgcmV0dXJuIGxvb2t1cFtudW0gPj4gMTggJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiAxMiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDYgJiAweDNGXSArXG4gICAgbG9va3VwW251bSAmIDB4M0ZdXG59XG5cbmZ1bmN0aW9uIGVuY29kZUNodW5rICh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wXG4gIHZhciBvdXRwdXQgPSBbXVxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xuICAgIHRtcCA9XG4gICAgICAoKHVpbnQ4W2ldIDw8IDE2KSAmIDB4RkYwMDAwKSArXG4gICAgICAoKHVpbnQ4W2kgKyAxXSA8PCA4KSAmIDB4RkYwMCkgK1xuICAgICAgKHVpbnQ4W2kgKyAyXSAmIDB4RkYpXG4gICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpXG4gIH1cbiAgcmV0dXJuIG91dHB1dC5qb2luKCcnKVxufVxuXG5mdW5jdGlvbiBmcm9tQnl0ZUFycmF5ICh1aW50OCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW4gPSB1aW50OC5sZW5ndGhcbiAgdmFyIGV4dHJhQnl0ZXMgPSBsZW4gJSAzIC8vIGlmIHdlIGhhdmUgMSBieXRlIGxlZnQsIHBhZCAyIGJ5dGVzXG4gIHZhciBwYXJ0cyA9IFtdXG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzIC8vIG11c3QgYmUgbXVsdGlwbGUgb2YgM1xuXG4gIC8vIGdvIHRocm91Z2ggdGhlIGFycmF5IGV2ZXJ5IHRocmVlIGJ5dGVzLCB3ZSdsbCBkZWFsIHdpdGggdHJhaWxpbmcgc3R1ZmYgbGF0ZXJcbiAgZm9yICh2YXIgaSA9IDAsIGxlbjIgPSBsZW4gLSBleHRyYUJ5dGVzOyBpIDwgbGVuMjsgaSArPSBtYXhDaHVua0xlbmd0aCkge1xuICAgIHBhcnRzLnB1c2goZW5jb2RlQ2h1bmsodWludDgsIGksIChpICsgbWF4Q2h1bmtMZW5ndGgpID4gbGVuMiA/IGxlbjIgOiAoaSArIG1heENodW5rTGVuZ3RoKSkpXG4gIH1cblxuICAvLyBwYWQgdGhlIGVuZCB3aXRoIHplcm9zLCBidXQgbWFrZSBzdXJlIHRvIG5vdCBmb3JnZXQgdGhlIGV4dHJhIGJ5dGVzXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAyXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCA0KSAmIDB4M0ZdICtcbiAgICAgICc9PSdcbiAgICApXG4gIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikge1xuICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArIHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMTBdICtcbiAgICAgIGxvb2t1cFsodG1wID4+IDQpICYgMHgzRl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgMikgJiAweDNGXSArXG4gICAgICAnPSdcbiAgICApXG4gIH1cblxuICByZXR1cm4gcGFydHMuam9pbignJylcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/base64-js/index.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nconst base64 = __webpack_require__(/*! base64-js */ \"(pages-dir-browser)/./node_modules/base64-js/index.js\")\nconst ieee754 = __webpack_require__(/*! ieee754 */ \"(pages-dir-browser)/./node_modules/ieee754/index.js\")\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/buffer/index.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(__webpack_require__.ts("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUyxXQUFXOztBQUVwQjtBQUNBO0FBQ0E7QUFDQSxTQUFTLFdBQVc7O0FBRXBCO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVMsV0FBVzs7QUFFcEI7QUFDQTtBQUNBLFNBQVMsVUFBVTs7QUFFbkI7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvYmlzaG9wYmV0aGVsL2RldmFzaWduLWJ1aWxkLXYxL2RldmFzaWduLXBtLWZyb250ZW5kL25vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBpZWVlNzU0LiBCU0QtMy1DbGF1c2UgTGljZW5zZS4gRmVyb3NzIEFib3VraGFkaWplaCA8aHR0cHM6Ly9mZXJvc3Mub3JnL29wZW5zb3VyY2U+ICovXG5leHBvcnRzLnJlYWQgPSBmdW5jdGlvbiAoYnVmZmVyLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbVxuICB2YXIgZUxlbiA9IChuQnl0ZXMgKiA4KSAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgbkJpdHMgPSAtN1xuICB2YXIgaSA9IGlzTEUgPyAobkJ5dGVzIC0gMSkgOiAwXG4gIHZhciBkID0gaXNMRSA/IC0xIDogMVxuICB2YXIgcyA9IGJ1ZmZlcltvZmZzZXQgKyBpXVxuXG4gIGkgKz0gZFxuXG4gIGUgPSBzICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIHMgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IGVMZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgZSA9IChlICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIG0gPSBlICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIGUgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IG1MZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgbSA9IChtICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIGlmIChlID09PSAwKSB7XG4gICAgZSA9IDEgLSBlQmlhc1xuICB9IGVsc2UgaWYgKGUgPT09IGVNYXgpIHtcbiAgICByZXR1cm4gbSA/IE5hTiA6ICgocyA/IC0xIDogMSkgKiBJbmZpbml0eSlcbiAgfSBlbHNlIHtcbiAgICBtID0gbSArIE1hdGgucG93KDIsIG1MZW4pXG4gICAgZSA9IGUgLSBlQmlhc1xuICB9XG4gIHJldHVybiAocyA/IC0xIDogMSkgKiBtICogTWF0aC5wb3coMiwgZSAtIG1MZW4pXG59XG5cbmV4cG9ydHMud3JpdGUgPSBmdW5jdGlvbiAoYnVmZmVyLCB2YWx1ZSwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG0sIGNcbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIHJ0ID0gKG1MZW4gPT09IDIzID8gTWF0aC5wb3coMiwgLTI0KSAtIE1hdGgucG93KDIsIC03NykgOiAwKVxuICB2YXIgaSA9IGlzTEUgPyAwIDogKG5CeXRlcyAtIDEpXG4gIHZhciBkID0gaXNMRSA/IDEgOiAtMVxuICB2YXIgcyA9IHZhbHVlIDwgMCB8fCAodmFsdWUgPT09IDAgJiYgMSAvIHZhbHVlIDwgMCkgPyAxIDogMFxuXG4gIHZhbHVlID0gTWF0aC5hYnModmFsdWUpXG5cbiAgaWYgKGlzTmFOKHZhbHVlKSB8fCB2YWx1ZSA9PT0gSW5maW5pdHkpIHtcbiAgICBtID0gaXNOYU4odmFsdWUpID8gMSA6IDBcbiAgICBlID0gZU1heFxuICB9IGVsc2Uge1xuICAgIGUgPSBNYXRoLmZsb29yKE1hdGgubG9nKHZhbHVlKSAvIE1hdGguTE4yKVxuICAgIGlmICh2YWx1ZSAqIChjID0gTWF0aC5wb3coMiwgLWUpKSA8IDEpIHtcbiAgICAgIGUtLVxuICAgICAgYyAqPSAyXG4gICAgfVxuICAgIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgdmFsdWUgKz0gcnQgLyBjXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlICs9IHJ0ICogTWF0aC5wb3coMiwgMSAtIGVCaWFzKVxuICAgIH1cbiAgICBpZiAodmFsdWUgKiBjID49IDIpIHtcbiAgICAgIGUrK1xuICAgICAgYyAvPSAyXG4gICAgfVxuXG4gICAgaWYgKGUgKyBlQmlhcyA+PSBlTWF4KSB7XG4gICAgICBtID0gMFxuICAgICAgZSA9IGVNYXhcbiAgICB9IGVsc2UgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICBtID0gKCh2YWx1ZSAqIGMpIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IGUgKyBlQmlhc1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gdmFsdWUgKiBNYXRoLnBvdygyLCBlQmlhcyAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSAwXG4gICAgfVxuICB9XG5cbiAgZm9yICg7IG1MZW4gPj0gODsgYnVmZmVyW29mZnNldCArIGldID0gbSAmIDB4ZmYsIGkgKz0gZCwgbSAvPSAyNTYsIG1MZW4gLT0gOCkge31cblxuICBlID0gKGUgPDwgbUxlbikgfCBtXG4gIGVMZW4gKz0gbUxlblxuICBmb3IgKDsgZUxlbiA+IDA7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IGUgJiAweGZmLCBpICs9IGQsIGUgLz0gMjU2LCBlTGVuIC09IDgpIHt9XG5cbiAgYnVmZmVyW29mZnNldCArIGkgLSBkXSB8PSBzICogMTI4XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/ieee754/index.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./src/styles/globals.css":
/*!**************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./src/styles/globals.css ***!
  \**************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"*, ::before, ::after {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-gradient-from-position:  ;\\n  --tw-gradient-via-position:  ;\\n  --tw-gradient-to-position:  ;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n  --tw-contain-size:  ;\\n  --tw-contain-layout:  ;\\n  --tw-contain-paint:  ;\\n  --tw-contain-style:  ;\\n}\\n\\n::backdrop {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-gradient-from-position:  ;\\n  --tw-gradient-via-position:  ;\\n  --tw-gradient-to-position:  ;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n  --tw-contain-size:  ;\\n  --tw-contain-layout:  ;\\n  --tw-contain-paint:  ;\\n  --tw-contain-style:  ;\\n}/*\\n! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com\\n*//*\\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\\n*/\\n\\n*,\\n::before,\\n::after {\\n  box-sizing: border-box; /* 1 */\\n  border-width: 0; /* 2 */\\n  border-style: solid; /* 2 */\\n  border-color: #e5e7eb; /* 2 */\\n}\\n\\n::before,\\n::after {\\n  --tw-content: '';\\n}\\n\\n/*\\n1. Use a consistent sensible line-height in all browsers.\\n2. Prevent adjustments of font size after orientation changes in iOS.\\n3. Use a more readable tab size.\\n4. Use the user's configured `sans` font-family by default.\\n5. Use the user's configured `sans` font-feature-settings by default.\\n6. Use the user's configured `sans` font-variation-settings by default.\\n7. Disable tap highlights on iOS\\n*/\\n\\nhtml,\\n:host {\\n  line-height: 1.5; /* 1 */\\n  -webkit-text-size-adjust: 100%; /* 2 */\\n  -moz-tab-size: 4; /* 3 */\\n  tab-size: 4; /* 3 */\\n  font-family: ui-sans-serif, system-ui, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"; /* 4 */\\n  font-feature-settings: normal; /* 5 */\\n  font-variation-settings: normal; /* 6 */\\n  -webkit-tap-highlight-color: transparent; /* 7 */\\n}\\n\\n/*\\n1. Remove the margin in all browsers.\\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\\n*/\\n\\nbody {\\n  margin: 0; /* 1 */\\n  line-height: inherit; /* 2 */\\n}\\n\\n/*\\n1. Add the correct height in Firefox.\\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\\n3. Ensure horizontal rules are visible by default.\\n*/\\n\\nhr {\\n  height: 0; /* 1 */\\n  color: inherit; /* 2 */\\n  border-top-width: 1px; /* 3 */\\n}\\n\\n/*\\nAdd the correct text decoration in Chrome, Edge, and Safari.\\n*/\\n\\nabbr:where([title]) {\\n  text-decoration: underline dotted;\\n}\\n\\n/*\\nRemove the default font size and weight for headings.\\n*/\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n/*\\nReset links to optimize for opt-in styling instead of opt-out.\\n*/\\n\\na {\\n  color: inherit;\\n  text-decoration: inherit;\\n}\\n\\n/*\\nAdd the correct font weight in Edge and Safari.\\n*/\\n\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n\\n/*\\n1. Use the user's configured `mono` font-family by default.\\n2. Use the user's configured `mono` font-feature-settings by default.\\n3. Use the user's configured `mono` font-variation-settings by default.\\n4. Correct the odd `em` font sizing in all browsers.\\n*/\\n\\ncode,\\nkbd,\\nsamp,\\npre {\\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace; /* 1 */\\n  font-feature-settings: normal; /* 2 */\\n  font-variation-settings: normal; /* 3 */\\n  font-size: 1em; /* 4 */\\n}\\n\\n/*\\nAdd the correct font size in all browsers.\\n*/\\n\\nsmall {\\n  font-size: 80%;\\n}\\n\\n/*\\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\\n*/\\n\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\n\\nsub {\\n  bottom: -0.25em;\\n}\\n\\nsup {\\n  top: -0.5em;\\n}\\n\\n/*\\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\\n3. Remove gaps between table borders by default.\\n*/\\n\\ntable {\\n  text-indent: 0; /* 1 */\\n  border-color: inherit; /* 2 */\\n  border-collapse: collapse; /* 3 */\\n}\\n\\n/*\\n1. Change the font styles in all browsers.\\n2. Remove the margin in Firefox and Safari.\\n3. Remove default padding in all browsers.\\n*/\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  font-family: inherit; /* 1 */\\n  font-feature-settings: inherit; /* 1 */\\n  font-variation-settings: inherit; /* 1 */\\n  font-size: 100%; /* 1 */\\n  font-weight: inherit; /* 1 */\\n  line-height: inherit; /* 1 */\\n  letter-spacing: inherit; /* 1 */\\n  color: inherit; /* 1 */\\n  margin: 0; /* 2 */\\n  padding: 0; /* 3 */\\n}\\n\\n/*\\nRemove the inheritance of text transform in Edge and Firefox.\\n*/\\n\\nbutton,\\nselect {\\n  text-transform: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Remove default button styles.\\n*/\\n\\nbutton,\\ninput:where([type='button']),\\ninput:where([type='reset']),\\ninput:where([type='submit']) {\\n  -webkit-appearance: button; /* 1 */\\n  background-color: transparent; /* 2 */\\n  background-image: none; /* 2 */\\n}\\n\\n/*\\nUse the modern Firefox focus style for all focusable elements.\\n*/\\n\\n:-moz-focusring {\\n  outline: auto;\\n}\\n\\n/*\\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\\n*/\\n\\n:-moz-ui-invalid {\\n  box-shadow: none;\\n}\\n\\n/*\\nAdd the correct vertical alignment in Chrome and Firefox.\\n*/\\n\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n/*\\nCorrect the cursor style of increment and decrement buttons in Safari.\\n*/\\n\\n::-webkit-inner-spin-button,\\n::-webkit-outer-spin-button {\\n  height: auto;\\n}\\n\\n/*\\n1. Correct the odd appearance in Chrome and Safari.\\n2. Correct the outline style in Safari.\\n*/\\n\\n[type='search'] {\\n  -webkit-appearance: textfield; /* 1 */\\n  outline-offset: -2px; /* 2 */\\n}\\n\\n/*\\nRemove the inner padding in Chrome and Safari on macOS.\\n*/\\n\\n::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Change font properties to `inherit` in Safari.\\n*/\\n\\n::-webkit-file-upload-button {\\n  -webkit-appearance: button; /* 1 */\\n  font: inherit; /* 2 */\\n}\\n\\n/*\\nAdd the correct display in Chrome and Safari.\\n*/\\n\\nsummary {\\n  display: list-item;\\n}\\n\\n/*\\nRemoves the default spacing and border for appropriate elements.\\n*/\\n\\nblockquote,\\ndl,\\ndd,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nhr,\\nfigure,\\np,\\npre {\\n  margin: 0;\\n}\\n\\nfieldset {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nlegend {\\n  padding: 0;\\n}\\n\\nol,\\nul,\\nmenu {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/*\\nReset default styling for dialogs.\\n*/\\ndialog {\\n  padding: 0;\\n}\\n\\n/*\\nPrevent resizing textareas horizontally by default.\\n*/\\n\\ntextarea {\\n  resize: vertical;\\n}\\n\\n/*\\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\\n2. Set the default placeholder color to the user's configured gray 400 color.\\n*/\\n\\ninput::placeholder,\\ntextarea::placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\n/*\\nSet the default cursor for buttons.\\n*/\\n\\nbutton,\\n[role=\\\"button\\\"] {\\n  cursor: pointer;\\n}\\n\\n/*\\nMake sure disabled buttons don't get the pointer cursor.\\n*/\\n:disabled {\\n  cursor: default;\\n}\\n\\n/*\\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\\n   This can trigger a poorly considered lint error in some tools but is included by design.\\n*/\\n\\nimg,\\nsvg,\\nvideo,\\ncanvas,\\naudio,\\niframe,\\nembed,\\nobject {\\n  display: block; /* 1 */\\n  vertical-align: middle; /* 2 */\\n}\\n\\n/*\\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\\n*/\\n\\nimg,\\nvideo {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n/* Make elements with the HTML hidden attribute stay hidden by default */\\n[hidden]:where(:not([hidden=\\\"until-found\\\"])) {\\n  display: none;\\n}\\n  :root {\\n    --background: 240 10% 3.9%;\\n    --foreground: 0 0% 98%;\\n    \\n    --card: 240 10% 5.9%;\\n    --card-foreground: 0 0% 98%;\\n    \\n    --popover: 240 10% 5.9%;\\n    --popover-foreground: 0 0% 98%;\\n    \\n    --primary: 30 99% 56%;\\n    --primary-foreground: 0 0% 10%;\\n    \\n    --secondary: 240 3.7% 15.9%;\\n    --secondary-foreground: 0 0% 98%;\\n    \\n    --muted: 240 3.7% 15.9%;\\n    --muted-foreground: 240 5% 64.9%;\\n    \\n    --accent: 240 3.7% 15.9%;\\n    --accent-foreground: 0 0% 98%;\\n    \\n    --destructive: 0 62.8% 30.6%;\\n    --destructive-foreground: 0 0% 98%;\\n    \\n    --border: 240 3.7% 15.9%;\\n    --input: 240 3.7% 15.9%;\\n    --ring: 240 4.9% 83.9%;\\n    \\n    --radius: 0.5rem;\\n  }\\n  * {\\n  border-color: hsl(var(--border));\\n}\\n  body {\\n  background-color: hsl(var(--background));\\n  color: hsl(var(--foreground));\\n}\\n  * {\\n  border-color: hsl(var(--border));\\n  outline-color: hsl(var(--ring) / 0.5);\\n}\\n  body {\\n  background-color: hsl(var(--background));\\n  color: hsl(var(--foreground));\\n}\\n.relative {\\n  position: relative;\\n}\\n.sticky {\\n  position: sticky;\\n}\\n.top-0 {\\n  top: 0px;\\n}\\n.z-50 {\\n  z-index: 50;\\n}\\n.col-span-2 {\\n  grid-column: span 2 / span 2;\\n}\\n.mx-auto {\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n.mb-1 {\\n  margin-bottom: 0.25rem;\\n}\\n.mb-10 {\\n  margin-bottom: 2.5rem;\\n}\\n.mb-12 {\\n  margin-bottom: 3rem;\\n}\\n.mb-2 {\\n  margin-bottom: 0.5rem;\\n}\\n.mb-4 {\\n  margin-bottom: 1rem;\\n}\\n.mb-6 {\\n  margin-bottom: 1.5rem;\\n}\\n.mb-8 {\\n  margin-bottom: 2rem;\\n}\\n.ml-2 {\\n  margin-left: 0.5rem;\\n}\\n.ml-4 {\\n  margin-left: 1rem;\\n}\\n.ml-8 {\\n  margin-left: 2rem;\\n}\\n.mr-1 {\\n  margin-right: 0.25rem;\\n}\\n.mr-2 {\\n  margin-right: 0.5rem;\\n}\\n.mt-0\\\\.5 {\\n  margin-top: 0.125rem;\\n}\\n.mt-1 {\\n  margin-top: 0.25rem;\\n}\\n.mt-10 {\\n  margin-top: 2.5rem;\\n}\\n.mt-2 {\\n  margin-top: 0.5rem;\\n}\\n.mt-24 {\\n  margin-top: 6rem;\\n}\\n.mt-4 {\\n  margin-top: 1rem;\\n}\\n.mt-auto {\\n  margin-top: auto;\\n}\\n.block {\\n  display: block;\\n}\\n.inline-block {\\n  display: inline-block;\\n}\\n.flex {\\n  display: flex;\\n}\\n.inline-flex {\\n  display: inline-flex;\\n}\\n.grid {\\n  display: grid;\\n}\\n.hidden {\\n  display: none;\\n}\\n.h-10 {\\n  height: 2.5rem;\\n}\\n.h-11 {\\n  height: 2.75rem;\\n}\\n.h-12 {\\n  height: 3rem;\\n}\\n.h-16 {\\n  height: 4rem;\\n}\\n.h-2 {\\n  height: 0.5rem;\\n}\\n.h-4 {\\n  height: 1rem;\\n}\\n.h-5 {\\n  height: 1.25rem;\\n}\\n.h-6 {\\n  height: 1.5rem;\\n}\\n.h-8 {\\n  height: 2rem;\\n}\\n.h-9 {\\n  height: 2.25rem;\\n}\\n.h-full {\\n  height: 100%;\\n}\\n.max-h-32 {\\n  max-height: 8rem;\\n}\\n.min-h-\\\\[80px\\\\] {\\n  min-height: 80px;\\n}\\n.min-h-screen {\\n  min-height: 100vh;\\n}\\n.w-10 {\\n  width: 2.5rem;\\n}\\n.w-12 {\\n  width: 3rem;\\n}\\n.w-2 {\\n  width: 0.5rem;\\n}\\n.w-4 {\\n  width: 1rem;\\n}\\n.w-5 {\\n  width: 1.25rem;\\n}\\n.w-6 {\\n  width: 1.5rem;\\n}\\n.w-8 {\\n  width: 2rem;\\n}\\n.w-9 {\\n  width: 2.25rem;\\n}\\n.w-full {\\n  width: 100%;\\n}\\n.max-w-2xl {\\n  max-width: 42rem;\\n}\\n.max-w-3xl {\\n  max-width: 48rem;\\n}\\n.max-w-4xl {\\n  max-width: 56rem;\\n}\\n.max-w-7xl {\\n  max-width: 80rem;\\n}\\n.flex-1 {\\n  flex: 1 1 0%;\\n}\\n.flex-shrink-0 {\\n  flex-shrink: 0;\\n}\\n.flex-grow {\\n  flex-grow: 1;\\n}\\n.transform {\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n@keyframes spin {\\n\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n.animate-spin {\\n  animation: spin 1s linear infinite;\\n}\\n.grid-cols-1 {\\n  grid-template-columns: repeat(1, minmax(0, 1fr));\\n}\\n.grid-cols-2 {\\n  grid-template-columns: repeat(2, minmax(0, 1fr));\\n}\\n.flex-row {\\n  flex-direction: row;\\n}\\n.flex-col {\\n  flex-direction: column;\\n}\\n.items-start {\\n  align-items: flex-start;\\n}\\n.items-center {\\n  align-items: center;\\n}\\n.justify-end {\\n  justify-content: flex-end;\\n}\\n.justify-center {\\n  justify-content: center;\\n}\\n.justify-between {\\n  justify-content: space-between;\\n}\\n.gap-2 {\\n  gap: 0.5rem;\\n}\\n.gap-3 {\\n  gap: 0.75rem;\\n}\\n.gap-4 {\\n  gap: 1rem;\\n}\\n.gap-6 {\\n  gap: 1.5rem;\\n}\\n.gap-8 {\\n  gap: 2rem;\\n}\\n.space-x-1 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-x-reverse: 0;\\n  margin-right: calc(0.25rem * var(--tw-space-x-reverse));\\n  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));\\n}\\n.space-x-2 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-x-reverse: 0;\\n  margin-right: calc(0.5rem * var(--tw-space-x-reverse));\\n  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));\\n}\\n.space-x-4 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-x-reverse: 0;\\n  margin-right: calc(1rem * var(--tw-space-x-reverse));\\n  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));\\n}\\n.space-y-1\\\\.5 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-y-reverse: 0;\\n  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));\\n  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));\\n}\\n.space-y-2 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-y-reverse: 0;\\n  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));\\n  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));\\n}\\n.space-y-4 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-y-reverse: 0;\\n  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));\\n  margin-bottom: calc(1rem * var(--tw-space-y-reverse));\\n}\\n.space-y-8 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-y-reverse: 0;\\n  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));\\n  margin-bottom: calc(2rem * var(--tw-space-y-reverse));\\n}\\n.overflow-hidden {\\n  overflow: hidden;\\n}\\n.overflow-y-auto {\\n  overflow-y: auto;\\n}\\n.truncate {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n.whitespace-nowrap {\\n  white-space: nowrap;\\n}\\n.rounded-full {\\n  border-radius: 9999px;\\n}\\n.rounded-lg {\\n  border-radius: var(--radius);\\n}\\n.rounded-md {\\n  border-radius: calc(var(--radius) - 2px);\\n}\\n.rounded-sm {\\n  border-radius: calc(var(--radius) - 4px);\\n}\\n.border {\\n  border-width: 1px;\\n}\\n.border-b {\\n  border-bottom-width: 1px;\\n}\\n.border-t {\\n  border-top-width: 1px;\\n}\\n.border-amber-800 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(146 64 14 / var(--tw-border-opacity, 1));\\n}\\n.border-blue-800 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(30 64 175 / var(--tw-border-opacity, 1));\\n}\\n.border-border {\\n  border-color: hsl(var(--border));\\n}\\n.border-border\\\\/40 {\\n  border-color: hsl(var(--border) / 0.4);\\n}\\n.border-destructive\\\\/40 {\\n  border-color: hsl(var(--destructive) / 0.4);\\n}\\n.border-green-800 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(22 101 52 / var(--tw-border-opacity, 1));\\n}\\n.border-input {\\n  border-color: hsl(var(--input));\\n}\\n.border-orange-800 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(154 52 18 / var(--tw-border-opacity, 1));\\n}\\n.border-primary\\\\/20 {\\n  border-color: rgb(254 137 31 / 0.2);\\n}\\n.border-purple-800 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(107 33 168 / var(--tw-border-opacity, 1));\\n}\\n.border-red-800 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(153 27 27 / var(--tw-border-opacity, 1));\\n}\\n.border-transparent {\\n  border-color: transparent;\\n}\\n.bg-amber-900\\\\/20 {\\n  background-color: rgb(120 53 15 / 0.2);\\n}\\n.bg-background {\\n  background-color: hsl(var(--background));\\n}\\n.bg-blue-900\\\\/20 {\\n  background-color: rgb(30 58 138 / 0.2);\\n}\\n.bg-card {\\n  background-color: hsl(var(--card));\\n}\\n.bg-card\\\\/50 {\\n  background-color: hsl(var(--card) / 0.5);\\n}\\n.bg-card\\\\/60 {\\n  background-color: hsl(var(--card) / 0.6);\\n}\\n.bg-destructive {\\n  background-color: hsl(var(--destructive));\\n}\\n.bg-destructive\\\\/20 {\\n  background-color: hsl(var(--destructive) / 0.2);\\n}\\n.bg-green-500 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(34 197 94 / var(--tw-bg-opacity, 1));\\n}\\n.bg-green-900\\\\/20 {\\n  background-color: rgb(20 83 45 / 0.2);\\n}\\n.bg-muted {\\n  background-color: hsl(var(--muted));\\n}\\n.bg-orange-900\\\\/20 {\\n  background-color: rgb(124 45 18 / 0.2);\\n}\\n.bg-primary {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(254 137 31 / var(--tw-bg-opacity, 1));\\n}\\n.bg-primary\\\\/10 {\\n  background-color: rgb(254 137 31 / 0.1);\\n}\\n.bg-primary\\\\/70 {\\n  background-color: rgb(254 137 31 / 0.7);\\n}\\n.bg-purple-900\\\\/20 {\\n  background-color: rgb(88 28 135 / 0.2);\\n}\\n.bg-red-900\\\\/20 {\\n  background-color: rgb(127 29 29 / 0.2);\\n}\\n.bg-secondary {\\n  background-color: hsl(var(--secondary));\\n}\\n.bg-secondary\\\\/50 {\\n  background-color: hsl(var(--secondary) / 0.5);\\n}\\n.p-1 {\\n  padding: 0.25rem;\\n}\\n.p-12 {\\n  padding: 3rem;\\n}\\n.p-2 {\\n  padding: 0.5rem;\\n}\\n.p-3 {\\n  padding: 0.75rem;\\n}\\n.p-4 {\\n  padding: 1rem;\\n}\\n.p-6 {\\n  padding: 1.5rem;\\n}\\n.p-8 {\\n  padding: 2rem;\\n}\\n.px-2\\\\.5 {\\n  padding-left: 0.625rem;\\n  padding-right: 0.625rem;\\n}\\n.px-3 {\\n  padding-left: 0.75rem;\\n  padding-right: 0.75rem;\\n}\\n.px-4 {\\n  padding-left: 1rem;\\n  padding-right: 1rem;\\n}\\n.px-8 {\\n  padding-left: 2rem;\\n  padding-right: 2rem;\\n}\\n.py-0\\\\.5 {\\n  padding-top: 0.125rem;\\n  padding-bottom: 0.125rem;\\n}\\n.py-1 {\\n  padding-top: 0.25rem;\\n  padding-bottom: 0.25rem;\\n}\\n.py-1\\\\.5 {\\n  padding-top: 0.375rem;\\n  padding-bottom: 0.375rem;\\n}\\n.py-12 {\\n  padding-top: 3rem;\\n  padding-bottom: 3rem;\\n}\\n.py-2 {\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n}\\n.py-6 {\\n  padding-top: 1.5rem;\\n  padding-bottom: 1.5rem;\\n}\\n.py-8 {\\n  padding-top: 2rem;\\n  padding-bottom: 2rem;\\n}\\n.pb-3 {\\n  padding-bottom: 0.75rem;\\n}\\n.pt-0 {\\n  padding-top: 0px;\\n}\\n.pt-3 {\\n  padding-top: 0.75rem;\\n}\\n.pt-6 {\\n  padding-top: 1.5rem;\\n}\\n.text-left {\\n  text-align: left;\\n}\\n.text-center {\\n  text-align: center;\\n}\\n.text-2xl {\\n  font-size: 1.5rem;\\n  line-height: 2rem;\\n}\\n.text-3xl {\\n  font-size: 1.875rem;\\n  line-height: 2.25rem;\\n}\\n.text-4xl {\\n  font-size: 2.25rem;\\n  line-height: 2.5rem;\\n}\\n.text-lg {\\n  font-size: 1.125rem;\\n  line-height: 1.75rem;\\n}\\n.text-sm {\\n  font-size: 0.875rem;\\n  line-height: 1.25rem;\\n}\\n.text-xl {\\n  font-size: 1.25rem;\\n  line-height: 1.75rem;\\n}\\n.text-xs {\\n  font-size: 0.75rem;\\n  line-height: 1rem;\\n}\\n.font-bold {\\n  font-weight: 700;\\n}\\n.font-extrabold {\\n  font-weight: 800;\\n}\\n.font-medium {\\n  font-weight: 500;\\n}\\n.font-semibold {\\n  font-weight: 600;\\n}\\n.leading-none {\\n  line-height: 1;\\n}\\n.tracking-tight {\\n  letter-spacing: -0.025em;\\n}\\n.text-amber-400 {\\n  --tw-text-opacity: 1;\\n  color: rgb(251 191 36 / var(--tw-text-opacity, 1));\\n}\\n.text-blue-400 {\\n  --tw-text-opacity: 1;\\n  color: rgb(96 165 250 / var(--tw-text-opacity, 1));\\n}\\n.text-card-foreground {\\n  color: hsl(var(--card-foreground));\\n}\\n.text-destructive {\\n  color: hsl(var(--destructive));\\n}\\n.text-destructive-foreground {\\n  color: hsl(var(--destructive-foreground));\\n}\\n.text-foreground {\\n  color: hsl(var(--foreground));\\n}\\n.text-foreground\\\\/70 {\\n  color: hsl(var(--foreground) / 0.7);\\n}\\n.text-foreground\\\\/80 {\\n  color: hsl(var(--foreground) / 0.8);\\n}\\n.text-green-400 {\\n  --tw-text-opacity: 1;\\n  color: rgb(74 222 128 / var(--tw-text-opacity, 1));\\n}\\n.text-muted-foreground {\\n  color: hsl(var(--muted-foreground));\\n}\\n.text-orange-400 {\\n  --tw-text-opacity: 1;\\n  color: rgb(251 146 60 / var(--tw-text-opacity, 1));\\n}\\n.text-primary {\\n  --tw-text-opacity: 1;\\n  color: rgb(254 137 31 / var(--tw-text-opacity, 1));\\n}\\n.text-primary-foreground {\\n  color: hsl(var(--primary-foreground));\\n}\\n.text-primary\\\\/70 {\\n  color: rgb(254 137 31 / 0.7);\\n}\\n.text-purple-400 {\\n  --tw-text-opacity: 1;\\n  color: rgb(192 132 252 / var(--tw-text-opacity, 1));\\n}\\n.text-red-400 {\\n  --tw-text-opacity: 1;\\n  color: rgb(248 113 113 / var(--tw-text-opacity, 1));\\n}\\n.text-secondary-foreground {\\n  color: hsl(var(--secondary-foreground));\\n}\\n.underline-offset-4 {\\n  text-underline-offset: 4px;\\n}\\n.antialiased {\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.shadow-sm {\\n  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\\n  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\n.outline {\\n  outline-style: solid;\\n}\\n.ring-offset-background {\\n  --tw-ring-offset-color: hsl(var(--background));\\n}\\n.filter {\\n  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\\n}\\n.backdrop-blur-sm {\\n  --tw-backdrop-blur: blur(4px);\\n  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\\n  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\\n}\\n.transition-all {\\n  transition-property: all;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\n.transition-colors {\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\n.transition-transform {\\n  transition-property: transform;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\n\\n.logo-text {\\n  background: linear-gradient(90deg, #FE891F 0%, #FEA94F 100%);\\n  -webkit-background-clip: text;\\n  -webkit-text-fill-color: transparent;\\n  background-clip: text;\\n  text-fill-color: transparent;\\n}\\n\\n.task-card {\\n  transition: transform 0.2s, box-shadow 0.2s;\\n}\\n\\n.task-card:hover {\\n  transform: translateY(-4px);\\n  box-shadow: 0 10px 25px -5px rgba(254, 137, 31, 0.1);\\n}\\n\\n.dashboard-card {\\n  transition: all 0.2s ease;\\n  border: 1px solid rgba(254, 137, 31, 0.1);\\n}\\n\\n.dashboard-card:hover {\\n  border-color: rgba(254, 137, 31, 0.3);\\n  background-color: rgba(254, 137, 31, 0.05);\\n}\\n\\n\\n\\n.file\\\\:border-0::file-selector-button {\\n  border-width: 0px;\\n}\\n\\n\\n\\n.file\\\\:bg-transparent::file-selector-button {\\n  background-color: transparent;\\n}\\n\\n\\n\\n.file\\\\:text-sm::file-selector-button {\\n  font-size: 0.875rem;\\n  line-height: 1.25rem;\\n}\\n\\n\\n\\n.file\\\\:font-medium::file-selector-button {\\n  font-weight: 500;\\n}\\n\\n\\n\\n.placeholder\\\\:text-muted-foreground::placeholder {\\n  color: hsl(var(--muted-foreground));\\n}\\n\\n\\n\\n.hover\\\\:bg-accent:hover {\\n  background-color: hsl(var(--accent));\\n}\\n\\n\\n\\n.hover\\\\:bg-destructive\\\\/80:hover {\\n  background-color: hsl(var(--destructive) / 0.8);\\n}\\n\\n\\n\\n.hover\\\\:bg-destructive\\\\/90:hover {\\n  background-color: hsl(var(--destructive) / 0.9);\\n}\\n\\n\\n\\n.hover\\\\:bg-primary\\\\/80:hover {\\n  background-color: rgb(254 137 31 / 0.8);\\n}\\n\\n\\n\\n.hover\\\\:bg-primary\\\\/90:hover {\\n  background-color: rgb(254 137 31 / 0.9);\\n}\\n\\n\\n\\n.hover\\\\:bg-secondary\\\\/50:hover {\\n  background-color: hsl(var(--secondary) / 0.5);\\n}\\n\\n\\n\\n.hover\\\\:bg-secondary\\\\/80:hover {\\n  background-color: hsl(var(--secondary) / 0.8);\\n}\\n\\n\\n\\n.hover\\\\:text-accent-foreground:hover {\\n  color: hsl(var(--accent-foreground));\\n}\\n\\n\\n\\n.hover\\\\:text-primary:hover {\\n  --tw-text-opacity: 1;\\n  color: rgb(254 137 31 / var(--tw-text-opacity, 1));\\n}\\n\\n\\n\\n.hover\\\\:text-primary\\\\/90:hover {\\n  color: rgb(254 137 31 / 0.9);\\n}\\n\\n\\n\\n.hover\\\\:underline:hover {\\n  text-decoration-line: underline;\\n}\\n\\n\\n\\n.focus\\\\:border-primary:focus {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(254 137 31 / var(--tw-border-opacity, 1));\\n}\\n\\n\\n\\n.focus\\\\:outline-none:focus {\\n  outline: 2px solid transparent;\\n  outline-offset: 2px;\\n}\\n\\n\\n\\n.focus\\\\:ring-2:focus {\\n  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\\n}\\n\\n\\n\\n.focus\\\\:ring-primary:focus {\\n  --tw-ring-opacity: 1;\\n  --tw-ring-color: rgb(254 137 31 / var(--tw-ring-opacity, 1));\\n}\\n\\n\\n\\n.focus\\\\:ring-ring:focus {\\n  --tw-ring-color: hsl(var(--ring));\\n}\\n\\n\\n\\n.focus\\\\:ring-offset-2:focus {\\n  --tw-ring-offset-width: 2px;\\n}\\n\\n\\n\\n.focus-visible\\\\:outline-none:focus-visible {\\n  outline: 2px solid transparent;\\n  outline-offset: 2px;\\n}\\n\\n\\n\\n.focus-visible\\\\:ring-2:focus-visible {\\n  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\\n}\\n\\n\\n\\n.focus-visible\\\\:ring-ring:focus-visible {\\n  --tw-ring-color: hsl(var(--ring));\\n}\\n\\n\\n\\n.focus-visible\\\\:ring-offset-2:focus-visible {\\n  --tw-ring-offset-width: 2px;\\n}\\n\\n\\n\\n.disabled\\\\:pointer-events-none:disabled {\\n  pointer-events: none;\\n}\\n\\n\\n\\n.disabled\\\\:cursor-not-allowed:disabled {\\n  cursor: not-allowed;\\n}\\n\\n\\n\\n.disabled\\\\:opacity-50:disabled {\\n  opacity: 0.5;\\n}\\n\\n\\n\\n.group:hover .group-hover\\\\:translate-x-1 {\\n  --tw-translate-x: 0.25rem;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n\\n\\n\\n.data-\\\\[state\\\\=active\\\\]\\\\:bg-background[data-state=\\\"active\\\"] {\\n  background-color: hsl(var(--background));\\n}\\n\\n\\n\\n.data-\\\\[state\\\\=active\\\\]\\\\:text-foreground[data-state=\\\"active\\\"] {\\n  color: hsl(var(--foreground));\\n}\\n\\n\\n\\n.data-\\\\[state\\\\=active\\\\]\\\\:shadow-sm[data-state=\\\"active\\\"] {\\n  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\\n  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\n\\n\\n\\n@media (min-width: 640px) {\\n\\n  .sm\\\\:mb-0 {\\n    margin-bottom: 0px;\\n  }\\n\\n  .sm\\\\:ml-4 {\\n    margin-left: 1rem;\\n  }\\n\\n  .sm\\\\:grid-cols-2 {\\n    grid-template-columns: repeat(2, minmax(0, 1fr));\\n  }\\n\\n  .sm\\\\:grid-cols-3 {\\n    grid-template-columns: repeat(3, minmax(0, 1fr));\\n  }\\n\\n  .sm\\\\:flex-row {\\n    flex-direction: row;\\n  }\\n\\n  .sm\\\\:items-center {\\n    align-items: center;\\n  }\\n\\n  .sm\\\\:px-6 {\\n    padding-left: 1.5rem;\\n    padding-right: 1.5rem;\\n  }\\n}\\n\\n\\n\\n@media (min-width: 768px) {\\n\\n  .md\\\\:flex {\\n    display: flex;\\n  }\\n\\n  .md\\\\:flex-row {\\n    flex-direction: row;\\n  }\\n\\n  .md\\\\:items-center {\\n    align-items: center;\\n  }\\n\\n  .md\\\\:text-5xl {\\n    font-size: 3rem;\\n    line-height: 1;\\n  }\\n}\\n\\n\\n\\n@media (min-width: 1024px) {\\n\\n  .lg\\\\:grid-cols-3 {\\n    grid-template-columns: repeat(3, minmax(0, 1fr));\\n  }\\n\\n  .lg\\\\:px-8 {\\n    padding-left: 2rem;\\n    padding-right: 2rem;\\n  }\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/styles/globals.css\"],\"names\":[],\"mappings\":\"AAAA;EAAA,wBAAc;EAAd,wBAAc;EAAd,mBAAc;EAAd,mBAAc;EAAd,cAAc;EAAd,cAAc;EAAd,cAAc;EAAd,eAAc;EAAd,eAAc;EAAd,aAAc;EAAd,aAAc;EAAd,kBAAc;EAAd,sCAAc;EAAd,8BAAc;EAAd,6BAAc;EAAd,4BAAc;EAAd,eAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,kBAAc;EAAd,2BAAc;EAAd,4BAAc;EAAd,sCAAc;EAAd,kCAAc;EAAd,2BAAc;EAAd,sBAAc;EAAd,8BAAc;EAAd,YAAc;EAAd,kBAAc;EAAd,gBAAc;EAAd,iBAAc;EAAd,kBAAc;EAAd,cAAc;EAAd,gBAAc;EAAd,aAAc;EAAd,mBAAc;EAAd,qBAAc;EAAd,2BAAc;EAAd,yBAAc;EAAd,0BAAc;EAAd,2BAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,yBAAc;EAAd,sBAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd;AAAc;;AAAd;EAAA,wBAAc;EAAd,wBAAc;EAAd,mBAAc;EAAd,mBAAc;EAAd,cAAc;EAAd,cAAc;EAAd,cAAc;EAAd,eAAc;EAAd,eAAc;EAAd,aAAc;EAAd,aAAc;EAAd,kBAAc;EAAd,sCAAc;EAAd,8BAAc;EAAd,6BAAc;EAAd,4BAAc;EAAd,eAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,kBAAc;EAAd,2BAAc;EAAd,4BAAc;EAAd,sCAAc;EAAd,kCAAc;EAAd,2BAAc;EAAd,sBAAc;EAAd,8BAAc;EAAd,YAAc;EAAd,kBAAc;EAAd,gBAAc;EAAd,iBAAc;EAAd,kBAAc;EAAd,cAAc;EAAd,gBAAc;EAAd,aAAc;EAAd,mBAAc;EAAd,qBAAc;EAAd,2BAAc;EAAd,yBAAc;EAAd,0BAAc;EAAd,2BAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,yBAAc;EAAd,sBAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd;AAAc,CAAd;;CAAc,CAAd;;;CAAc;;AAAd;;;EAAA,sBAAc,EAAd,MAAc;EAAd,eAAc,EAAd,MAAc;EAAd,mBAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;AAAA;;AAAd;;EAAA,gBAAc;AAAA;;AAAd;;;;;;;;CAAc;;AAAd;;EAAA,gBAAc,EAAd,MAAc;EAAd,8BAAc,EAAd,MAAc;EAAd,gBAAc,EAAd,MAAc;EAAd,WAAc,EAAd,MAAc;EAAd,+HAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,+BAAc,EAAd,MAAc;EAAd,wCAAc,EAAd,MAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,SAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;AAAA;;AAAd;;;;CAAc;;AAAd;EAAA,SAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,iCAAc;AAAA;;AAAd;;CAAc;;AAAd;;;;;;EAAA,kBAAc;EAAd,oBAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,cAAc;EAAd,wBAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,mBAAc;AAAA;;AAAd;;;;;CAAc;;AAAd;;;;EAAA,+GAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,+BAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,cAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,cAAc;EAAd,cAAc;EAAd,kBAAc;EAAd,wBAAc;AAAA;;AAAd;EAAA,eAAc;AAAA;;AAAd;EAAA,WAAc;AAAA;;AAAd;;;;CAAc;;AAAd;EAAA,cAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;EAAd,yBAAc,EAAd,MAAc;AAAA;;AAAd;;;;CAAc;;AAAd;;;;;EAAA,oBAAc,EAAd,MAAc;EAAd,8BAAc,EAAd,MAAc;EAAd,gCAAc,EAAd,MAAc;EAAd,eAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;EAAd,uBAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;EAAd,SAAc,EAAd,MAAc;EAAd,UAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,oBAAc;AAAA;;AAAd;;;CAAc;;AAAd;;;;EAAA,0BAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,sBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,aAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,gBAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,wBAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,YAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,6BAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,wBAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,0BAAc,EAAd,MAAc;EAAd,aAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,kBAAc;AAAA;;AAAd;;CAAc;;AAAd;;;;;;;;;;;;;EAAA,SAAc;AAAA;;AAAd;EAAA,SAAc;EAAd,UAAc;AAAA;;AAAd;EAAA,UAAc;AAAA;;AAAd;;;EAAA,gBAAc;EAAd,SAAc;EAAd,UAAc;AAAA;;AAAd;;CAAc;AAAd;EAAA,UAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,gBAAc;AAAA;;AAAd;;;CAAc;;AAAd;;EAAA,UAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,eAAc;AAAA;;AAAd;;CAAc;AAAd;EAAA,eAAc;AAAA;;AAAd;;;;CAAc;;AAAd;;;;;;;;EAAA,cAAc,EAAd,MAAc;EAAd,sBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,eAAc;EAAd,YAAc;AAAA;;AAAd,wEAAc;AAAd;EAAA,aAAc;AAAA;EAAd;IAAA,0BAAc;IAAd,sBAAc;;IAAd,oBAAc;IAAd,2BAAc;;IAAd,uBAAc;IAAd,8BAAc;;IAAd,qBAAc;IAAd,8BAAc;;IAAd,2BAAc;IAAd,gCAAc;;IAAd,uBAAc;IAAd,gCAAc;;IAAd,wBAAc;IAAd,6BAAc;;IAAd,4BAAc;IAAd,kCAAc;;IAAd,wBAAc;IAAd,uBAAc;IAAd,sBAAc;;IAAd,gBAAc;EAAA;EAAd;EAAA;AAAc;EAAd;EAAA,wCAAc;EAAd;AAAc;EAAd;EAAA,gCAAc;EAAd;AAAc;EAAd;EAAA,wCAAc;EAAd;AAAc;AAEd;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;;EAAA;IAAA;EAAmB;AAAA;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,uDAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,sDAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,oDAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,gEAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,8DAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,4DAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,4DAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,gBAAmB;EAAnB,uBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,mCAAmB;EAAnB;AAAmB;AAAnB;EAAA,0CAAmB;EAAnB,uDAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,6BAAmB;EAAnB,+QAAmB;EAAnB;AAAmB;AAAnB;EAAA,wBAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;AAAnB;EAAA,+FAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;AAAnB;EAAA,8BAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;;AA6EnB;EACE,4DAA4D;EAC5D,6BAA6B;EAC7B,oCAAoC;EACpC,qBAAqB;EACrB,4BAA4B;AAC9B;;AAEA;EACE,2CAA2C;AAC7C;;AAEA;EACE,2BAA2B;EAC3B,oDAAoD;AACtD;;AAEA;EACE,yBAAyB;EACzB,yCAAyC;AAC3C;;AAEA;EACE,qCAAqC;EACrC,0CAA0C;AAC5C;;;;AAxGA;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA,mBAmHC;EAnHD;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA,oBAmHC;EAnHD;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA,sBAmHC;EAnHD;AAmHC;;;;AAnHD;EAAA,8BAmHC;EAnHD;AAmHC;;;;AAnHD;EAAA,2GAmHC;EAnHD,yGAmHC;EAnHD;AAmHC;;;;AAnHD;EAAA,oBAmHC;EAnHD;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA,8BAmHC;EAnHD;AAmHC;;;;AAnHD;EAAA,2GAmHC;EAnHD,yGAmHC;EAnHD;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA,yBAmHC;EAnHD;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA;AAmHC;;;;AAnHD;EAAA,0CAmHC;EAnHD,uDAmHC;EAnHD;AAmHC;;;;AAnHD;;EAAA;IAAA;EAmHC;;EAnHD;IAAA;EAmHC;;EAnHD;IAAA;EAmHC;;EAnHD;IAAA;EAmHC;;EAnHD;IAAA;EAmHC;;EAnHD;IAAA;EAmHC;;EAnHD;IAAA,oBAmHC;IAnHD;EAmHC;AAAA;;;;AAnHD;;EAAA;IAAA;EAmHC;;EAnHD;IAAA;EAmHC;;EAnHD;IAAA;EAmHC;;EAnHD;IAAA,eAmHC;IAnHD;EAmHC;AAAA;;;;AAnHD;;EAAA;IAAA;EAmHC;;EAnHD;IAAA,kBAmHC;IAnHD;EAmHC;AAAA\",\"sourcesContent\":[\"@tailwind base;\\n@tailwind components;\\n@tailwind utilities;\\n \\n@layer base {\\n  :root {\\n    --background: 240 10% 3.9%;\\n    --foreground: 0 0% 98%;\\n    \\n    --card: 240 10% 5.9%;\\n    --card-foreground: 0 0% 98%;\\n    \\n    --popover: 240 10% 5.9%;\\n    --popover-foreground: 0 0% 98%;\\n    \\n    --primary: 30 99% 56%;\\n    --primary-foreground: 0 0% 10%;\\n    \\n    --secondary: 240 3.7% 15.9%;\\n    --secondary-foreground: 0 0% 98%;\\n    \\n    --muted: 240 3.7% 15.9%;\\n    --muted-foreground: 240 5% 64.9%;\\n    \\n    --accent: 240 3.7% 15.9%;\\n    --accent-foreground: 0 0% 98%;\\n    \\n    --destructive: 0 62.8% 30.6%;\\n    --destructive-foreground: 0 0% 98%;\\n    \\n    --border: 240 3.7% 15.9%;\\n    --input: 240 3.7% 15.9%;\\n    --ring: 240 4.9% 83.9%;\\n    \\n    --radius: 0.5rem;\\n  }\\n \\n  .light {\\n    --background: 0 0% 100%;\\n    --foreground: 240 10% 3.9%;\\n    \\n    --card: 0 0% 100%;\\n    --card-foreground: 240 10% 3.9%;\\n    \\n    --popover: 0 0% 100%;\\n    --popover-foreground: 240 10% 3.9%;\\n    \\n    --primary: 30 99% 56%;\\n    --primary-foreground: 0 0% 98%;\\n    \\n    --secondary: 240 4.8% 95.9%;\\n    --secondary-foreground: 240 5.9% 10%;\\n    \\n    --muted: 240 4.8% 95.9%;\\n    --muted-foreground: 240 3.8% 46.1%;\\n    \\n    --accent: 240 4.8% 95.9%;\\n    --accent-foreground: 240 5.9% 10%;\\n    \\n    --destructive: 0 84.2% 60.2%;\\n    --destructive-foreground: 0 0% 98%;\\n    \\n    --border: 240 5.9% 90%;\\n    --input: 240 5.9% 90%;\\n    --ring: 30 99% 56%;\\n    \\n    --radius: 0.5rem;\\n  }\\n}\\n \\n@layer base {\\n  * {\\n    @apply border-border;\\n  }\\n  body {\\n    @apply bg-background text-foreground;\\n  }\\n}\\n\\n.logo-text {\\n  background: linear-gradient(90deg, #FE891F 0%, #FEA94F 100%);\\n  -webkit-background-clip: text;\\n  -webkit-text-fill-color: transparent;\\n  background-clip: text;\\n  text-fill-color: transparent;\\n}\\n\\n.task-card {\\n  transition: transform 0.2s, box-shadow 0.2s;\\n}\\n\\n.task-card:hover {\\n  transform: translateY(-4px);\\n  box-shadow: 0 10px 25px -5px rgba(254, 137, 31, 0.1);\\n}\\n\\n.dashboard-card {\\n  transition: all 0.2s ease;\\n  border: 1px solid rgba(254, 137, 31, 0.1);\\n}\\n\\n.dashboard-card:hover {\\n  border-color: rgba(254, 137, 31, 0.3);\\n  background-color: rgba(254, 137, 31, 0.05);\\n}\\n\\n\\n\\n@layer base {\\n  * {\\n    @apply border-border outline-ring/50;\\n  }\\n  body {\\n    @apply bg-background text-foreground;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./src/styles/globals.css\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return '@media '.concat(item[2], ' {').concat(content, '}');\n            }\n            return content;\n        }).join('');\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === 'string') {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    ''\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = ''.concat(mediaQuery, ' and ').concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || '' // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return '/*# sourceURL='.concat(cssMapping.sourceRoot || '').concat(source, ' */');\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join('\\n');\n    }\n    return [\n        content\n    ].join('\\n');\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,'.concat(base64);\n    return '/*# '.concat(data, ' */');\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL3J1bnRpbWUvYXBpLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QscUJBQXFCO0FBQ3pFO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGlCQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixxQkFBcUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGNBQWM7QUFDckU7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiL2hvbWUvYmlzaG9wYmV0aGVsL2RldmFzaWduLWJ1aWxkLXYxL2RldmFzaWduLXBtLWZyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL3J1bnRpbWUvYXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovIC8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXCJ1c2Ugc3RyaWN0XCI7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuICAgIHZhciBsaXN0ID0gW10gLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICAgIDtcbiAgICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbihpdGVtKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVzZS1iZWZvcmUtZGVmaW5lXG4gICAgICAgICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcbiAgICAgICAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICdAbWVkaWEgJy5jb25jYXQoaXRlbVsyXSwgJyB7JykuY29uY2F0KGNvbnRlbnQsICd9Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICAgICAgfSkuam9pbignJyk7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETzogZml4IHR5cGVcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICAgICAgICBtb2R1bGVzID0gW1xuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9kdWxlcyxcbiAgICAgICAgICAgICAgICAgICAgJydcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICBdO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgICAgIGlmIChkZWR1cGUpIHtcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuICAgICAgICAgICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspe1xuICAgICAgICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuICAgICAgICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICAgICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpdGVtWzJdID0gJycuY29uY2F0KG1lZGlhUXVlcnksICcgYW5kICcpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBsaXN0O1xufTtcbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gICAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgIDtcbiAgICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gICAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH1cbiAgICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcbiAgICAgICAgICAgIHJldHVybiAnLyojIHNvdXJjZVVSTD0nLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgJycpLmNvbmNhdChzb3VyY2UsICcgKi8nKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb250ZW50XG4gICAgICAgIF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXG4gICAgICAgIF0pLmpvaW4oJ1xcbicpO1xuICAgIH1cbiAgICByZXR1cm4gW1xuICAgICAgICBjb250ZW50XG4gICAgXS5qb2luKCdcXG4nKTtcbn0gLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuICAgIHZhciBkYXRhID0gJ3NvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LCcuY29uY2F0KGJhc2U2NCk7XG4gICAgcmV0dXJuICcvKiMgJy5jb25jYXQoZGF0YSwgJyAqLycpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"(pages-dir-browser)/./src/pages/_app.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtY2xpZW50LXBhZ2VzLWxvYWRlci5qcz9hYnNvbHV0ZVBhZ2VQYXRoPXByaXZhdGUtbmV4dC1wYWdlcyUyRl9hcHAmcGFnZT0lMkZfYXBwISIsIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHlFQUF5QjtBQUNoRDtBQUNBO0FBQ0EsT0FBTyxJQUFVO0FBQ2pCLE1BQU0sVUFBVTtBQUNoQjtBQUNBLE9BQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === 'undefined') {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === 'undefined') {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + ' ' + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement('style');\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === 'undefined') {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === 'function') {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || 'head');\n        if (!target) {\n            throw Object.defineProperty(new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\"), \"__NEXT_ERROR_CODE\", {\n                value: \"E245\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join('\\n');\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? '' : obj.media ? '@media ' + obj.media + ' {' + obj.css + '}' : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute('media', media);\n    } else {\n        style.removeAttribute('media');\n    }\n    if (sourceMap && typeof btoa !== 'undefined') {\n        css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */';\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== 'boolean') {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== '[object Array]') {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/head.js":
/*!***********************************!*\
  !*** ./node_modules/next/head.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/shared/lib/head */ \"(pages-dir-browser)/./node_modules/next/dist/shared/lib/head.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2hlYWQuanMiLCJtYXBwaW5ncyI6IkFBQUEscUlBQWtEIiwic291cmNlcyI6WyIvaG9tZS9iaXNob3BiZXRoZWwvZGV2YXNpZ24tYnVpbGQtdjEvZGV2YXNpZ24tcG0tZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvaGVhZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9zaGFyZWQvbGliL2hlYWQnKVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/head.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE$2\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PORTAL_TYPE:\n          return \"Portal\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function disabledLog() {}\n    function disableLogs() {\n      if (0 === disabledDepth) {\n        prevLog = console.log;\n        prevInfo = console.info;\n        prevWarn = console.warn;\n        prevError = console.error;\n        prevGroup = console.group;\n        prevGroupCollapsed = console.groupCollapsed;\n        prevGroupEnd = console.groupEnd;\n        var props = {\n          configurable: !0,\n          enumerable: !0,\n          value: disabledLog,\n          writable: !0\n        };\n        Object.defineProperties(console, {\n          info: props,\n          log: props,\n          warn: props,\n          error: props,\n          group: props,\n          groupCollapsed: props,\n          groupEnd: props\n        });\n      }\n      disabledDepth++;\n    }\n    function reenableLogs() {\n      disabledDepth--;\n      if (0 === disabledDepth) {\n        var props = { configurable: !0, enumerable: !0, writable: !0 };\n        Object.defineProperties(console, {\n          log: assign({}, props, { value: prevLog }),\n          info: assign({}, props, { value: prevInfo }),\n          warn: assign({}, props, { value: prevWarn }),\n          error: assign({}, props, { value: prevError }),\n          group: assign({}, props, { value: prevGroup }),\n          groupCollapsed: assign({}, props, { value: prevGroupCollapsed }),\n          groupEnd: assign({}, props, { value: prevGroupEnd })\n        });\n      }\n      0 > disabledDepth &&\n        console.error(\n          \"disabledDepth fell below zero. This is a bug in React. Please file an issue.\"\n        );\n    }\n    function describeBuiltInComponentFrame(name) {\n      if (void 0 === prefix)\n        try {\n          throw Error();\n        } catch (x) {\n          var match = x.stack.trim().match(/\\n( *(at )?)/);\n          prefix = (match && match[1]) || \"\";\n          suffix =\n            -1 < x.stack.indexOf(\"\\n    at\")\n              ? \" (<anonymous>)\"\n              : -1 < x.stack.indexOf(\"@\")\n                ? \"@unknown:0:0\"\n                : \"\";\n        }\n      return \"\\n\" + prefix + name + suffix;\n    }\n    function describeNativeComponentFrame(fn, construct) {\n      if (!fn || reentry) return \"\";\n      var frame = componentFrameCache.get(fn);\n      if (void 0 !== frame) return frame;\n      reentry = !0;\n      frame = Error.prepareStackTrace;\n      Error.prepareStackTrace = void 0;\n      var previousDispatcher = null;\n      previousDispatcher = ReactSharedInternals.H;\n      ReactSharedInternals.H = null;\n      disableLogs();\n      try {\n        var RunInRootFrame = {\n          DetermineComponentFrameRoot: function () {\n            try {\n              if (construct) {\n                var Fake = function () {\n                  throw Error();\n                };\n                Object.defineProperty(Fake.prototype, \"props\", {\n                  set: function () {\n                    throw Error();\n                  }\n                });\n                if (\"object\" === typeof Reflect && Reflect.construct) {\n                  try {\n                    Reflect.construct(Fake, []);\n                  } catch (x) {\n                    var control = x;\n                  }\n                  Reflect.construct(fn, [], Fake);\n                } else {\n                  try {\n                    Fake.call();\n                  } catch (x$0) {\n                    control = x$0;\n                  }\n                  fn.call(Fake.prototype);\n                }\n              } else {\n                try {\n                  throw Error();\n                } catch (x$1) {\n                  control = x$1;\n                }\n                (Fake = fn()) &&\n                  \"function\" === typeof Fake.catch &&\n                  Fake.catch(function () {});\n              }\n            } catch (sample) {\n              if (sample && control && \"string\" === typeof sample.stack)\n                return [sample.stack, control.stack];\n            }\n            return [null, null];\n          }\n        };\n        RunInRootFrame.DetermineComponentFrameRoot.displayName =\n          \"DetermineComponentFrameRoot\";\n        var namePropDescriptor = Object.getOwnPropertyDescriptor(\n          RunInRootFrame.DetermineComponentFrameRoot,\n          \"name\"\n        );\n        namePropDescriptor &&\n          namePropDescriptor.configurable &&\n          Object.defineProperty(\n            RunInRootFrame.DetermineComponentFrameRoot,\n            \"name\",\n            { value: \"DetermineComponentFrameRoot\" }\n          );\n        var _RunInRootFrame$Deter =\n            RunInRootFrame.DetermineComponentFrameRoot(),\n          sampleStack = _RunInRootFrame$Deter[0],\n          controlStack = _RunInRootFrame$Deter[1];\n        if (sampleStack && controlStack) {\n          var sampleLines = sampleStack.split(\"\\n\"),\n            controlLines = controlStack.split(\"\\n\");\n          for (\n            _RunInRootFrame$Deter = namePropDescriptor = 0;\n            namePropDescriptor < sampleLines.length &&\n            !sampleLines[namePropDescriptor].includes(\n              \"DetermineComponentFrameRoot\"\n            );\n\n          )\n            namePropDescriptor++;\n          for (\n            ;\n            _RunInRootFrame$Deter < controlLines.length &&\n            !controlLines[_RunInRootFrame$Deter].includes(\n              \"DetermineComponentFrameRoot\"\n            );\n\n          )\n            _RunInRootFrame$Deter++;\n          if (\n            namePropDescriptor === sampleLines.length ||\n            _RunInRootFrame$Deter === controlLines.length\n          )\n            for (\n              namePropDescriptor = sampleLines.length - 1,\n                _RunInRootFrame$Deter = controlLines.length - 1;\n              1 <= namePropDescriptor &&\n              0 <= _RunInRootFrame$Deter &&\n              sampleLines[namePropDescriptor] !==\n                controlLines[_RunInRootFrame$Deter];\n\n            )\n              _RunInRootFrame$Deter--;\n          for (\n            ;\n            1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter;\n            namePropDescriptor--, _RunInRootFrame$Deter--\n          )\n            if (\n              sampleLines[namePropDescriptor] !==\n              controlLines[_RunInRootFrame$Deter]\n            ) {\n              if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {\n                do\n                  if (\n                    (namePropDescriptor--,\n                    _RunInRootFrame$Deter--,\n                    0 > _RunInRootFrame$Deter ||\n                      sampleLines[namePropDescriptor] !==\n                        controlLines[_RunInRootFrame$Deter])\n                  ) {\n                    var _frame =\n                      \"\\n\" +\n                      sampleLines[namePropDescriptor].replace(\n                        \" at new \",\n                        \" at \"\n                      );\n                    fn.displayName &&\n                      _frame.includes(\"<anonymous>\") &&\n                      (_frame = _frame.replace(\"<anonymous>\", fn.displayName));\n                    \"function\" === typeof fn &&\n                      componentFrameCache.set(fn, _frame);\n                    return _frame;\n                  }\n                while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter);\n              }\n              break;\n            }\n        }\n      } finally {\n        (reentry = !1),\n          (ReactSharedInternals.H = previousDispatcher),\n          reenableLogs(),\n          (Error.prepareStackTrace = frame);\n      }\n      sampleLines = (sampleLines = fn ? fn.displayName || fn.name : \"\")\n        ? describeBuiltInComponentFrame(sampleLines)\n        : \"\";\n      \"function\" === typeof fn && componentFrameCache.set(fn, sampleLines);\n      return sampleLines;\n    }\n    function describeUnknownElementTypeFrameInDEV(type) {\n      if (null == type) return \"\";\n      if (\"function\" === typeof type) {\n        var prototype = type.prototype;\n        return describeNativeComponentFrame(\n          type,\n          !(!prototype || !prototype.isReactComponent)\n        );\n      }\n      if (\"string\" === typeof type) return describeBuiltInComponentFrame(type);\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame(\"Suspense\");\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame(\"SuspenseList\");\n      }\n      if (\"object\" === typeof type)\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return (type = describeNativeComponentFrame(type.render, !1)), type;\n          case REACT_MEMO_TYPE:\n            return describeUnknownElementTypeFrameInDEV(type.type);\n          case REACT_LAZY_TYPE:\n            prototype = type._payload;\n            type = type._init;\n            try {\n              return describeUnknownElementTypeFrameInDEV(type(prototype));\n            } catch (x) {}\n        }\n      return \"\";\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(type, key, self, source, owner, props) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      if (\n        \"string\" === typeof type ||\n        \"function\" === typeof type ||\n        type === REACT_FRAGMENT_TYPE ||\n        type === REACT_PROFILER_TYPE ||\n        type === REACT_STRICT_MODE_TYPE ||\n        type === REACT_SUSPENSE_TYPE ||\n        type === REACT_SUSPENSE_LIST_TYPE ||\n        type === REACT_OFFSCREEN_TYPE ||\n        (\"object\" === typeof type &&\n          null !== type &&\n          (type.$$typeof === REACT_LAZY_TYPE ||\n            type.$$typeof === REACT_MEMO_TYPE ||\n            type.$$typeof === REACT_CONTEXT_TYPE ||\n            type.$$typeof === REACT_CONSUMER_TYPE ||\n            type.$$typeof === REACT_FORWARD_REF_TYPE ||\n            type.$$typeof === REACT_CLIENT_REFERENCE$1 ||\n            void 0 !== type.getModuleId))\n      ) {\n        var children = config.children;\n        if (void 0 !== children)\n          if (isStaticChildren)\n            if (isArrayImpl(children)) {\n              for (\n                isStaticChildren = 0;\n                isStaticChildren < children.length;\n                isStaticChildren++\n              )\n                validateChildKeys(children[isStaticChildren], type);\n              Object.freeze && Object.freeze(children);\n            } else\n              console.error(\n                \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n              );\n          else validateChildKeys(children, type);\n      } else {\n        children = \"\";\n        if (\n          void 0 === type ||\n          (\"object\" === typeof type &&\n            null !== type &&\n            0 === Object.keys(type).length)\n        )\n          children +=\n            \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\";\n        null === type\n          ? (isStaticChildren = \"null\")\n          : isArrayImpl(type)\n            ? (isStaticChildren = \"array\")\n            : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE\n              ? ((isStaticChildren =\n                  \"<\" +\n                  (getComponentNameFromType(type.type) || \"Unknown\") +\n                  \" />\"),\n                (children =\n                  \" Did you accidentally export a JSX literal instead of a component?\"))\n              : (isStaticChildren = typeof type);\n        console.error(\n          \"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",\n          isStaticChildren,\n          children\n        );\n      }\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(type, children, self, source, getOwner(), maybeKey);\n    }\n    function validateChildKeys(node, parentType) {\n      if (\n        \"object\" === typeof node &&\n        node &&\n        node.$$typeof !== REACT_CLIENT_REFERENCE\n      )\n        if (isArrayImpl(node))\n          for (var i = 0; i < node.length; i++) {\n            var child = node[i];\n            isValidElement(child) && validateExplicitKey(child, parentType);\n          }\n        else if (isValidElement(node))\n          node._store && (node._store.validated = 1);\n        else if (\n          (null === node || \"object\" !== typeof node\n            ? (i = null)\n            : ((i =\n                (MAYBE_ITERATOR_SYMBOL && node[MAYBE_ITERATOR_SYMBOL]) ||\n                node[\"@@iterator\"]),\n              (i = \"function\" === typeof i ? i : null)),\n          \"function\" === typeof i &&\n            i !== node.entries &&\n            ((i = i.call(node)), i !== node))\n        )\n          for (; !(node = i.next()).done; )\n            isValidElement(node.value) &&\n              validateExplicitKey(node.value, parentType);\n    }\n    function isValidElement(object) {\n      return (\n        \"object\" === typeof object &&\n        null !== object &&\n        object.$$typeof === REACT_ELEMENT_TYPE\n      );\n    }\n    function validateExplicitKey(element, parentType) {\n      if (\n        element._store &&\n        !element._store.validated &&\n        null == element.key &&\n        ((element._store.validated = 1),\n        (parentType = getCurrentComponentErrorInfo(parentType)),\n        !ownerHasKeyUseWarning[parentType])\n      ) {\n        ownerHasKeyUseWarning[parentType] = !0;\n        var childOwner = \"\";\n        element &&\n          null != element._owner &&\n          element._owner !== getOwner() &&\n          ((childOwner = null),\n          \"number\" === typeof element._owner.tag\n            ? (childOwner = getComponentNameFromType(element._owner.type))\n            : \"string\" === typeof element._owner.name &&\n              (childOwner = element._owner.name),\n          (childOwner = \" It was passed a child from \" + childOwner + \".\"));\n        var prevGetCurrentStack = ReactSharedInternals.getCurrentStack;\n        ReactSharedInternals.getCurrentStack = function () {\n          var stack = describeUnknownElementTypeFrameInDEV(element.type);\n          prevGetCurrentStack && (stack += prevGetCurrentStack() || \"\");\n          return stack;\n        };\n        console.error(\n          'Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information.',\n          parentType,\n          childOwner\n        );\n        ReactSharedInternals.getCurrentStack = prevGetCurrentStack;\n      }\n    }\n    function getCurrentComponentErrorInfo(parentType) {\n      var info = \"\",\n        owner = getOwner();\n      owner &&\n        (owner = getComponentNameFromType(owner.type)) &&\n        (info = \"\\n\\nCheck the render method of `\" + owner + \"`.\");\n      info ||\n        ((parentType = getComponentNameFromType(parentType)) &&\n          (info =\n            \"\\n\\nCheck the top-level render call using <\" + parentType + \">.\"));\n      return info;\n    }\n    var React = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\"),\n      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,\n      REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      assign = Object.assign,\n      REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"),\n      isArrayImpl = Array.isArray,\n      disabledDepth = 0,\n      prevLog,\n      prevInfo,\n      prevWarn,\n      prevError,\n      prevGroup,\n      prevGroupCollapsed,\n      prevGroupEnd;\n    disabledLog.__reactDisabledLog = !0;\n    var prefix,\n      suffix,\n      reentry = !1;\n    var componentFrameCache = new (\n      \"function\" === typeof WeakMap ? WeakMap : Map\n    )();\n    var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var didWarnAboutKeySpread = {},\n      ownerHasKeyUseWarning = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      return jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self);\n    };\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(pages-dir-browser)/./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLDJLQUFzRTtBQUN4RSIsInNvdXJjZXMiOlsiL2hvbWUvYmlzaG9wYmV0aGVsL2RldmFzaWduLWJ1aWxkLXYxL2RldmFzaWduLXBtLWZyb250ZW5kL25vZGVfbW9kdWxlcy9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5wcm9kdWN0aW9uLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/context/AppContext.tsx":
/*!************************************!*\
  !*** ./src/context/AppContext.tsx ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppProvider: () => (/* binding */ AppProvider),\n/* harmony export */   useApp: () => (/* binding */ useApp)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stellar/freighter-api */ \"(pages-dir-browser)/./node_modules/@stellar/freighter-api/build/index.min.js\");\n/* harmony import */ var _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_stellar_freighter_api__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utils_soroban__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/soroban */ \"(pages-dir-browser)/./src/utils/soroban.ts\");\n/* harmony import */ var _utils_contractService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/contractService */ \"(pages-dir-browser)/./src/utils/contractService.ts\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n// Transform contract types to frontend types\nfunction mapContractProjectToProject(project) {\n    return {\n        id: project.id,\n        name: project.name,\n        managerAddress: project.manager,\n        repositoryUrl: project.repository_url,\n        totalTasks: project.total_tasks\n    };\n}\nfunction mapContractTaskToTask(task) {\n    return {\n        id: task.id,\n        title: task.title,\n        description: task.description,\n        compensation: parseInt(task.compensation, 10),\n        projectId: task.project_id,\n        status: task.status,\n        applicants: task.applicants,\n        assignedDeveloper: task.assigned_developer || undefined,\n        completionDate: task.completion_date || undefined\n    };\n}\n// Create the context with default values\nconst AppContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    isWalletConnected: false,\n    userAddress: null,\n    connectWallet: async ()=>{},\n    disconnectWallet: ()=>{},\n    userProjects: [],\n    userTasks: {},\n    loadUserProjects: async ()=>{},\n    loadProjectTasks: async ()=>{},\n    createProject: async ()=>null,\n    createTask: async ()=>null,\n    applyForTask: async ()=>false,\n    startTask: async ()=>false,\n    markTaskCompleted: async ()=>false,\n    approveApplication: async ()=>false,\n    approveCompletion: async ()=>false,\n    loading: false,\n    error: null\n});\n// AppProvider component\nconst AppProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [isWalletConnected, setIsWalletConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [userAddress, setUserAddress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [userProjects, setUserProjects] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [userTasks, setUserTasks] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Check wallet connection on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AppProvider.useEffect\": ()=>{\n            const checkConnection = {\n                \"AppProvider.useEffect.checkConnection\": async ()=>{\n                    try {\n                        // Check if Freighter extension is installed\n                        if (typeof _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_2__ === 'undefined') {\n                            console.log('Freighter extension not detected');\n                            return;\n                        }\n                        // Check if user is connected\n                        const isConnected = await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_2__.isConnected();\n                        if (isConnected) {\n                            try {\n                                // Verify the network is correct\n                                const networkDetails = await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_2__.getNetworkDetails();\n                                if (networkDetails.networkPassphrase !== _utils_soroban__WEBPACK_IMPORTED_MODULE_3__.NETWORK_PASSPHRASE) {\n                                    console.warn(\"Connected to wrong network in Freighter. Expected: \".concat(_utils_soroban__WEBPACK_IMPORTED_MODULE_3__.NETWORK, \", Got: \").concat(networkDetails.network));\n                                    return;\n                                }\n                                // Get the user's public key\n                                // Use a try-catch to handle potential API differences\n                                let address;\n                                try {\n                                    const result = await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_2__.getAddress();\n                                    address = result.address;\n                                } catch (e) {\n                                    console.log(\"Error with getAddress API, trying fallback:\", e);\n                                    try {\n                                        // Try legacy API with type assertion for TypeScript\n                                        address = await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_2__.getPublicKey();\n                                    } catch (keyError) {\n                                        console.error(\"Failed to get wallet address with any method:\", keyError);\n                                        throw keyError;\n                                    }\n                                }\n                                setUserAddress(address);\n                                setIsWalletConnected(true);\n                            } catch (networkErr) {\n                                // Handle error but don't display to user on initial load\n                                console.error('Error checking wallet details:', networkErr);\n                            }\n                        }\n                    } catch (err) {\n                        console.error('Error checking wallet connection:', err);\n                    // Don't set error on initial load - it's not a user-initiated action\n                    }\n                }\n            }[\"AppProvider.useEffect.checkConnection\"];\n            checkConnection();\n        }\n    }[\"AppProvider.useEffect\"], []);\n    // Connect wallet function\n    const connectWallet = async ()=>{\n        setLoading(true);\n        setError(null);\n        try {\n            // Check if Freighter extension is installed\n            if (typeof _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_2__ === 'undefined') {\n                throw new Error('Freighter wallet is not available. Please install the Freighter extension.');\n            }\n            // Always prompt user to connect (this will open Freighter popup)\n            // This ensures proper authentication even if wallet is detected as connected\n            await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_2__.requestAccess();\n            // Check if connected after user interaction\n            const isConnected = await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_2__.isConnected();\n            if (!isConnected) {\n                throw new Error('Failed to connect to Freighter. Please try again.');\n            }\n            // Verify the network\n            const networkDetails = await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_2__.getNetworkDetails();\n            if (networkDetails.networkPassphrase !== _utils_soroban__WEBPACK_IMPORTED_MODULE_3__.NETWORK_PASSPHRASE) {\n                throw new Error(\"Please switch to \".concat(_utils_soroban__WEBPACK_IMPORTED_MODULE_3__.NETWORK, \" in your Freighter wallet settings.\"));\n            }\n            // Get the user's public key\n            // Use a try-catch to handle potential API differences\n            let address;\n            try {\n                const result = await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_2__.getAddress();\n                address = result.address;\n            } catch (e) {\n                console.log(\"Error with getAddress API, trying fallback:\", e);\n                try {\n                    // Try legacy API with type assertion for TypeScript\n                    address = await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_2__.getPublicKey();\n                } catch (keyError) {\n                    console.error(\"Failed to get wallet address with any method:\", keyError);\n                    throw new Error(\"Could not retrieve wallet address - please check Freighter connection\");\n                }\n            }\n            setUserAddress(address);\n            setIsWalletConnected(true);\n            // After connecting, load user's projects\n            await loadUserProjects();\n        } catch (err) {\n            console.error('Error connecting wallet:', err);\n            if (err instanceof Error) {\n                setError(err.message);\n            } else {\n                setError('Failed to connect to wallet. Please make sure Freighter is installed and unlocked.');\n            }\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Disconnect wallet function\n    const disconnectWallet = ()=>{\n        setUserAddress(null);\n        setIsWalletConnected(false);\n        setUserProjects([]);\n        setUserTasks({});\n    };\n    // Temporary workaround for loading user projects\n    const loadUserProjects = async ()=>{\n        if (!userAddress || !_utils_soroban__WEBPACK_IMPORTED_MODULE_3__.CONTRACT_ID) return;\n        setLoading(true);\n        setError(null);\n        try {\n            // Since our contract doesn't have a direct way to get projects by manager,\n            // we're just loading dummy data for demonstration\n            // In a real app, you'd have a backend service indexing projects by manager\n            // For now, let's create a demo project if none exists\n            if (userProjects.length === 0) {\n                try {\n                    const projectId = await _utils_contractService__WEBPACK_IMPORTED_MODULE_4__.ContractService.createProject(userAddress, \"Demo Project\", \"https://github.com/example/demo-project\");\n                    if (projectId) {\n                        const projectData = await _utils_contractService__WEBPACK_IMPORTED_MODULE_4__.ContractService.getProject(projectId);\n                        if (projectData) {\n                            setUserProjects([\n                                mapContractProjectToProject(projectData)\n                            ]);\n                        }\n                    }\n                } catch (err) {\n                    console.error('Error creating demo project:', err);\n                // If creation fails, it might already exist\n                // This is just for demo purposes\n                }\n            }\n        } catch (err) {\n            console.error('Error loading projects:', err);\n            setError('Failed to load projects. Please try again.');\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Load project tasks\n    const loadProjectTasks = async (projectId)=>{\n        if (!_utils_soroban__WEBPACK_IMPORTED_MODULE_3__.CONTRACT_ID) return;\n        setLoading(true);\n        setError(null);\n        try {\n            const tasks = await _utils_contractService__WEBPACK_IMPORTED_MODULE_4__.ContractService.getProjectTasks(projectId);\n            if (tasks && tasks.length > 0) {\n                const mappedTasks = tasks.map(mapContractTaskToTask);\n                setUserTasks((prev)=>({\n                        ...prev,\n                        [projectId]: mappedTasks\n                    }));\n            } else {\n                // No tasks found, set empty array\n                setUserTasks((prev)=>({\n                        ...prev,\n                        [projectId]: []\n                    }));\n            }\n        } catch (err) {\n            console.error('Error loading tasks:', err);\n            setError('Failed to load tasks. Please try again.');\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Create a new project\n    const createProject = async (name, repositoryUrl)=>{\n        if (!userAddress || !_utils_soroban__WEBPACK_IMPORTED_MODULE_3__.CONTRACT_ID) return null;\n        setLoading(true);\n        setError(null);\n        try {\n            const projectId = await _utils_contractService__WEBPACK_IMPORTED_MODULE_4__.ContractService.createProject(userAddress, name, repositoryUrl);\n            if (projectId) {\n                // Fetch the created project details\n                const projectData = await _utils_contractService__WEBPACK_IMPORTED_MODULE_4__.ContractService.getProject(projectId);\n                if (projectData) {\n                    // Add to user projects\n                    const newProject = mapContractProjectToProject(projectData);\n                    setUserProjects((prev)=>[\n                            ...prev,\n                            newProject\n                        ]);\n                    return projectId;\n                }\n            }\n            return null;\n        } catch (err) {\n            console.error('Error creating project:', err);\n            setError('Failed to create project. Please try again.');\n            return null;\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Create a new task\n    const createTask = async (projectId, title, description, compensation)=>{\n        if (!userAddress || !_utils_soroban__WEBPACK_IMPORTED_MODULE_3__.CONTRACT_ID) return null;\n        setLoading(true);\n        setError(null);\n        try {\n            // Create task on the contract\n            const taskId = await _utils_contractService__WEBPACK_IMPORTED_MODULE_4__.ContractService.createTask(projectId, title, description, compensation, userAddress);\n            if (taskId) {\n                // Fetch the created task details\n                const taskData = await _utils_contractService__WEBPACK_IMPORTED_MODULE_4__.ContractService.getTask(taskId);\n                if (taskData) {\n                    // Add to project tasks\n                    const newTask = mapContractTaskToTask(taskData);\n                    setUserTasks((prev)=>({\n                            ...prev,\n                            [projectId]: [\n                                ...prev[projectId] || [],\n                                newTask\n                            ]\n                        }));\n                    // Update project total tasks\n                    setUserProjects((prev)=>prev.map((p)=>p.id === projectId ? {\n                                ...p,\n                                totalTasks: p.totalTasks + 1\n                            } : p));\n                    return taskId;\n                }\n            }\n            return null;\n        } catch (err) {\n            console.error('Error creating task:', err);\n            setError('Failed to create task. Please try again.');\n            return null;\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Apply for a task (developer)\n    const applyForTask = async (taskId, expectedCompletion)=>{\n        if (!userAddress || !_utils_soroban__WEBPACK_IMPORTED_MODULE_3__.CONTRACT_ID) return false;\n        setLoading(true);\n        setError(null);\n        try {\n            // Call contract to apply for task\n            await _utils_contractService__WEBPACK_IMPORTED_MODULE_4__.ContractService.applyForTask(taskId, userAddress, expectedCompletion);\n            // Find the project and task to update locally\n            for (const [projectId, tasks] of Object.entries(userTasks)){\n                const taskIndex = tasks.findIndex((t)=>t.id === taskId);\n                if (taskIndex >= 0) {\n                    // Task found, update it\n                    const updatedTasks = [\n                        ...tasks\n                    ];\n                    updatedTasks[taskIndex] = {\n                        ...updatedTasks[taskIndex],\n                        applicants: [\n                            ...updatedTasks[taskIndex].applicants,\n                            userAddress\n                        ]\n                    };\n                    setUserTasks((prev)=>({\n                            ...prev,\n                            [projectId]: updatedTasks\n                        }));\n                    return true;\n                }\n            }\n            return false;\n        } catch (err) {\n            console.error('Error applying for task:', err);\n            setError('Failed to apply for task. Please try again.');\n            return false;\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Start task (developer)\n    const startTask = async (taskId)=>{\n        if (!userAddress || !_utils_soroban__WEBPACK_IMPORTED_MODULE_3__.CONTRACT_ID) return false;\n        setLoading(true);\n        setError(null);\n        try {\n            // Call contract to start task\n            await _utils_contractService__WEBPACK_IMPORTED_MODULE_4__.ContractService.startTask(taskId, userAddress);\n            // Find the project and task to update locally\n            for (const [projectId, tasks] of Object.entries(userTasks)){\n                const taskIndex = tasks.findIndex((t)=>t.id === taskId);\n                if (taskIndex >= 0) {\n                    // Task found, update it\n                    const updatedTasks = [\n                        ...tasks\n                    ];\n                    updatedTasks[taskIndex] = {\n                        ...updatedTasks[taskIndex],\n                        status: 'InProgress'\n                    };\n                    setUserTasks((prev)=>({\n                            ...prev,\n                            [projectId]: updatedTasks\n                        }));\n                    return true;\n                }\n            }\n            return false;\n        } catch (err) {\n            console.error('Error starting task:', err);\n            setError('Failed to start task. Please try again.');\n            return false;\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Mark task as completed (developer)\n    const markTaskCompleted = async (taskId)=>{\n        if (!userAddress || !_utils_soroban__WEBPACK_IMPORTED_MODULE_3__.CONTRACT_ID) return false;\n        setLoading(true);\n        setError(null);\n        try {\n            // Call contract to mark task as completed\n            await _utils_contractService__WEBPACK_IMPORTED_MODULE_4__.ContractService.markTaskCompleted(taskId, userAddress);\n            // Find the project and task to update locally\n            for (const [projectId, tasks] of Object.entries(userTasks)){\n                const taskIndex = tasks.findIndex((t)=>t.id === taskId);\n                if (taskIndex >= 0) {\n                    // Task found, update it\n                    const updatedTasks = [\n                        ...tasks\n                    ];\n                    updatedTasks[taskIndex] = {\n                        ...updatedTasks[taskIndex],\n                        status: 'Completed',\n                        completionDate: Math.floor(Date.now() / 1000) // Current timestamp in seconds\n                    };\n                    setUserTasks((prev)=>({\n                            ...prev,\n                            [projectId]: updatedTasks\n                        }));\n                    return true;\n                }\n            }\n            return false;\n        } catch (err) {\n            console.error('Error marking task as completed:', err);\n            setError('Failed to mark task as completed. Please try again.');\n            return false;\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Approve a developer application (project manager)\n    const approveApplication = async (taskId, developerAddress)=>{\n        if (!userAddress || !_utils_soroban__WEBPACK_IMPORTED_MODULE_3__.CONTRACT_ID) return false;\n        setLoading(true);\n        setError(null);\n        try {\n            // Call contract to approve application\n            await _utils_contractService__WEBPACK_IMPORTED_MODULE_4__.ContractService.approveApplication(taskId, developerAddress, userAddress);\n            // Find the project and task to update locally\n            for (const [projectId, tasks] of Object.entries(userTasks)){\n                const taskIndex = tasks.findIndex((t)=>t.id === taskId);\n                if (taskIndex >= 0) {\n                    // Task found, update it\n                    const updatedTasks = [\n                        ...tasks\n                    ];\n                    updatedTasks[taskIndex] = {\n                        ...updatedTasks[taskIndex],\n                        status: 'Assigned',\n                        assignedDeveloper: developerAddress\n                    };\n                    setUserTasks((prev)=>({\n                            ...prev,\n                            [projectId]: updatedTasks\n                        }));\n                    return true;\n                }\n            }\n            return false;\n        } catch (err) {\n            console.error('Error approving application:', err);\n            setError('Failed to approve application. Please try again.');\n            return false;\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Approve task completion (project manager)\n    const approveCompletion = async (taskId)=>{\n        if (!userAddress || !_utils_soroban__WEBPACK_IMPORTED_MODULE_3__.CONTRACT_ID) return false;\n        setLoading(true);\n        setError(null);\n        try {\n            // Call contract to approve task completion\n            await _utils_contractService__WEBPACK_IMPORTED_MODULE_4__.ContractService.approveCompletion(taskId, userAddress);\n            // Find the project and task to update locally\n            for (const [projectId, tasks] of Object.entries(userTasks)){\n                const taskIndex = tasks.findIndex((t)=>t.id === taskId);\n                if (taskIndex >= 0) {\n                    // Task found, update it\n                    const updatedTasks = [\n                        ...tasks\n                    ];\n                    updatedTasks[taskIndex] = {\n                        ...updatedTasks[taskIndex],\n                        status: 'Approved'\n                    };\n                    setUserTasks((prev)=>({\n                            ...prev,\n                            [projectId]: updatedTasks\n                        }));\n                    return true;\n                }\n            }\n            return false;\n        } catch (err) {\n            console.error('Error approving completion:', err);\n            setError('Failed to approve task completion. Please try again.');\n            return false;\n        } finally{\n            setLoading(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AppContext.Provider, {\n        value: {\n            isWalletConnected,\n            userAddress,\n            connectWallet,\n            disconnectWallet,\n            userProjects,\n            userTasks,\n            loadUserProjects,\n            loadProjectTasks,\n            createProject,\n            createTask,\n            applyForTask,\n            startTask,\n            markTaskCompleted,\n            approveApplication,\n            approveCompletion,\n            loading,\n            error\n        },\n        children: [\n            \"\\r\\r\\r\",\n            children,\n            \"\\r\\r\\r\"\n        ]\n    }, void 0, true, {\n        fileName: \"/home/bishopbethel/devasign-build-v1/devasign-pm-frontend/src/context/AppContext.tsx\",\n        lineNumber: 2985,\n        columnNumber: 5\n    }, undefined);\n};\n_s(AppProvider, \"ij1P1/r6IFPOpcWWvg2D1azaXnQ=\");\n_c = AppProvider;\n// Custom hook to use the app context\nconst useApp = ()=>{\n    _s1();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AppContext);\n};\n_s1(useApp, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/context/AppContext.tsx\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/styles/globals.css */ \"(pages-dir-browser)/./src/styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_AppContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/context/AppContext */ \"(pages-dir-browser)/./src/context/AppContext.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/head */ \"(pages-dir-browser)/./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_4__);\n\nvar _s = $RefreshSig$();\n\n\n\n\nfunction App(param) {\n    let { Component, pageProps } = param;\n    _s();\n    // Add Freighter disconnect fix\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)({\n        \"App.useEffect\": ()=>{\n            // This function aggressively disconnects Freighter and prevents caching\n            const forceFreighterDisconnect = {\n                \"App.useEffect.forceFreighterDisconnect\": ()=>{\n                    console.log('Completely resetting Freighter connection state...');\n                    // 1. Wipe ALL local and session storage related to wallets\n                    for(let i = localStorage.length - 1; i >= 0; i--){\n                        const key = localStorage.key(i);\n                        if (key && (key.toLowerCase().includes('freighter') || key.toLowerCase().includes('wallet') || key.toLowerCase().includes('stellar'))) {\n                            localStorage.removeItem(key);\n                        }\n                    }\n                    // Also clear session storage\n                    for(let i = sessionStorage.length - 1; i >= 0; i--){\n                        const key = sessionStorage.key(i);\n                        if (key && (key.toLowerCase().includes('freighter') || key.toLowerCase().includes('wallet') || key.toLowerCase().includes('stellar'))) {\n                            sessionStorage.removeItem(key);\n                        }\n                    }\n                    // 2. Set disconnect flag\n                    localStorage.setItem('WALLET_FORCE_DISCONNECTED', 'true');\n                    // 3. Hard reload with cache busting\n                    window.location.href = window.location.origin + window.location.pathname + '?nocache=' + Date.now();\n                }\n            }[\"App.useEffect.forceFreighterDisconnect\"];\n            // Make the function globally available\n            window.forceFreighterDisconnect = forceFreighterDisconnect;\n            // Find and patch the Disconnect button\n            const patchDisconnectButton = {\n                \"App.useEffect.patchDisconnectButton\": ()=>{\n                    const buttons = document.querySelectorAll('button');\n                    buttons.forEach({\n                        \"App.useEffect.patchDisconnectButton\": (button)=>{\n                            var _button_textContent;\n                            if ((_button_textContent = button.textContent) === null || _button_textContent === void 0 ? void 0 : _button_textContent.includes('Disconnect')) {\n                                // Override click handler\n                                button.addEventListener('click', {\n                                    \"App.useEffect.patchDisconnectButton\": (e)=>{\n                                        e.preventDefault();\n                                        e.stopPropagation();\n                                        forceFreighterDisconnect();\n                                        return false;\n                                    }\n                                }[\"App.useEffect.patchDisconnectButton\"], true); // Use capture phase to ensure we're first\n                            }\n                        }\n                    }[\"App.useEffect.patchDisconnectButton\"]);\n                }\n            }[\"App.useEffect.patchDisconnectButton\"];\n            // Run patch after a delay to ensure DOM is loaded\n            setTimeout(patchDisconnectButton, 1000);\n            // Also run patch when DOM changes (for dynamically rendered buttons)\n            const observer = new MutationObserver({\n                \"App.useEffect\": ()=>{\n                    setTimeout(patchDisconnectButton, 100);\n                }\n            }[\"App.useEffect\"]);\n            observer.observe(document.body, {\n                childList: true,\n                subtree: true\n            });\n            return ({\n                \"App.useEffect\": ()=>observer.disconnect()\n            })[\"App.useEffect\"];\n        }\n    }[\"App.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_4___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"DevAsign - Decentralized design & development platform\"\n                    }, void 0, false, {\n                        fileName: \"/home/bishopbethel/devasign-build-v1/devasign-pm-frontend/src/pages/_app.tsx\",\n                        lineNumber: 82,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"width=device-width, initial-scale=1\"\n                    }, void 0, false, {\n                        fileName: \"/home/bishopbethel/devasign-build-v1/devasign-pm-frontend/src/pages/_app.tsx\",\n                        lineNumber: 83,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/bishopbethel/devasign-build-v1/devasign-pm-frontend/src/pages/_app.tsx\",\n                lineNumber: 81,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_AppContext__WEBPACK_IMPORTED_MODULE_2__.AppProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                    ...pageProps\n                }, void 0, false, {\n                    fileName: \"/home/bishopbethel/devasign-build-v1/devasign-pm-frontend/src/pages/_app.tsx\",\n                    lineNumber: 86,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/bishopbethel/devasign-build-v1/devasign-pm-frontend/src/pages/_app.tsx\",\n                lineNumber: 85,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBOEI7QUFFcUI7QUFDVjtBQUNaO0FBRWQsU0FBU0ksSUFBSSxLQUFrQztRQUFsQyxFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBWSxHQUFsQzs7SUFDMUIsK0JBQStCO0lBQy9CSixnREFBU0E7eUJBQUM7WUFDUix3RUFBd0U7WUFDeEUsTUFBTUs7MERBQTJCO29CQUMvQkMsUUFBUUMsR0FBRyxDQUFDO29CQUVaLDJEQUEyRDtvQkFDM0QsSUFBSyxJQUFJQyxJQUFJQyxhQUFhQyxNQUFNLEdBQUcsR0FBR0YsS0FBSyxHQUFHQSxJQUFLO3dCQUNqRCxNQUFNRyxNQUFNRixhQUFhRSxHQUFHLENBQUNIO3dCQUM3QixJQUFJRyxPQUNBQSxDQUFBQSxJQUFJQyxXQUFXLEdBQUdDLFFBQVEsQ0FBQyxnQkFDM0JGLElBQUlDLFdBQVcsR0FBR0MsUUFBUSxDQUFDLGFBQzNCRixJQUFJQyxXQUFXLEdBQUdDLFFBQVEsQ0FBQyxVQUFTLEdBQ3JDOzRCQUNESixhQUFhSyxVQUFVLENBQUNIO3dCQUMxQjtvQkFDRjtvQkFFQSw2QkFBNkI7b0JBQzdCLElBQUssSUFBSUgsSUFBSU8sZUFBZUwsTUFBTSxHQUFHLEdBQUdGLEtBQUssR0FBR0EsSUFBSzt3QkFDbkQsTUFBTUcsTUFBTUksZUFBZUosR0FBRyxDQUFDSDt3QkFDL0IsSUFBSUcsT0FDQUEsQ0FBQUEsSUFBSUMsV0FBVyxHQUFHQyxRQUFRLENBQUMsZ0JBQzNCRixJQUFJQyxXQUFXLEdBQUdDLFFBQVEsQ0FBQyxhQUMzQkYsSUFBSUMsV0FBVyxHQUFHQyxRQUFRLENBQUMsVUFBUyxHQUNyQzs0QkFDREUsZUFBZUQsVUFBVSxDQUFDSDt3QkFDNUI7b0JBQ0Y7b0JBRUEseUJBQXlCO29CQUN6QkYsYUFBYU8sT0FBTyxDQUFDLDZCQUE2QjtvQkFFbEQsb0NBQW9DO29CQUNwQ0MsT0FBT0MsUUFBUSxDQUFDQyxJQUFJLEdBQUdGLE9BQU9DLFFBQVEsQ0FBQ0UsTUFBTSxHQUN4QkgsT0FBT0MsUUFBUSxDQUFDRyxRQUFRLEdBQ3hCLGNBQWNDLEtBQUtDLEdBQUc7Z0JBQzdDOztZQUVBLHVDQUF1QztZQUN0Q04sT0FBZVosd0JBQXdCLEdBQUdBO1lBRTNDLHVDQUF1QztZQUN2QyxNQUFNbUI7dURBQXdCO29CQUM1QixNQUFNQyxVQUFVQyxTQUFTQyxnQkFBZ0IsQ0FBQztvQkFDMUNGLFFBQVFHLE9BQU87K0RBQUNDLENBQUFBO2dDQUNWQTs0QkFBSixLQUFJQSxzQkFBQUEsT0FBT0MsV0FBVyxjQUFsQkQsMENBQUFBLG9CQUFvQmhCLFFBQVEsQ0FBQyxlQUFlO2dDQUM5Qyx5QkFBeUI7Z0NBQ3pCZ0IsT0FBT0UsZ0JBQWdCLENBQUM7MkVBQVMsQ0FBQ0M7d0NBQ2hDQSxFQUFFQyxjQUFjO3dDQUNoQkQsRUFBRUUsZUFBZTt3Q0FDakI3Qjt3Q0FDQSxPQUFPO29DQUNUOzBFQUFHLE9BQU8sMENBQTBDOzRCQUN0RDt3QkFDRjs7Z0JBQ0Y7O1lBRUEsa0RBQWtEO1lBQ2xEOEIsV0FBV1gsdUJBQXVCO1lBRWxDLHFFQUFxRTtZQUNyRSxNQUFNWSxXQUFXLElBQUlDO2lDQUFpQjtvQkFDcENGLFdBQVdYLHVCQUF1QjtnQkFDcEM7O1lBRUFZLFNBQVNFLE9BQU8sQ0FBQ1osU0FBU2EsSUFBSSxFQUFFO2dCQUFFQyxXQUFXO2dCQUFNQyxTQUFTO1lBQUs7WUFFakU7aUNBQU8sSUFBTUwsU0FBU00sVUFBVTs7UUFDbEM7d0JBQUcsRUFBRTtJQUVMLHFCQUNFOzswQkFDRSw4REFBQ3pDLGtEQUFJQTs7a0NBQ0gsOERBQUMwQztrQ0FBTTs7Ozs7O2tDQUNQLDhEQUFDQzt3QkFBS0MsTUFBSzt3QkFBV0MsU0FBUTs7Ozs7Ozs7Ozs7OzBCQUVoQyw4REFBQ2hELDREQUFXQTswQkFDViw0RUFBQ0s7b0JBQVcsR0FBR0MsU0FBUzs7Ozs7Ozs7Ozs7OztBQUloQztHQW5Gd0JGO0tBQUFBIiwic291cmNlcyI6WyIvaG9tZS9iaXNob3BiZXRoZWwvZGV2YXNpZ24tYnVpbGQtdjEvZGV2YXNpZ24tcG0tZnJvbnRlbmQvc3JjL3BhZ2VzL19hcHAudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnQC9zdHlsZXMvZ2xvYmFscy5jc3MnO1xuaW1wb3J0IHR5cGUgeyBBcHBQcm9wcyB9IGZyb20gJ25leHQvYXBwJztcbmltcG9ydCB7IEFwcFByb3ZpZGVyIH0gZnJvbSAnQC9jb250ZXh0L0FwcENvbnRleHQnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH06IEFwcFByb3BzKSB7XG4gIC8vIEFkZCBGcmVpZ2h0ZXIgZGlzY29ubmVjdCBmaXhcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBUaGlzIGZ1bmN0aW9uIGFnZ3Jlc3NpdmVseSBkaXNjb25uZWN0cyBGcmVpZ2h0ZXIgYW5kIHByZXZlbnRzIGNhY2hpbmdcbiAgICBjb25zdCBmb3JjZUZyZWlnaHRlckRpc2Nvbm5lY3QgPSAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnQ29tcGxldGVseSByZXNldHRpbmcgRnJlaWdodGVyIGNvbm5lY3Rpb24gc3RhdGUuLi4nKTtcbiAgICAgIFxuICAgICAgLy8gMS4gV2lwZSBBTEwgbG9jYWwgYW5kIHNlc3Npb24gc3RvcmFnZSByZWxhdGVkIHRvIHdhbGxldHNcbiAgICAgIGZvciAobGV0IGkgPSBsb2NhbFN0b3JhZ2UubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgY29uc3Qga2V5ID0gbG9jYWxTdG9yYWdlLmtleShpKTtcbiAgICAgICAgaWYgKGtleSAmJiAoXG4gICAgICAgICAgICBrZXkudG9Mb3dlckNhc2UoKS5pbmNsdWRlcygnZnJlaWdodGVyJykgfHwgXG4gICAgICAgICAgICBrZXkudG9Mb3dlckNhc2UoKS5pbmNsdWRlcygnd2FsbGV0JykgfHxcbiAgICAgICAgICAgIGtleS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKCdzdGVsbGFyJylcbiAgICAgICAgKSkge1xuICAgICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gQWxzbyBjbGVhciBzZXNzaW9uIHN0b3JhZ2VcbiAgICAgIGZvciAobGV0IGkgPSBzZXNzaW9uU3RvcmFnZS5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICBjb25zdCBrZXkgPSBzZXNzaW9uU3RvcmFnZS5rZXkoaSk7XG4gICAgICAgIGlmIChrZXkgJiYgKFxuICAgICAgICAgICAga2V5LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoJ2ZyZWlnaHRlcicpIHx8IFxuICAgICAgICAgICAga2V5LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoJ3dhbGxldCcpIHx8XG4gICAgICAgICAgICBrZXkudG9Mb3dlckNhc2UoKS5pbmNsdWRlcygnc3RlbGxhcicpXG4gICAgICAgICkpIHtcbiAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gMi4gU2V0IGRpc2Nvbm5lY3QgZmxhZ1xuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ1dBTExFVF9GT1JDRV9ESVNDT05ORUNURUQnLCAndHJ1ZScpO1xuICAgICAgXG4gICAgICAvLyAzLiBIYXJkIHJlbG9hZCB3aXRoIGNhY2hlIGJ1c3RpbmdcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbiArIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICsgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAnP25vY2FjaGU9JyArIERhdGUubm93KCk7XG4gICAgfTtcblxuICAgIC8vIE1ha2UgdGhlIGZ1bmN0aW9uIGdsb2JhbGx5IGF2YWlsYWJsZVxuICAgICh3aW5kb3cgYXMgYW55KS5mb3JjZUZyZWlnaHRlckRpc2Nvbm5lY3QgPSBmb3JjZUZyZWlnaHRlckRpc2Nvbm5lY3Q7XG4gICAgXG4gICAgLy8gRmluZCBhbmQgcGF0Y2ggdGhlIERpc2Nvbm5lY3QgYnV0dG9uXG4gICAgY29uc3QgcGF0Y2hEaXNjb25uZWN0QnV0dG9uID0gKCkgPT4ge1xuICAgICAgY29uc3QgYnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2J1dHRvbicpO1xuICAgICAgYnV0dG9ucy5mb3JFYWNoKGJ1dHRvbiA9PiB7XG4gICAgICAgIGlmIChidXR0b24udGV4dENvbnRlbnQ/LmluY2x1ZGVzKCdEaXNjb25uZWN0JykpIHtcbiAgICAgICAgICAvLyBPdmVycmlkZSBjbGljayBoYW5kbGVyXG4gICAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICBmb3JjZUZyZWlnaHRlckRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICB9LCB0cnVlKTsgLy8gVXNlIGNhcHR1cmUgcGhhc2UgdG8gZW5zdXJlIHdlJ3JlIGZpcnN0XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG4gICAgXG4gICAgLy8gUnVuIHBhdGNoIGFmdGVyIGEgZGVsYXkgdG8gZW5zdXJlIERPTSBpcyBsb2FkZWRcbiAgICBzZXRUaW1lb3V0KHBhdGNoRGlzY29ubmVjdEJ1dHRvbiwgMTAwMCk7XG4gICAgXG4gICAgLy8gQWxzbyBydW4gcGF0Y2ggd2hlbiBET00gY2hhbmdlcyAoZm9yIGR5bmFtaWNhbGx5IHJlbmRlcmVkIGJ1dHRvbnMpXG4gICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcigoKSA9PiB7XG4gICAgICBzZXRUaW1lb3V0KHBhdGNoRGlzY29ubmVjdEJ1dHRvbiwgMTAwKTtcbiAgICB9KTtcbiAgICBcbiAgICBvYnNlcnZlci5vYnNlcnZlKGRvY3VtZW50LmJvZHksIHsgY2hpbGRMaXN0OiB0cnVlLCBzdWJ0cmVlOiB0cnVlIH0pO1xuICAgIFxuICAgIHJldHVybiAoKSA9PiBvYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPkRldkFzaWduIC0gRGVjZW50cmFsaXplZCBkZXNpZ24gJiBkZXZlbG9wbWVudCBwbGF0Zm9ybTwvdGl0bGU+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MVwiIC8+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8QXBwUHJvdmlkZXI+XG4gICAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cbiAgICAgIDwvQXBwUHJvdmlkZXI+XG4gICAgPC8+XG4gICk7XG59Il0sIm5hbWVzIjpbIkFwcFByb3ZpZGVyIiwiUmVhY3QiLCJ1c2VFZmZlY3QiLCJIZWFkIiwiQXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwiZm9yY2VGcmVpZ2h0ZXJEaXNjb25uZWN0IiwiY29uc29sZSIsImxvZyIsImkiLCJsb2NhbFN0b3JhZ2UiLCJsZW5ndGgiLCJrZXkiLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwicmVtb3ZlSXRlbSIsInNlc3Npb25TdG9yYWdlIiwic2V0SXRlbSIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsIm9yaWdpbiIsInBhdGhuYW1lIiwiRGF0ZSIsIm5vdyIsInBhdGNoRGlzY29ubmVjdEJ1dHRvbiIsImJ1dHRvbnMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiYnV0dG9uIiwidGV4dENvbnRlbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwic2V0VGltZW91dCIsIm9ic2VydmVyIiwiTXV0YXRpb25PYnNlcnZlciIsIm9ic2VydmUiLCJib2R5IiwiY2hpbGRMaXN0Iiwic3VidHJlZSIsImRpc2Nvbm5lY3QiLCJ0aXRsZSIsIm1ldGEiLCJuYW1lIiwiY29udGVudCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/pages/_app.tsx\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./globals.css */ \"(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./src/styles/globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector('#__next_css__DO_NOT_USE__');\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./globals.css */ \"(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./src/styles/globals.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./globals.css */ \"(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./src/styles/globals.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9zdHlsZXMvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLDJPQUEyRztBQUM3SCwwQkFBMEIsbUJBQU8sQ0FBQyx5Z0JBQXVQOztBQUV6Ujs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSSxJQUFVO0FBQ2QseUJBQXlCLFVBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksaUJBQWlCO0FBQ3JCLE1BQU0seWdCQUF1UDtBQUM3UDtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLHlnQkFBdVA7O0FBRWpSOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixVQUFVOztBQUUxQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsVUFBVTtBQUNaO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyIvaG9tZS9iaXNob3BiZXRoZWwvZGV2YXNpZ24tYnVpbGQtdjEvZGV2YXNpZ24tcG0tZnJvbnRlbmQvc3JjL3N0eWxlcy9nbG9iYWxzLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbMTJdLnVzZVsxXSEuLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbMTJdLnVzZVsyXSEuL2dsb2JhbHMuY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBCeSBkZWZhdWx0LCBzdHlsZS1sb2FkZXIgaW5qZWN0cyBDU1MgaW50byB0aGUgYm90dG9tXG4gICAgICAgICAgICAgICAgICAgIC8vIG9mIDxoZWFkPi4gVGhpcyBjYXVzZXMgb3JkZXJpbmcgcHJvYmxlbXMgYmV0d2VlbiBkZXZcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5kIHByb2QuIFRvIGZpeCB0aGlzLCB3ZSByZW5kZXIgYSA8bm9zY3JpcHQ+IHRhZyBhc1xuICAgICAgICAgICAgICAgICAgICAvLyBhbiBhbmNob3IgZm9yIHRoZSBzdHlsZXMgdG8gYmUgcGxhY2VkIGJlZm9yZS4gVGhlc2VcbiAgICAgICAgICAgICAgICAgICAgLy8gc3R5bGVzIHdpbGwgYmUgYXBwbGllZCBfYmVmb3JlXyA8c3R5bGUganN4IGdsb2JhbD4uXG4gICAgICAgICAgICAgICAgICAgIC8vIFRoZXNlIGVsZW1lbnRzIHNob3VsZCBhbHdheXMgZXhpc3QuIElmIHRoZXkgZG8gbm90LFxuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIGNvZGUgc2hvdWxkIGZhaWwuXG4gICAgICAgICAgICAgICAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfXycpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50Tm9kZSA9IGFuY2hvckVsZW1lbnQucGFyZW50Tm9kZS8vIE5vcm1hbGx5IDxoZWFkPlxuICAgICAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICAgICAgICAgIC8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuICAgICAgICAgICAgICAgICAgICAvLyBhbmNob3IuIEJ5IGluc2VydGluZyBiZWZvcmUgYW5kIG5vdCBhZnRlciwgd2UgZG8gbm90XG4gICAgICAgICAgICAgICAgICAgIC8vIG5lZWQgdG8gdHJhY2sgdGhlIGxhc3QgaW5zZXJ0ZWQgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCwgYW5jaG9yRWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfTtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgaWYgKCFjb250ZW50LmxvY2FscyB8fCBtb2R1bGUuaG90LmludmFsaWRhdGUpIHtcbiAgICB2YXIgaXNFcXVhbExvY2FscyA9IGZ1bmN0aW9uIGlzRXF1YWxMb2NhbHMoYSwgYiwgaXNOYW1lZEV4cG9ydCkge1xuICAgIGlmICghYSAmJiBiIHx8IGEgJiYgIWIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgcDtcbiAgICBmb3IocCBpbiBhKXtcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gJ2RlZmF1bHQnKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSAnZGVmYXVsdCcpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghYVtwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufTtcbiAgICB2YXIgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcbiAgICAgIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxMl0udXNlWzFdIS4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxMl0udXNlWzJdIS4vZ2xvYmFscy5jc3NcIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzEyXS51c2VbMV0hLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzEyXS51c2VbMl0hLi9nbG9iYWxzLmNzc1wiKTtcblxuICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCFpc0VxdWFsTG9jYWxzKG9sZExvY2FscywgY29udGVudC5sb2NhbHMpKSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgICAgICAgICAgICB1cGRhdGUoY29udGVudCk7XG4gICAgICB9XG4gICAgKVxuICB9XG5cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkge1xuICAgIHVwZGF0ZSgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/styles/globals.css\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/utils/contractService.ts":
/*!**************************************!*\
  !*** ./src/utils/contractService.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContractService: () => (/* binding */ ContractService)\n/* harmony export */ });\n/* harmony import */ var _soroban__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./soroban */ \"(pages-dir-browser)/./src/utils/soroban.ts\");\n\n// Default token for payments (in a real app, this could be configurable)\nconst NATIVE_TOKEN_ADDRESS = 'NATIVE';\n// Contract interaction methods\nconst ContractService = {\n    // Project Manager Functions\n    // Create a new project\n    async createProject (managerAddress, name, repositoryUrl) {\n        // Convert managerAddress to address object if it's a plain string\n        const addressParam = typeof managerAddress === 'string' ? {\n            type: 'address',\n            value: managerAddress\n        } : managerAddress;\n        const result = await (0,_soroban__WEBPACK_IMPORTED_MODULE_0__.invokeContract)('create_project', [\n            addressParam,\n            name,\n            repositoryUrl\n        ]);\n        return result; // Returns project ID\n    },\n    // Create a new task with funds in escrow\n    async createTask (projectId, title, description, compensation, managerAddress) {\n        let tokenAddress = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : NATIVE_TOKEN_ADDRESS;\n        // Convert addresses to address objects if they're plain strings\n        const managerParam = typeof managerAddress === 'string' ? {\n            type: 'address',\n            value: managerAddress\n        } : managerAddress;\n        const tokenParam = typeof tokenAddress === 'string' ? {\n            type: 'address',\n            value: tokenAddress\n        } : tokenAddress;\n        const result = await (0,_soroban__WEBPACK_IMPORTED_MODULE_0__.invokeContract)('create_task', [\n            {\n                type: 'bytes',\n                value: projectId\n            },\n            title,\n            description,\n            compensation,\n            managerParam,\n            tokenParam\n        ]);\n        return result; // Returns task ID\n    },\n    // Approve developer application\n    async approveApplication (taskId, developerAddress, managerAddress) {\n        // Convert addresses to address objects if they're plain strings\n        const developerParam = typeof developerAddress === 'string' ? {\n            type: 'address',\n            value: developerAddress\n        } : developerAddress;\n        const managerParam = typeof managerAddress === 'string' ? {\n            type: 'address',\n            value: managerAddress\n        } : managerAddress;\n        await (0,_soroban__WEBPACK_IMPORTED_MODULE_0__.invokeContract)('approve_application', [\n            {\n                type: 'bytes',\n                value: taskId\n            },\n            developerParam,\n            managerParam\n        ]);\n    },\n    // Approve completed task\n    async approveCompletion (taskId, managerAddress) {\n        let tokenAddress = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : NATIVE_TOKEN_ADDRESS;\n        // Convert addresses to address objects if they're plain strings\n        const managerParam = typeof managerAddress === 'string' ? {\n            type: 'address',\n            value: managerAddress\n        } : managerAddress;\n        const tokenParam = typeof tokenAddress === 'string' ? {\n            type: 'address',\n            value: tokenAddress\n        } : tokenAddress;\n        await (0,_soroban__WEBPACK_IMPORTED_MODULE_0__.invokeContract)('approve_completion', [\n            {\n                type: 'bytes',\n                value: taskId\n            },\n            managerParam,\n            tokenParam\n        ]);\n    },\n    // Developer Functions\n    // Apply for a task\n    async applyForTask (taskId, developerAddress, expectedCompletion) {\n        // Convert address to address object if it's a plain string\n        const developerParam = typeof developerAddress === 'string' ? {\n            type: 'address',\n            value: developerAddress\n        } : developerAddress;\n        await (0,_soroban__WEBPACK_IMPORTED_MODULE_0__.invokeContract)('apply_for_task', [\n            {\n                type: 'bytes',\n                value: taskId\n            },\n            developerParam,\n            expectedCompletion\n        ]);\n    },\n    // Start task\n    async startTask (taskId, developerAddress) {\n        // Convert address to address object if it's a plain string\n        const developerParam = typeof developerAddress === 'string' ? {\n            type: 'address',\n            value: developerAddress\n        } : developerAddress;\n        await (0,_soroban__WEBPACK_IMPORTED_MODULE_0__.invokeContract)('start_task', [\n            {\n                type: 'bytes',\n                value: taskId\n            },\n            developerParam\n        ]);\n    },\n    // Mark task as completed\n    async markTaskCompleted (taskId, developerAddress) {\n        // Convert address to address object if it's a plain string\n        const developerParam = typeof developerAddress === 'string' ? {\n            type: 'address',\n            value: developerAddress\n        } : developerAddress;\n        await (0,_soroban__WEBPACK_IMPORTED_MODULE_0__.invokeContract)('mark_task_completed', [\n            {\n                type: 'bytes',\n                value: taskId\n            },\n            developerParam\n        ]);\n    },\n    // View Functions\n    // Get all tasks for a project\n    async getProjectTasks (projectId) {\n        const result = await (0,_soroban__WEBPACK_IMPORTED_MODULE_0__.queryContract)('get_project_tasks', [\n            {\n                type: 'bytes',\n                value: projectId\n            }\n        ]);\n        return result;\n    },\n    // Get task details\n    async getTask (taskId) {\n        const result = await (0,_soroban__WEBPACK_IMPORTED_MODULE_0__.queryContract)('get_task', [\n            {\n                type: 'bytes',\n                value: taskId\n            }\n        ]);\n        return result;\n    },\n    // Get project details\n    async getProject (projectId) {\n        const result = await (0,_soroban__WEBPACK_IMPORTED_MODULE_0__.queryContract)('get_project', [\n            {\n                type: 'bytes',\n                value: projectId\n            }\n        ]);\n        return result;\n    },\n    // Helper function to get all projects (not directly in contract)\n    // In a real implementation, we would have a backend API to query all projects\n    // or implement pagination in the smart contract\n    async getManagerProjects (managerAddress) {\n        throw new Error('Not implemented: This would require backend indexing or contract changes');\n    // For demonstration only, this should be implemented with a backend service\n    // that indexes contract events or a contract method to retrieve projects by manager\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy91dGlscy9jb250cmFjdFNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEQ7QUF1QjFELHlFQUF5RTtBQUN6RSxNQUFNRSx1QkFBdUI7QUFFN0IsK0JBQStCO0FBQ3hCLE1BQU1DLGtCQUFrQjtJQUM3Qiw0QkFBNEI7SUFFNUIsdUJBQXVCO0lBQ3ZCLE1BQU1DLGVBQWNDLGNBQTRCLEVBQUVDLElBQVksRUFBRUMsYUFBcUI7UUFDbkYsa0VBQWtFO1FBQ2xFLE1BQU1DLGVBQWUsT0FBT0gsbUJBQW1CLFdBQzNDO1lBQUVJLE1BQU07WUFBV0MsT0FBT0w7UUFBZSxJQUN6Q0E7UUFFSixNQUFNTSxTQUFTLE1BQU1YLHdEQUFjQSxDQUFDLGtCQUFrQjtZQUNwRFE7WUFDQUY7WUFDQUM7U0FDRDtRQUVELE9BQU9JLFFBQVEscUJBQXFCO0lBQ3RDO0lBRUEseUNBQXlDO0lBQ3pDLE1BQU1DLFlBQ0pDLFNBQWlCLEVBQ2pCQyxLQUFhLEVBQ2JDLFdBQW1CLEVBQ25CQyxZQUFvQixFQUNwQlgsY0FBNEI7WUFDNUJZLGVBQUFBLGlFQUE2QmY7UUFFN0IsZ0VBQWdFO1FBQ2hFLE1BQU1nQixlQUFlLE9BQU9iLG1CQUFtQixXQUMzQztZQUFFSSxNQUFNO1lBQVdDLE9BQU9MO1FBQWUsSUFDekNBO1FBRUosTUFBTWMsYUFBYSxPQUFPRixpQkFBaUIsV0FDdkM7WUFBRVIsTUFBTTtZQUFXQyxPQUFPTztRQUFhLElBQ3ZDQTtRQUVKLE1BQU1OLFNBQVMsTUFBTVgsd0RBQWNBLENBQUMsZUFBZTtZQUNqRDtnQkFBRVMsTUFBTTtnQkFBU0MsT0FBT0c7WUFBVTtZQUNsQ0M7WUFDQUM7WUFDQUM7WUFDQUU7WUFDQUM7U0FDRDtRQUVELE9BQU9SLFFBQVEsa0JBQWtCO0lBQ25DO0lBRUEsZ0NBQWdDO0lBQ2hDLE1BQU1TLG9CQUNKQyxNQUFjLEVBQ2RDLGdCQUE4QixFQUM5QmpCLGNBQTRCO1FBRTVCLGdFQUFnRTtRQUNoRSxNQUFNa0IsaUJBQWlCLE9BQU9ELHFCQUFxQixXQUMvQztZQUFFYixNQUFNO1lBQVdDLE9BQU9ZO1FBQWlCLElBQzNDQTtRQUVKLE1BQU1KLGVBQWUsT0FBT2IsbUJBQW1CLFdBQzNDO1lBQUVJLE1BQU07WUFBV0MsT0FBT0w7UUFBZSxJQUN6Q0E7UUFFSixNQUFNTCx3REFBY0EsQ0FBQyx1QkFBdUI7WUFDMUM7Z0JBQUVTLE1BQU07Z0JBQVNDLE9BQU9XO1lBQU87WUFDL0JFO1lBQ0FMO1NBQ0Q7SUFDSDtJQUVBLHlCQUF5QjtJQUN6QixNQUFNTSxtQkFDSkgsTUFBYyxFQUNkaEIsY0FBNEI7WUFDNUJZLGVBQUFBLGlFQUE2QmY7UUFFN0IsZ0VBQWdFO1FBQ2hFLE1BQU1nQixlQUFlLE9BQU9iLG1CQUFtQixXQUMzQztZQUFFSSxNQUFNO1lBQVdDLE9BQU9MO1FBQWUsSUFDekNBO1FBRUosTUFBTWMsYUFBYSxPQUFPRixpQkFBaUIsV0FDdkM7WUFBRVIsTUFBTTtZQUFXQyxPQUFPTztRQUFhLElBQ3ZDQTtRQUVKLE1BQU1qQix3REFBY0EsQ0FBQyxzQkFBc0I7WUFDekM7Z0JBQUVTLE1BQU07Z0JBQVNDLE9BQU9XO1lBQU87WUFDL0JIO1lBQ0FDO1NBQ0Q7SUFDSDtJQUVBLHNCQUFzQjtJQUV0QixtQkFBbUI7SUFDbkIsTUFBTU0sY0FDSkosTUFBYyxFQUNkQyxnQkFBOEIsRUFDOUJJLGtCQUEwQjtRQUUxQiwyREFBMkQ7UUFDM0QsTUFBTUgsaUJBQWlCLE9BQU9ELHFCQUFxQixXQUMvQztZQUFFYixNQUFNO1lBQVdDLE9BQU9ZO1FBQWlCLElBQzNDQTtRQUVKLE1BQU10Qix3REFBY0EsQ0FBQyxrQkFBa0I7WUFDckM7Z0JBQUVTLE1BQU07Z0JBQVNDLE9BQU9XO1lBQU87WUFDL0JFO1lBQ0FHO1NBQ0Q7SUFDSDtJQUVBLGFBQWE7SUFDYixNQUFNQyxXQUNKTixNQUFjLEVBQ2RDLGdCQUE4QjtRQUU5QiwyREFBMkQ7UUFDM0QsTUFBTUMsaUJBQWlCLE9BQU9ELHFCQUFxQixXQUMvQztZQUFFYixNQUFNO1lBQVdDLE9BQU9ZO1FBQWlCLElBQzNDQTtRQUVKLE1BQU10Qix3REFBY0EsQ0FBQyxjQUFjO1lBQ2pDO2dCQUFFUyxNQUFNO2dCQUFTQyxPQUFPVztZQUFPO1lBQy9CRTtTQUNEO0lBQ0g7SUFFQSx5QkFBeUI7SUFDekIsTUFBTUssbUJBQ0pQLE1BQWMsRUFDZEMsZ0JBQThCO1FBRTlCLDJEQUEyRDtRQUMzRCxNQUFNQyxpQkFBaUIsT0FBT0QscUJBQXFCLFdBQy9DO1lBQUViLE1BQU07WUFBV0MsT0FBT1k7UUFBaUIsSUFDM0NBO1FBRUosTUFBTXRCLHdEQUFjQSxDQUFDLHVCQUF1QjtZQUMxQztnQkFBRVMsTUFBTTtnQkFBU0MsT0FBT1c7WUFBTztZQUMvQkU7U0FDRDtJQUNIO0lBRUEsaUJBQWlCO0lBRWpCLDhCQUE4QjtJQUM5QixNQUFNTSxpQkFBZ0JoQixTQUFpQjtRQUNyQyxNQUFNRixTQUFTLE1BQU1WLHVEQUFhQSxDQUFDLHFCQUFxQjtZQUN0RDtnQkFBRVEsTUFBTTtnQkFBU0MsT0FBT0c7WUFBVTtTQUNuQztRQUVELE9BQU9GO0lBQ1Q7SUFFQSxtQkFBbUI7SUFDbkIsTUFBTW1CLFNBQVFULE1BQWM7UUFDMUIsTUFBTVYsU0FBUyxNQUFNVix1REFBYUEsQ0FBQyxZQUFZO1lBQzdDO2dCQUFFUSxNQUFNO2dCQUFTQyxPQUFPVztZQUFPO1NBQ2hDO1FBRUQsT0FBT1Y7SUFDVDtJQUVBLHNCQUFzQjtJQUN0QixNQUFNb0IsWUFBV2xCLFNBQWlCO1FBQ2hDLE1BQU1GLFNBQVMsTUFBTVYsdURBQWFBLENBQUMsZUFBZTtZQUNoRDtnQkFBRVEsTUFBTTtnQkFBU0MsT0FBT0c7WUFBVTtTQUNuQztRQUVELE9BQU9GO0lBQ1Q7SUFFQSxpRUFBaUU7SUFDakUsOEVBQThFO0lBQzlFLGdEQUFnRDtJQUNoRCxNQUFNcUIsb0JBQW1CM0IsY0FBc0I7UUFDN0MsTUFBTSxJQUFJNEIsTUFBTTtJQUNoQiw0RUFBNEU7SUFDNUUsb0ZBQW9GO0lBQ3RGO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsiL2hvbWUvYmlzaG9wYmV0aGVsL2RldmFzaWduLWJ1aWxkLXYxL2RldmFzaWduLXBtLWZyb250ZW5kL3NyYy91dGlscy9jb250cmFjdFNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW52b2tlQ29udHJhY3QsIHF1ZXJ5Q29udHJhY3QgfSBmcm9tICcuL3Nvcm9iYW4nO1xuXG4vLyBDb250cmFjdCBkYXRhIHR5cGVzXG5leHBvcnQgaW50ZXJmYWNlIFByb2plY3Qge1xuICBpZDogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG4gIG1hbmFnZXI6IHN0cmluZztcbiAgcmVwb3NpdG9yeV91cmw6IHN0cmluZztcbiAgdG90YWxfdGFza3M6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUYXNrIHtcbiAgaWQ6IHN0cmluZztcbiAgdGl0bGU6IHN0cmluZztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgY29tcGVuc2F0aW9uOiBzdHJpbmc7IC8vIFVzaW5nIHN0cmluZyBmb3IgaTEyOCB2YWx1ZXNcbiAgcHJvamVjdF9pZDogc3RyaW5nO1xuICBzdGF0dXM6ICdPcGVuJyB8ICdBc3NpZ25lZCcgfCAnSW5Qcm9ncmVzcycgfCAnQ29tcGxldGVkJyB8ICdBcHByb3ZlZCcgfCAnUmVqZWN0ZWQnO1xuICBhcHBsaWNhbnRzOiBzdHJpbmdbXTtcbiAgYXNzaWduZWRfZGV2ZWxvcGVyOiBzdHJpbmcgfCBudWxsO1xuICBjb21wbGV0aW9uX2RhdGU6IG51bWJlciB8IG51bGw7XG59XG5cbi8vIERlZmF1bHQgdG9rZW4gZm9yIHBheW1lbnRzIChpbiBhIHJlYWwgYXBwLCB0aGlzIGNvdWxkIGJlIGNvbmZpZ3VyYWJsZSlcbmNvbnN0IE5BVElWRV9UT0tFTl9BRERSRVNTID0gJ05BVElWRSc7XG5cbi8vIENvbnRyYWN0IGludGVyYWN0aW9uIG1ldGhvZHNcbmV4cG9ydCBjb25zdCBDb250cmFjdFNlcnZpY2UgPSB7XG4gIC8vIFByb2plY3QgTWFuYWdlciBGdW5jdGlvbnNcbiAgXG4gIC8vIENyZWF0ZSBhIG5ldyBwcm9qZWN0XG4gIGFzeW5jIGNyZWF0ZVByb2plY3QobWFuYWdlckFkZHJlc3M6IHN0cmluZyB8IGFueSwgbmFtZTogc3RyaW5nLCByZXBvc2l0b3J5VXJsOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIC8vIENvbnZlcnQgbWFuYWdlckFkZHJlc3MgdG8gYWRkcmVzcyBvYmplY3QgaWYgaXQncyBhIHBsYWluIHN0cmluZ1xuICAgIGNvbnN0IGFkZHJlc3NQYXJhbSA9IHR5cGVvZiBtYW5hZ2VyQWRkcmVzcyA9PT0gJ3N0cmluZycgXG4gICAgICA/IHsgdHlwZTogJ2FkZHJlc3MnLCB2YWx1ZTogbWFuYWdlckFkZHJlc3MgfVxuICAgICAgOiBtYW5hZ2VyQWRkcmVzcztcbiAgICAgIFxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGludm9rZUNvbnRyYWN0KCdjcmVhdGVfcHJvamVjdCcsIFtcbiAgICAgIGFkZHJlc3NQYXJhbSxcbiAgICAgIG5hbWUsXG4gICAgICByZXBvc2l0b3J5VXJsXG4gICAgXSk7XG4gICAgXG4gICAgcmV0dXJuIHJlc3VsdDsgLy8gUmV0dXJucyBwcm9qZWN0IElEXG4gIH0sXG4gIFxuICAvLyBDcmVhdGUgYSBuZXcgdGFzayB3aXRoIGZ1bmRzIGluIGVzY3Jvd1xuICBhc3luYyBjcmVhdGVUYXNrKFxuICAgIHByb2plY3RJZDogc3RyaW5nLFxuICAgIHRpdGxlOiBzdHJpbmcsXG4gICAgZGVzY3JpcHRpb246IHN0cmluZyxcbiAgICBjb21wZW5zYXRpb246IG51bWJlcixcbiAgICBtYW5hZ2VyQWRkcmVzczogc3RyaW5nIHwgYW55LFxuICAgIHRva2VuQWRkcmVzczogc3RyaW5nIHwgYW55ID0gTkFUSVZFX1RPS0VOX0FERFJFU1NcbiAgKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICAvLyBDb252ZXJ0IGFkZHJlc3NlcyB0byBhZGRyZXNzIG9iamVjdHMgaWYgdGhleSdyZSBwbGFpbiBzdHJpbmdzXG4gICAgY29uc3QgbWFuYWdlclBhcmFtID0gdHlwZW9mIG1hbmFnZXJBZGRyZXNzID09PSAnc3RyaW5nJyBcbiAgICAgID8geyB0eXBlOiAnYWRkcmVzcycsIHZhbHVlOiBtYW5hZ2VyQWRkcmVzcyB9XG4gICAgICA6IG1hbmFnZXJBZGRyZXNzO1xuICAgICAgXG4gICAgY29uc3QgdG9rZW5QYXJhbSA9IHR5cGVvZiB0b2tlbkFkZHJlc3MgPT09ICdzdHJpbmcnIFxuICAgICAgPyB7IHR5cGU6ICdhZGRyZXNzJywgdmFsdWU6IHRva2VuQWRkcmVzcyB9XG4gICAgICA6IHRva2VuQWRkcmVzcztcbiAgICBcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBpbnZva2VDb250cmFjdCgnY3JlYXRlX3Rhc2snLCBbXG4gICAgICB7IHR5cGU6ICdieXRlcycsIHZhbHVlOiBwcm9qZWN0SWQgfSxcbiAgICAgIHRpdGxlLFxuICAgICAgZGVzY3JpcHRpb24sXG4gICAgICBjb21wZW5zYXRpb24sXG4gICAgICBtYW5hZ2VyUGFyYW0sXG4gICAgICB0b2tlblBhcmFtXG4gICAgXSk7XG4gICAgXG4gICAgcmV0dXJuIHJlc3VsdDsgLy8gUmV0dXJucyB0YXNrIElEXG4gIH0sXG4gIFxuICAvLyBBcHByb3ZlIGRldmVsb3BlciBhcHBsaWNhdGlvblxuICBhc3luYyBhcHByb3ZlQXBwbGljYXRpb24oXG4gICAgdGFza0lkOiBzdHJpbmcsXG4gICAgZGV2ZWxvcGVyQWRkcmVzczogc3RyaW5nIHwgYW55LFxuICAgIG1hbmFnZXJBZGRyZXNzOiBzdHJpbmcgfCBhbnlcbiAgKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgLy8gQ29udmVydCBhZGRyZXNzZXMgdG8gYWRkcmVzcyBvYmplY3RzIGlmIHRoZXkncmUgcGxhaW4gc3RyaW5nc1xuICAgIGNvbnN0IGRldmVsb3BlclBhcmFtID0gdHlwZW9mIGRldmVsb3BlckFkZHJlc3MgPT09ICdzdHJpbmcnIFxuICAgICAgPyB7IHR5cGU6ICdhZGRyZXNzJywgdmFsdWU6IGRldmVsb3BlckFkZHJlc3MgfVxuICAgICAgOiBkZXZlbG9wZXJBZGRyZXNzO1xuICAgICAgXG4gICAgY29uc3QgbWFuYWdlclBhcmFtID0gdHlwZW9mIG1hbmFnZXJBZGRyZXNzID09PSAnc3RyaW5nJyBcbiAgICAgID8geyB0eXBlOiAnYWRkcmVzcycsIHZhbHVlOiBtYW5hZ2VyQWRkcmVzcyB9XG4gICAgICA6IG1hbmFnZXJBZGRyZXNzO1xuICAgIFxuICAgIGF3YWl0IGludm9rZUNvbnRyYWN0KCdhcHByb3ZlX2FwcGxpY2F0aW9uJywgW1xuICAgICAgeyB0eXBlOiAnYnl0ZXMnLCB2YWx1ZTogdGFza0lkIH0sXG4gICAgICBkZXZlbG9wZXJQYXJhbSxcbiAgICAgIG1hbmFnZXJQYXJhbVxuICAgIF0pO1xuICB9LFxuICBcbiAgLy8gQXBwcm92ZSBjb21wbGV0ZWQgdGFza1xuICBhc3luYyBhcHByb3ZlQ29tcGxldGlvbihcbiAgICB0YXNrSWQ6IHN0cmluZyxcbiAgICBtYW5hZ2VyQWRkcmVzczogc3RyaW5nIHwgYW55LFxuICAgIHRva2VuQWRkcmVzczogc3RyaW5nIHwgYW55ID0gTkFUSVZFX1RPS0VOX0FERFJFU1NcbiAgKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgLy8gQ29udmVydCBhZGRyZXNzZXMgdG8gYWRkcmVzcyBvYmplY3RzIGlmIHRoZXkncmUgcGxhaW4gc3RyaW5nc1xuICAgIGNvbnN0IG1hbmFnZXJQYXJhbSA9IHR5cGVvZiBtYW5hZ2VyQWRkcmVzcyA9PT0gJ3N0cmluZycgXG4gICAgICA/IHsgdHlwZTogJ2FkZHJlc3MnLCB2YWx1ZTogbWFuYWdlckFkZHJlc3MgfVxuICAgICAgOiBtYW5hZ2VyQWRkcmVzcztcbiAgICAgIFxuICAgIGNvbnN0IHRva2VuUGFyYW0gPSB0eXBlb2YgdG9rZW5BZGRyZXNzID09PSAnc3RyaW5nJyBcbiAgICAgID8geyB0eXBlOiAnYWRkcmVzcycsIHZhbHVlOiB0b2tlbkFkZHJlc3MgfVxuICAgICAgOiB0b2tlbkFkZHJlc3M7XG4gICAgXG4gICAgYXdhaXQgaW52b2tlQ29udHJhY3QoJ2FwcHJvdmVfY29tcGxldGlvbicsIFtcbiAgICAgIHsgdHlwZTogJ2J5dGVzJywgdmFsdWU6IHRhc2tJZCB9LFxuICAgICAgbWFuYWdlclBhcmFtLFxuICAgICAgdG9rZW5QYXJhbVxuICAgIF0pO1xuICB9LFxuICBcbiAgLy8gRGV2ZWxvcGVyIEZ1bmN0aW9uc1xuICBcbiAgLy8gQXBwbHkgZm9yIGEgdGFza1xuICBhc3luYyBhcHBseUZvclRhc2soXG4gICAgdGFza0lkOiBzdHJpbmcsXG4gICAgZGV2ZWxvcGVyQWRkcmVzczogc3RyaW5nIHwgYW55LFxuICAgIGV4cGVjdGVkQ29tcGxldGlvbjogbnVtYmVyXG4gICk6IFByb21pc2U8dm9pZD4ge1xuICAgIC8vIENvbnZlcnQgYWRkcmVzcyB0byBhZGRyZXNzIG9iamVjdCBpZiBpdCdzIGEgcGxhaW4gc3RyaW5nXG4gICAgY29uc3QgZGV2ZWxvcGVyUGFyYW0gPSB0eXBlb2YgZGV2ZWxvcGVyQWRkcmVzcyA9PT0gJ3N0cmluZycgXG4gICAgICA/IHsgdHlwZTogJ2FkZHJlc3MnLCB2YWx1ZTogZGV2ZWxvcGVyQWRkcmVzcyB9XG4gICAgICA6IGRldmVsb3BlckFkZHJlc3M7XG4gICAgXG4gICAgYXdhaXQgaW52b2tlQ29udHJhY3QoJ2FwcGx5X2Zvcl90YXNrJywgW1xuICAgICAgeyB0eXBlOiAnYnl0ZXMnLCB2YWx1ZTogdGFza0lkIH0sXG4gICAgICBkZXZlbG9wZXJQYXJhbSxcbiAgICAgIGV4cGVjdGVkQ29tcGxldGlvblxuICAgIF0pO1xuICB9LFxuICBcbiAgLy8gU3RhcnQgdGFza1xuICBhc3luYyBzdGFydFRhc2soXG4gICAgdGFza0lkOiBzdHJpbmcsXG4gICAgZGV2ZWxvcGVyQWRkcmVzczogc3RyaW5nIHwgYW55XG4gICk6IFByb21pc2U8dm9pZD4ge1xuICAgIC8vIENvbnZlcnQgYWRkcmVzcyB0byBhZGRyZXNzIG9iamVjdCBpZiBpdCdzIGEgcGxhaW4gc3RyaW5nXG4gICAgY29uc3QgZGV2ZWxvcGVyUGFyYW0gPSB0eXBlb2YgZGV2ZWxvcGVyQWRkcmVzcyA9PT0gJ3N0cmluZycgXG4gICAgICA/IHsgdHlwZTogJ2FkZHJlc3MnLCB2YWx1ZTogZGV2ZWxvcGVyQWRkcmVzcyB9XG4gICAgICA6IGRldmVsb3BlckFkZHJlc3M7XG4gICAgXG4gICAgYXdhaXQgaW52b2tlQ29udHJhY3QoJ3N0YXJ0X3Rhc2snLCBbXG4gICAgICB7IHR5cGU6ICdieXRlcycsIHZhbHVlOiB0YXNrSWQgfSxcbiAgICAgIGRldmVsb3BlclBhcmFtXG4gICAgXSk7XG4gIH0sXG4gIFxuICAvLyBNYXJrIHRhc2sgYXMgY29tcGxldGVkXG4gIGFzeW5jIG1hcmtUYXNrQ29tcGxldGVkKFxuICAgIHRhc2tJZDogc3RyaW5nLFxuICAgIGRldmVsb3BlckFkZHJlc3M6IHN0cmluZyB8IGFueVxuICApOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAvLyBDb252ZXJ0IGFkZHJlc3MgdG8gYWRkcmVzcyBvYmplY3QgaWYgaXQncyBhIHBsYWluIHN0cmluZ1xuICAgIGNvbnN0IGRldmVsb3BlclBhcmFtID0gdHlwZW9mIGRldmVsb3BlckFkZHJlc3MgPT09ICdzdHJpbmcnIFxuICAgICAgPyB7IHR5cGU6ICdhZGRyZXNzJywgdmFsdWU6IGRldmVsb3BlckFkZHJlc3MgfVxuICAgICAgOiBkZXZlbG9wZXJBZGRyZXNzO1xuICAgIFxuICAgIGF3YWl0IGludm9rZUNvbnRyYWN0KCdtYXJrX3Rhc2tfY29tcGxldGVkJywgW1xuICAgICAgeyB0eXBlOiAnYnl0ZXMnLCB2YWx1ZTogdGFza0lkIH0sXG4gICAgICBkZXZlbG9wZXJQYXJhbVxuICAgIF0pO1xuICB9LFxuICBcbiAgLy8gVmlldyBGdW5jdGlvbnNcbiAgXG4gIC8vIEdldCBhbGwgdGFza3MgZm9yIGEgcHJvamVjdFxuICBhc3luYyBnZXRQcm9qZWN0VGFza3MocHJvamVjdElkOiBzdHJpbmcpOiBQcm9taXNlPFRhc2tbXT4ge1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHF1ZXJ5Q29udHJhY3QoJ2dldF9wcm9qZWN0X3Rhc2tzJywgW1xuICAgICAgeyB0eXBlOiAnYnl0ZXMnLCB2YWx1ZTogcHJvamVjdElkIH1cbiAgICBdKTtcbiAgICBcbiAgICByZXR1cm4gcmVzdWx0IGFzIFRhc2tbXTtcbiAgfSxcbiAgXG4gIC8vIEdldCB0YXNrIGRldGFpbHNcbiAgYXN5bmMgZ2V0VGFzayh0YXNrSWQ6IHN0cmluZyk6IFByb21pc2U8VGFzayB8IG51bGw+IHtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBxdWVyeUNvbnRyYWN0KCdnZXRfdGFzaycsIFtcbiAgICAgIHsgdHlwZTogJ2J5dGVzJywgdmFsdWU6IHRhc2tJZCB9XG4gICAgXSk7XG4gICAgXG4gICAgcmV0dXJuIHJlc3VsdCBhcyBUYXNrIHwgbnVsbDtcbiAgfSxcbiAgXG4gIC8vIEdldCBwcm9qZWN0IGRldGFpbHNcbiAgYXN5bmMgZ2V0UHJvamVjdChwcm9qZWN0SWQ6IHN0cmluZyk6IFByb21pc2U8UHJvamVjdCB8IG51bGw+IHtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBxdWVyeUNvbnRyYWN0KCdnZXRfcHJvamVjdCcsIFtcbiAgICAgIHsgdHlwZTogJ2J5dGVzJywgdmFsdWU6IHByb2plY3RJZCB9XG4gICAgXSk7XG4gICAgXG4gICAgcmV0dXJuIHJlc3VsdCBhcyBQcm9qZWN0IHwgbnVsbDtcbiAgfSxcbiAgXG4gIC8vIEhlbHBlciBmdW5jdGlvbiB0byBnZXQgYWxsIHByb2plY3RzIChub3QgZGlyZWN0bHkgaW4gY29udHJhY3QpXG4gIC8vIEluIGEgcmVhbCBpbXBsZW1lbnRhdGlvbiwgd2Ugd291bGQgaGF2ZSBhIGJhY2tlbmQgQVBJIHRvIHF1ZXJ5IGFsbCBwcm9qZWN0c1xuICAvLyBvciBpbXBsZW1lbnQgcGFnaW5hdGlvbiBpbiB0aGUgc21hcnQgY29udHJhY3RcbiAgYXN5bmMgZ2V0TWFuYWdlclByb2plY3RzKG1hbmFnZXJBZGRyZXNzOiBzdHJpbmcpOiBQcm9taXNlPFByb2plY3RbXT4ge1xuICAgIHRocm93IG5ldyBFcnJvcignTm90IGltcGxlbWVudGVkOiBUaGlzIHdvdWxkIHJlcXVpcmUgYmFja2VuZCBpbmRleGluZyBvciBjb250cmFjdCBjaGFuZ2VzJyk7XG4gICAgLy8gRm9yIGRlbW9uc3RyYXRpb24gb25seSwgdGhpcyBzaG91bGQgYmUgaW1wbGVtZW50ZWQgd2l0aCBhIGJhY2tlbmQgc2VydmljZVxuICAgIC8vIHRoYXQgaW5kZXhlcyBjb250cmFjdCBldmVudHMgb3IgYSBjb250cmFjdCBtZXRob2QgdG8gcmV0cmlldmUgcHJvamVjdHMgYnkgbWFuYWdlclxuICB9XG59OyJdLCJuYW1lcyI6WyJpbnZva2VDb250cmFjdCIsInF1ZXJ5Q29udHJhY3QiLCJOQVRJVkVfVE9LRU5fQUREUkVTUyIsIkNvbnRyYWN0U2VydmljZSIsImNyZWF0ZVByb2plY3QiLCJtYW5hZ2VyQWRkcmVzcyIsIm5hbWUiLCJyZXBvc2l0b3J5VXJsIiwiYWRkcmVzc1BhcmFtIiwidHlwZSIsInZhbHVlIiwicmVzdWx0IiwiY3JlYXRlVGFzayIsInByb2plY3RJZCIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJjb21wZW5zYXRpb24iLCJ0b2tlbkFkZHJlc3MiLCJtYW5hZ2VyUGFyYW0iLCJ0b2tlblBhcmFtIiwiYXBwcm92ZUFwcGxpY2F0aW9uIiwidGFza0lkIiwiZGV2ZWxvcGVyQWRkcmVzcyIsImRldmVsb3BlclBhcmFtIiwiYXBwcm92ZUNvbXBsZXRpb24iLCJhcHBseUZvclRhc2siLCJleHBlY3RlZENvbXBsZXRpb24iLCJzdGFydFRhc2siLCJtYXJrVGFza0NvbXBsZXRlZCIsImdldFByb2plY3RUYXNrcyIsImdldFRhc2siLCJnZXRQcm9qZWN0IiwiZ2V0TWFuYWdlclByb2plY3RzIiwiRXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/utils/contractService.ts\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/utils/createContractOperation.ts":
/*!**********************************************!*\
  !*** ./src/utils/createContractOperation.ts ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContractOperation: () => (/* binding */ createContractOperation)\n/* harmony export */ });\n/**\n * HELPER FUNCTION: Safely create an operation for contract interaction\n * Works across different versions of the Stellar SDK\n * \n * This implementation specifically handles SDK 13.1.0 which uses invokeContractFunction\n * instead of invokeContract or other approaches\n */ function createContractOperation(contract, method, args, sdk) {\n    // First try SDK 13.1.0 approach with invokeContractFunction - most likely to work\n    if (sdk.Operation && sdk.Operation.invokeContractFunction) {\n        try {\n            const footprint = contract.getFootprint ? contract.getFootprint() : contract.contractId;\n            return sdk.Operation.invokeContractFunction({\n                contractAddress: footprint,\n                functionName: method,\n                args: args\n            });\n        } catch (error) {\n            console.error(\"Error using invokeContractFunction:\", error);\n        // Fall through to next approach\n        }\n    }\n    // Try different approaches based on SDK version\n    // Approach 1: Modern SDK with Operation.invokeContract\n    if (sdk.Operation.invokeContract && typeof sdk.Operation.invokeContract === 'function') {\n        try {\n            const footprint = contract.getFootprint ? contract.getFootprint() : contract.contractId;\n            return sdk.Operation.invokeContract({\n                contract: footprint,\n                function: method,\n                args: args\n            });\n        } catch (error) {\n            console.error(\"Error using invokeContract:\", error);\n        // Fall through to next approach\n        }\n    }\n    // Approach 2: SDK with Operation.invokeHostFunction and function parameter\n    if (sdk.Operation.invokeHostFunction && typeof sdk.Operation.invokeHostFunction === 'function') {\n        try {\n            if (sdk.xdr && sdk.xdr.HostFunction) {\n                // Try based on how HostFunction.invokeContract is available\n                if (typeof sdk.xdr.HostFunction.invokeContract === 'function') {\n                    try {\n                        const footprint = contract.getFootprint ? contract.getFootprint() : contract.contractId;\n                        return sdk.Operation.invokeHostFunction({\n                            function: sdk.xdr.HostFunction.invokeContract(new sdk.xdr.InvokeContractArgs({\n                                contractAddress: footprint,\n                                functionName: method,\n                                args: args\n                            })),\n                            auth: []\n                        });\n                    } catch (innerError) {\n                        console.error(\"Error using HostFunction.invokeContract:\", innerError);\n                    // Continue to next approach\n                    }\n                }\n                // Try with HostFunctionType enum if available\n                if (sdk.xdr.HostFunctionType && sdk.xdr.HostFunctionType.invokeContract) {\n                    try {\n                        const footprint = contract.getFootprint ? contract.getFootprint() : contract.contractId;\n                        return sdk.Operation.invokeHostFunction({\n                            hostFunction: new sdk.xdr.HostFunction(sdk.xdr.HostFunctionType.invokeContract(), new sdk.xdr.InvokeContractArgs({\n                                contractAddress: footprint,\n                                functionName: method,\n                                args: args\n                            })),\n                            auth: []\n                        });\n                    } catch (innerError) {\n                        console.error(\"Error using HostFunctionType.invokeContract:\", innerError);\n                    // Continue to next approach\n                    }\n                }\n            }\n        } catch (err) {\n            console.log(\"Could not create operation with function parameter:\", err);\n        }\n        // Approach 3: Try with simple hostFunction parameter structure\n        try {\n            return sdk.Operation.invokeHostFunction({\n                hostFunction: {\n                    contractId: typeof contract === 'string' ? contract : contract.contractId,\n                    functionName: method,\n                    args: args\n                },\n                auth: []\n            });\n        } catch (err) {\n            console.log(\"Could not create operation with simple hostFunction:\", err);\n        }\n        // Approach 4: Even more basic approach\n        try {\n            return sdk.Operation.invokeHostFunction({\n                function: method,\n                parameters: args,\n                contractId: typeof contract === 'string' ? contract : contract.contractId,\n                auth: []\n            });\n        } catch (err) {\n            console.log(\"Could not create operation with basic approach:\", err);\n        }\n    }\n    // If we reach here, no approach worked - throw an error\n    throw new Error(\"No compatible operation creation method found for this SDK version\");\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/utils/createContractOperation.ts\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/utils/soroban.ts":
/*!******************************!*\
  !*** ./src/utils/soroban.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONTRACT_ID: () => (/* binding */ CONTRACT_ID),\n/* harmony export */   NETWORK: () => (/* binding */ NETWORK),\n/* harmony export */   NETWORK_PASSPHRASE: () => (/* binding */ NETWORK_PASSPHRASE),\n/* harmony export */   SOROBAN_RPC_URL: () => (/* binding */ SOROBAN_RPC_URL),\n/* harmony export */   assembleTx: () => (/* binding */ assembleTx),\n/* harmony export */   createSorobanContract: () => (/* binding */ createSorobanContract),\n/* harmony export */   getSorobanRpc: () => (/* binding */ getSorobanRpc),\n/* harmony export */   getWalletPublicKey: () => (/* binding */ getWalletPublicKey),\n/* harmony export */   invokeContract: () => (/* binding */ invokeContract),\n/* harmony export */   isSimulationError: () => (/* binding */ isSimulationError),\n/* harmony export */   queryContract: () => (/* binding */ queryContract),\n/* harmony export */   scValFromJs: () => (/* binding */ scValFromJs),\n/* harmony export */   scValToJs: () => (/* binding */ scValToJs)\n/* harmony export */ });\n/* harmony import */ var _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stellar/freighter-api */ \"(pages-dir-browser)/./node_modules/@stellar/freighter-api/build/index.min.js\");\n/* harmony import */ var _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_stellar_freighter_api__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stellar/stellar-sdk */ \"(pages-dir-browser)/./node_modules/@stellar/stellar-sdk/dist/stellar-sdk.min.js\");\n/* harmony import */ var _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _stellar_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stellar-utils */ \"(pages-dir-browser)/./src/utils/stellar-utils.ts\");\n/* harmony import */ var _createContractOperation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./createContractOperation */ \"(pages-dir-browser)/./src/utils/createContractOperation.ts\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(pages-dir-browser)/./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n// Get network configuration from environment variables\nconst NETWORK = process.env.NEXT_PUBLIC_SOROBAN_NETWORK || 'testnet';\nconst NETWORK_PASSPHRASE = process.env.NEXT_PUBLIC_SOROBAN_NETWORK_PASSPHRASE || _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.Networks.TESTNET;\nconst SOROBAN_RPC_URL = process.env.NEXT_PUBLIC_SOROBAN_RPC_URL || 'https://soroban-testnet.stellar.org';\nconst CONTRACT_ID = process.env.NEXT_PUBLIC_CONTRACT_ID || 'CBJE2GX5BTM4VWE7R2Q7AOCLMMYFPK722QTHWCRFUPSFPC5XGNMHOR6N';\n// Cache for the server instance\nlet sorobanRpcServerInstance = null;\n// Initialize Soroban RPC client\nconst getSorobanRpc = ()=>{\n    // Return cached instance if available\n    if (sorobanRpcServerInstance) {\n        return sorobanRpcServerInstance;\n    }\n    try {\n        // Create a new rpc.Server instance with the configured URL\n        sorobanRpcServerInstance = new _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.rpc.Server(SOROBAN_RPC_URL, {\n            allowHttp: SOROBAN_RPC_URL.startsWith('http://')\n        });\n        console.log(\"Successfully created Soroban RPC server\");\n        return sorobanRpcServerInstance;\n    } catch (error) {\n        console.error(\"Failed to create Soroban RPC server:\", error);\n        // If server creation failed, create a fallback mock server\n        // This ensures the app doesn't crash, but operations will fail gracefully\n        const mockServer = {\n            getAccount: async (publicKey)=>{\n                console.log(\"Mock getAccount called with: \".concat(publicKey));\n                return {\n                    accountId: ()=>publicKey,\n                    sequenceNumber: ()=>\"0\"\n                };\n            },\n            simulateTransaction: async (tx)=>{\n                console.log(\"Mock simulateTransaction called\");\n                return {\n                    results: [\n                        {\n                            xdr: \"\"\n                        }\n                    ],\n                    latestLedger: 0,\n                    transactionData: new Uint8Array(),\n                    minResourceFee: \"0\",\n                    events: [],\n                    cost: {\n                        cpuInsns: \"0\",\n                        memBytes: \"0\"\n                    }\n                };\n            },\n            sendTransaction: async (signedXDR)=>{\n                console.log(\"Mock sendTransaction called\");\n                return {\n                    status: \"SUCCESS\",\n                    hash: \"mock_hash\",\n                    errorResultXdr: \"\",\n                    latestLedger: 0,\n                    latestLedgerCloseTime: 0\n                };\n            },\n            getTransaction: async (hash)=>{\n                console.log(\"Mock getTransaction called with: \".concat(hash));\n                return {\n                    status: \"SUCCESS\",\n                    returnValue: _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvString(\"mock_result\"),\n                    latestLedger: 0,\n                    latestLedgerCloseTime: 0\n                };\n            },\n            getEvents: async ()=>({\n                    events: [],\n                    latestLedger: 0\n                }),\n            getNetwork: async ()=>({\n                    passphrase: NETWORK_PASSPHRASE\n                }),\n            getLedgerEntries: async ()=>({\n                    entries: [],\n                    latestLedger: 0\n                }),\n            getHealth: async ()=>({\n                    status: \"healthy\"\n                })\n        };\n        sorobanRpcServerInstance = mockServer;\n        return sorobanRpcServerInstance;\n    }\n};\n// Connect to the Freighter wallet\nconst getWalletPublicKey = async ()=>{\n    if (!_stellar_freighter_api__WEBPACK_IMPORTED_MODULE_0__) {\n        throw new Error('Freighter not available. Please install the browser extension.');\n    }\n    try {\n        // Check if Freighter is connected\n        const isConnected = await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_0__.isConnected();\n        if (!isConnected) {\n            throw new Error('Freighter is not connected. Please connect your wallet.');\n        }\n        // Check if user is on the correct network\n        const networkDetails = await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_0__.getNetworkDetails();\n        if (networkDetails.networkPassphrase !== NETWORK_PASSPHRASE) {\n            throw new Error(\"Please switch to \".concat(NETWORK, \" in your Freighter wallet settings.\"));\n        }\n        // Get the user's public key using the correct method based on API version\n        let publicKey;\n        // Try newer API first (getAddress)\n        try {\n            if (typeof _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_0__.getAddress === 'function') {\n                const addressResult = await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_0__.getAddress();\n                if (addressResult) {\n                    if (typeof addressResult === 'object' && 'address' in addressResult) {\n                        publicKey = addressResult.address;\n                    } else if (typeof addressResult === 'string') {\n                        // Sometimes it returns the address directly as a string\n                        publicKey = addressResult;\n                    }\n                }\n            }\n        } catch (addressError) {\n            console.log(\"getAddress API not available or failed, trying fallback\", addressError);\n        }\n        // Try fallback approach with getPublicKey\n        if (!publicKey) {\n            try {\n                // Check if getPublicKey exists and is a function\n                if (typeof _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_0__.getPublicKey === 'function') {\n                    publicKey = await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_0__.getPublicKey();\n                }\n            } catch (publicKeyError) {\n                console.log(\"getPublicKey API failed\", publicKeyError);\n            }\n        }\n        // Final fallback attempt with different method signatures\n        if (!publicKey) {\n            try {\n                const userInfo = await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_0__.getUserInfo();\n                if (userInfo && userInfo.publicKey) {\n                    publicKey = userInfo.publicKey;\n                }\n            } catch (userInfoError) {\n                console.log(\"getUserInfo API failed\", userInfoError);\n            }\n        }\n        if (!publicKey) {\n            throw new Error('Failed to get public key from Freighter using available API methods.');\n        }\n        return publicKey;\n    } catch (error) {\n        console.error('Freighter wallet connection error:', error);\n        throw error instanceof Error ? error : new Error('Unknown error connecting to Freighter wallet');\n    }\n};\n// Helper to convert JavaScript values to Soroban ScVal\nfunction scValFromJs(value) {\n    try {\n        // Handle null or undefined\n        if (value === null || value === undefined) {\n            return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvVoid();\n        }\n        // Handle boolean values\n        if (typeof value === 'boolean') {\n            return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvBool(value);\n        }\n        // Handle numeric values\n        if (typeof value === 'number') {\n            if (Number.isInteger(value)) {\n                // For small integers, use the simple i32 representation\n                if (value >= -2147483648 && value <= 2147483647) {\n                    return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvI32(value);\n                }\n                // For larger integers, use i128 representation\n                return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvI128(new _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.Int128Parts({\n                    lo: _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.Uint64.fromString(Math.abs(value).toString()),\n                    hi: value < 0 ? _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.Int64.fromString('-1') : _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.Int64.fromString('0')\n                }));\n            } else {\n                throw new Error('Decimal numbers not supported yet');\n            }\n        }\n        // Handle string values\n        if (typeof value === 'string') {\n            // Check if it's a Stellar public key (starts with G)\n            if (value.startsWith('G') && value.length === 56) {\n                try {\n                    const keypair = _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.Keypair.fromPublicKey(value);\n                    return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvAddress(_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScAddress.scAddressTypeAccount(_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.PublicKey.publicKeyTypeEd25519(keypair.rawPublicKey())));\n                } catch (error) {\n                    console.warn(\"Error converting public key to ScAddress, using string instead:\", error);\n                    return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvString(value);\n                }\n            }\n            // Handle contract IDs that might be in string format\n            if (value.match(/^[0-9a-fA-F]{64}$/)) {\n                try {\n                    return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvAddress(_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScAddress.scAddressTypeContract(Buffer.from(value, 'hex')));\n                } catch (error) {\n                    console.warn(\"Error converting hex to contract address, using string instead:\", error);\n                }\n            }\n            // Regular string\n            return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvString(value);\n        }\n        // Handle Buffer objects (binary data)\n        if (Buffer.isBuffer(value)) {\n            return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvBytes(value);\n        }\n        // Handle arrays\n        if (Array.isArray(value)) {\n            const vec = value.map((item)=>scValFromJs(item));\n            return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvVec(vec);\n        }\n        // Handle objects\n        if (typeof value === 'object') {\n            // Handle address objects: {type: 'address', value: 'G...'}\n            if (value.type === 'address' && value.value) {\n                if (typeof value.value === 'string' && value.value.startsWith('G')) {\n                    try {\n                        const keypair = _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.Keypair.fromPublicKey(value.value);\n                        return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvAddress(_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScAddress.scAddressTypeAccount(_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.PublicKey.publicKeyTypeEd25519(keypair.rawPublicKey())));\n                    } catch (error) {\n                        console.warn(\"Error converting address object to ScAddress:\", error);\n                        return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvString(value.value);\n                    }\n                } else if (typeof value.value === 'string' && value.value.match(/^[0-9a-fA-F]{64}$/)) {\n                    // Contract address\n                    try {\n                        return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvAddress(_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScAddress.scAddressTypeContract(Buffer.from(value.value, 'hex')));\n                    } catch (error) {\n                        console.warn(\"Error converting contract address:\", error);\n                        return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvString(value.value);\n                    }\n                }\n            }\n            // Handle byte array objects: {type: 'bytes', value: 'deadbeef...'}\n            if (value.type === 'bytes' && value.value) {\n                try {\n                    // First try to convert using Uint8Array (works in more environments)\n                    const bytes = typeof value.value === 'string' ? Buffer.from(value.value.replace(/^0x/i, ''), 'hex') : Buffer.from(value.value);\n                    // Try to determine if this should be BytesN instead of regular bytes\n                    if (value.length && typeof value.length === 'number') {\n                        try {\n                            // This is for SDK versions that support BytesN directly\n                            if (_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvBytesN && typeof _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvBytesN === 'function') {\n                                return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvBytesN(bytes);\n                            }\n                        } catch (bytesNError) {\n                            console.warn(\"Error using bytesN format, falling back to bytes:\", bytesNError);\n                        }\n                    }\n                    return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvBytes(bytes);\n                } catch (error) {\n                    console.warn(\"Error converting bytes object:\", error);\n                    return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvString(String(value.value));\n                }\n            }\n            // Handle maps for complex objects\n            if (Object.keys(value).length > 0 && !value.type) {\n                const entries = Object.entries(value).map((param)=>{\n                    let [key, val] = param;\n                    return new _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScMapEntry({\n                        key: scValFromJs(key),\n                        val: scValFromJs(val)\n                    });\n                });\n                return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.scvMap(entries);\n            }\n        }\n        // If we get here, we don't know how to convert the value\n        throw new Error(\"Cannot convert \".concat(JSON.stringify(value), \" to ScVal\"));\n    } catch (error) {\n        console.error(\"Error in scValFromJs:\", error);\n        throw error;\n    }\n}\n// Helper to convert Soroban ScVal to JavaScript values\nfunction scValToJs(value) {\n    try {\n        if (!value) {\n            return null;\n        }\n        switch(value.switch()){\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvBool():\n                return value.b();\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvVoid():\n                return null;\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvString():\n                return value.str().toString();\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvBytes():\n                return value.bytes();\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvI32():\n                return value.i32();\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvI64():\n                return value.i64().toString();\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvI128():\n                {\n                    const i128 = value.i128();\n                    // Handling positive and negative numbers properly\n                    const hi = i128.hi().toString();\n                    const lo = i128.lo().toString();\n                    // For small enough numbers that fit in JavaScript's Number\n                    if (hi === '0') {\n                        return lo;\n                    } else if (hi === '-1' && lo !== '0') {\n                        return \"-\".concat(lo);\n                    }\n                    // For larger numbers, return as string with sign\n                    return hi.startsWith('-') ? \"-\".concat(lo) : lo;\n                }\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvU32():\n                return value.u32();\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvU64():\n                return value.u64().toString();\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvU128():\n                {\n                    const u128 = value.u128();\n                    return u128.lo().toString();\n                }\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvVec():\n                {\n                    const vec = value.vec();\n                    // Make sure vec is not null and is an array with a map function\n                    if (vec && Array.isArray(vec) && typeof vec.map === 'function') {\n                        return vec.map(scValToJs);\n                    }\n                    return []; // Return empty array as fallback\n                }\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvMap():\n                {\n                    const map = value.map();\n                    const result = {};\n                    // Check if map exists and is iterable\n                    if (map && (Array.isArray(map) || typeof map[Symbol.iterator] === 'function')) {\n                        try {\n                            for (const entry of map){\n                                if (entry && typeof entry.key === 'function' && typeof entry.val === 'function') {\n                                    const key = scValToJs(entry.key());\n                                    const val = scValToJs(entry.val());\n                                    // Ensure key is a valid object key (string)\n                                    const keyStr = typeof key === 'string' ? key : JSON.stringify(key);\n                                    result[keyStr] = val;\n                                }\n                            }\n                        } catch (err) {\n                            console.warn(\"Error iterating over map entries:\", err);\n                        }\n                    }\n                    return result;\n                }\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvAddress():\n                {\n                    // First check if address is null\n                    const address = value.address();\n                    if (!address) {\n                        return \"<Null Address>\";\n                    }\n                    try {\n                        // Get the switch value safely\n                        const switchValue = address.switch ? address.switch() : null;\n                        // Public key account address\n                        if (switchValue === _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScAddressType.scAddressTypeAccount()) {\n                            try {\n                                const accountId = address.accountId();\n                                if (!accountId) return \"<Invalid Account Id>\";\n                                const ed25519Buffer = accountId.ed25519 && typeof accountId.ed25519 === 'function' ? accountId.ed25519() : null;\n                                if (!ed25519Buffer) return \"<Invalid Ed25519 Key>\";\n                                // Try to convert to a Stellar public key string (G...)\n                                try {\n                                    const keypair = _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.Keypair.fromRawEd25519Seed(ed25519Buffer);\n                                    return keypair.publicKey();\n                                } catch (e) {\n                                    // Fall back to hex representation\n                                    return ed25519Buffer.toString('hex');\n                                }\n                            } catch (error) {\n                                console.warn(\"Error converting account address:\", error);\n                                return \"<Invalid Account Address>\";\n                            }\n                        }\n                        // Contract address\n                        if (switchValue === _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScAddressType.scAddressTypeContract()) {\n                            try {\n                                const contractIdBuffer = address.contractId && typeof address.contractId === 'function' ? address.contractId() : null;\n                                if (!contractIdBuffer) return \"<Invalid Contract Id>\";\n                                return contractIdBuffer.toString('hex');\n                            } catch (error) {\n                                console.warn(\"Error converting contract address:\", error);\n                                return \"<Invalid Contract Address>\";\n                            }\n                        }\n                        return \"<Unknown Address Type: \".concat(switchValue, \">\");\n                    } catch (error) {\n                        console.warn(\"Error processing ScAddress:\", error);\n                        return \"<Error Processing Address>\";\n                    }\n                }\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvSymbol():\n                return value.sym().toString();\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvTimepoint():\n                return value.timepoint().toString();\n            case _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScValType.scvDuration():\n                return value.duration().toString();\n            default:\n                return \"<Unknown Type: \".concat(value.switch().name, \">\");\n        }\n    } catch (error) {\n        console.error(\"Error in scValToJs:\", error);\n        return null;\n    }\n}\n// Check if the object has a method or property\nconst hasProperty = (obj, prop)=>{\n    return obj && prop in obj;\n};\n// Create a contract instance for a given contractId\nconst createSorobanContract = (contractId)=>{\n    // Check if the contract ID is a placeholder or empty\n    if (contractId === 'YOUR_DEPLOYED_CONTRACT_ID_HERE' || contractId === '0000000000000000000000000000000000000000000000000000000000000000' || !contractId) {\n        // Use our deployed contract ID\n        console.warn('Using hardcoded contract ID as fallback');\n        contractId = 'CBJE2GX5BTM4VWE7R2Q7AOCLMMYFPK722QTHWCRFUPSFPC5XGNMHOR6N';\n    }\n    // Validate using our utility function\n    if (!(0,_stellar_utils__WEBPACK_IMPORTED_MODULE_2__.isValidContractId)(contractId)) {\n        console.warn(\"Contract ID format may not be valid: \".concat(contractId));\n    // Continue anyway and let the SDK handle potential errors\n    } else {\n        console.log(\"Creating contract with valid ID: \".concat(contractId));\n    }\n    try {\n        // Use any type to bypass TypeScript checking\n        const sdk = _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__;\n        // Create a contract instance - handle different SDK versions\n        if (sdk.rpc && sdk.rpc.Contract) {\n            // Newer SDK version with rpc namespace\n            return new sdk.rpc.Contract(contractId);\n        } else if (sdk.Contract) {\n            // Older SDK version without rpc namespace\n            return new sdk.Contract(contractId);\n        } else {\n            throw new Error(\"No Contract constructor found in StellarSdk\");\n        }\n    } catch (error) {\n        console.error(\"Error creating contract:\", error);\n        // Create a minimal working contract interface\n        return {\n            contractId: contractId,\n            // Required method to get the contract address in ScAddress format\n            getFootprint: ()=>{\n                try {\n                    // Handle both hex format and Stellar address format (C...)\n                    if (contractId.match(/^[0-9a-fA-F]{64}$/)) {\n                        return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScAddress.scAddressTypeContract(Buffer.from(contractId, 'hex'));\n                    } else if (contractId.startsWith('C') && contractId.length === 56) {\n                        try {\n                            // Try to decode from StrKey format if available\n                            if (_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.StrKey && typeof _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.StrKey.decodeContract === 'function') {\n                                const decoded = _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.StrKey.decodeContract(contractId);\n                                return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScAddress.scAddressTypeContract(decoded);\n                            }\n                            throw new Error(\"StrKey.decodeContract not available\");\n                        } catch (strKeyError) {\n                            console.warn(\"Failed to decode StrKey contract ID, using hex fallback:\", strKeyError);\n                            // Just use the hex version as fallback\n                            return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScAddress.scAddressTypeContract(Buffer.from(contractId, 'hex'));\n                        }\n                    } else {\n                        // Last resort - try hex anyway\n                        return _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScAddress.scAddressTypeContract(Buffer.from(contractId, 'hex'));\n                    }\n                } catch (e) {\n                    console.error(\"Error creating contract address:\", e);\n                    throw new Error(\"Failed to create contract address from ID: \".concat(contractId));\n                }\n            }\n        };\n    }\n};\n// Check if a simulation result contains an error\nconst isSimulationError = (result)=>{\n    if (!result) {\n        return true; // Null or undefined result is considered an error\n    }\n    try {\n        // Use StellarSdk built-in error detection if available\n        if (_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.rpc && \"isSimulationError\" in _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.rpc) {\n            const isSimulationErrorFn = _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.rpc.isSimulationError;\n            if (typeof isSimulationErrorFn === 'function') {\n                try {\n                    return isSimulationErrorFn(result);\n                } catch (err) {\n                    console.warn(\"Error using SDK isSimulationError function:\", err);\n                // Continue to fallback methods\n                }\n            }\n        }\n        // Manual error detection as fallback\n        // Check common error indicators\n        if (result && typeof result === 'object' && 'error' in result) return true;\n        if (result.status && result.status === 'ERROR') return true;\n        if (result.result && result.result.status && result.result.status === 'ERROR') return true;\n        if (result.errorResultXdr) return true;\n        if (result.diagnostics && result.diagnostics.error) return true;\n        // If the result contains an error property or any property with error in the name\n        if (typeof result === 'object') {\n            const hasErrorProperty = Object.keys(result).some((key)=>key.toLowerCase().includes('error') || key.toLowerCase().includes('fail') || key.toLowerCase().includes('exception'));\n            if (hasErrorProperty && !result.success) {\n                return true;\n            }\n        }\n        // If auth required is returned, that's not necessarily an error\n        if (result.status === 'AUTH_REQUIRED') {\n            return false;\n        }\n        // Check expected success fields\n        if (result.results && Array.isArray(result.results) && result.results.length > 0) {\n            return false; // Has valid results array\n        }\n        if (result.result && result.status === 'SUCCESS') {\n            return false; // Has result and success status\n        }\n        // Otherwise, if we have transactionData, we're probably ok\n        if (result.transactionData) {\n            return false;\n        }\n        // For safety, if none of the success conditions were met\n        return Boolean(result.error);\n    } catch (error) {\n        console.error(\"Error checking simulation result:\", error);\n        return true; // If we can't determine, assume error for safety\n    }\n};\n// Assemble a transaction with simulation results\nconst assembleTx = (tx, simulation)=>{\n    if (!tx || !simulation) {\n        console.error(\"Cannot assemble transaction: missing transaction or simulation data\");\n        return tx; // Return original transaction as fallback\n    }\n    try {\n        // Use the StellarSdk assembleTransaction function\n        if (_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.rpc && \"assembleTransaction\" in _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.rpc) {\n            const assembleTransactionFn = _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.rpc.assembleTransaction;\n            if (typeof assembleTransactionFn === 'function') {\n                return assembleTransactionFn(tx, simulation);\n            }\n        }\n        // If the SDK function is not available, extract the transaction data manually\n        console.warn(\"StellarSdk.rpc.assembleTransaction not available, using manual assembly\");\n        // Get a transaction builder\n        const builder = tx.toBuilder();\n        // Extract transaction data from the simulation result\n        let transactionData = null;\n        // Check different possible locations of the transaction data\n        if (simulation.transactionData) {\n            transactionData = simulation.transactionData;\n        } else if (simulation.results && simulation.results.length > 0) {\n            // Some SDK versions return an array of results\n            const firstResult = simulation.results[0];\n            if (firstResult.xdr && typeof firstResult.xdr === 'string') {\n                // Sometimes the data is in XDR format that needs to be parsed\n                try {\n                    const parsed = _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.SorobanTransactionData.fromXDR(firstResult.xdr, 'base64');\n                    transactionData = parsed;\n                } catch (e) {\n                    console.warn(\"Failed to parse transaction data from XDR:\", e);\n                }\n            }\n        }\n        // If we have transaction data, try to set it on the builder\n        if (transactionData) {\n            try {\n                // Modern SDK version has setSorobanData method\n                if (typeof builder.setSorobanData === 'function') {\n                    builder.setSorobanData(transactionData);\n                    return builder.build();\n                }\n                // Try addResourceFee if available (for some SDK versions)\n                if (typeof builder.addResourceFee === 'function' && simulation.minResourceFee) {\n                    builder.addResourceFee(simulation.minResourceFee);\n                }\n                // Try alternate methods to set Soroban data\n                if (typeof builder.setFootprint === 'function' && transactionData.footprint && typeof builder.setResourceFee === 'function') {\n                    builder.setFootprint(transactionData.footprint);\n                    if (transactionData.resourceFee) {\n                        builder.setResourceFee(transactionData.resourceFee);\n                    }\n                    return builder.build();\n                }\n                // Last resort: just set the data directly on the transaction\n                console.warn(\"Using direct property assignment for sorobanData\");\n                tx.sorobanData = transactionData;\n                return tx;\n            } catch (error) {\n                console.warn(\"Error building transaction with sorobanData:\", error);\n                tx.sorobanData = transactionData;\n                return tx;\n            }\n        } else {\n            console.warn(\"No transaction data found in simulation result\");\n            return tx;\n        }\n    } catch (error) {\n        console.error(\"Transaction assembly error:\", error);\n        return tx; // Return original transaction as fallback\n    }\n};\n// Invoke a contract method (write operation - requires signing)\nasync function invokeContract(method) {\n    let args = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n    try {\n        // Get the Soroban RPC server instance\n        const sorobanServer = getSorobanRpc();\n        // Get the user's wallet public key\n        const publicKey = await getWalletPublicKey();\n        console.log(\"Invoking contract method: \".concat(method, \" with args:\"), args);\n        // Get the user's account\n        const account = await sorobanServer.getAccount(publicKey);\n        // Convert JS arguments to Soroban compatible ScVal format\n        const xdrArgs = args.map((arg)=>scValFromJs(arg));\n        // Create a contract instance\n        const contract = createSorobanContract(CONTRACT_ID);\n        // Create the contract invocation operation - using our helper function that handles multiple SDK versions\n        let operation;\n        try {\n            // Use the helper function to create an operation compatible with the current SDK version\n            operation = (0,_createContractOperation__WEBPACK_IMPORTED_MODULE_3__.createContractOperation)(contract, method, xdrArgs, _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__);\n        } catch (error) {\n            console.error(\"Error creating operation with helper function:\", error);\n            throw new Error(\"Failed to create a compatible operation with this SDK version\");\n        }\n        // Build the transaction\n        const transaction = new _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.TransactionBuilder(new _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.Account(account.accountId(), account.sequenceNumber()), {\n            fee: _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.BASE_FEE,\n            networkPassphrase: NETWORK_PASSPHRASE\n        }).addOperation(operation).setTimeout(_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.TimeoutInfinite).build();\n        // Step 1: Simulate the transaction to get fees and resource usage\n        console.log(\"Simulating transaction...\");\n        const simulateResponse = await sorobanServer.simulateTransaction(transaction);\n        // Check if the simulation had an error\n        if (isSimulationError(simulateResponse)) {\n            console.error(\"Simulation failed:\", simulateResponse);\n            // Use safe error extraction with type any to avoid TypeScript errors\n            const errorMessage = simulateResponse.error ? simulateResponse.error : JSON.stringify(simulateResponse);\n            throw new Error(\"Simulation Error: \".concat(errorMessage));\n        }\n        // Step 2: Prepare the transaction with simulation results\n        console.log(\"Preparing transaction with simulation results...\");\n        const preparedTransaction = assembleTx(transaction, simulateResponse);\n        // Step 3: Sign the transaction with Freighter\n        console.log(\"Signing transaction with Freighter wallet...\");\n        const preparedXDR = preparedTransaction.toXDR();\n        const signedXDR = await _stellar_freighter_api__WEBPACK_IMPORTED_MODULE_0__.signTransaction(preparedXDR, {\n            networkPassphrase: NETWORK_PASSPHRASE\n        });\n        // Step 4: Send the signed transaction to the network\n        console.log(\"Sending transaction to the network...\");\n        // Use 'as any' to bypass TypeScript type checking on sendTransaction\n        const txResponse = await sorobanServer.sendTransaction(signedXDR);\n        console.log(\"Transaction submission response:\", txResponse);\n        if (txResponse.status === 'PENDING') {\n            // Step 5: Wait for transaction to complete\n            console.log(\"Transaction pending with hash: \".concat(txResponse.hash));\n            let txResult;\n            let status = 'PENDING';\n            let attempts = 0;\n            const maxAttempts = 10;\n            while(status === 'PENDING' && attempts < maxAttempts){\n                attempts++;\n                await new Promise((resolve)=>setTimeout(resolve, 2000)); // Wait 2 seconds between checks\n                console.log(\"Checking transaction status (attempt \".concat(attempts, \"/\").concat(maxAttempts, \")...\"));\n                txResult = await sorobanServer.getTransaction(txResponse.hash);\n                status = txResult.status;\n            }\n            if (status === 'SUCCESS') {\n                console.log(\"Transaction successful!\");\n                // Process results if needed - using 'as any' for type safety\n                const txResultAny = txResult;\n                if (txResultAny && txResultAny.returnValue) {\n                    const result = scValToJs(txResultAny.returnValue);\n                    console.log(\"Contract returned:\", result);\n                    return result;\n                }\n                return true; // Return true if no specific return value\n            } else {\n                console.error(\"Transaction failed:\", txResult);\n                // Safely extract error details\n                const errorInfo = txResult ? txResult.resultXdr || status : status;\n                throw new Error(\"Transaction failed: \".concat(errorInfo));\n            }\n        } else if (txResponse.status === 'ERROR') {\n            console.error(\"Transaction submission failed:\", txResponse);\n            // Safely extract error details using 'as any'\n            const errorInfo = txResponse.errorResult || txResponse.errorResultXdr || JSON.stringify(txResponse);\n            throw new Error(\"Transaction submission failed: \".concat(errorInfo));\n        } else {\n            // Some other status like SUCCESS, which shouldn't normally happen immediately\n            console.log(\"Unexpected immediate transaction result:\", txResponse);\n            return true;\n        }\n    } catch (error) {\n        console.error('Contract invocation error:', error);\n        throw error;\n    }\n}\n// Query a contract method (read-only, doesn't require signing)\nasync function queryContract(method) {\n    let args = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n    try {\n        console.log(\"Querying contract method: \".concat(method, \" with args:\"), args);\n        // Get the Soroban RPC server instance\n        const sorobanServer = getSorobanRpc();\n        // Convert JS arguments to Soroban compatible ScVal format\n        const xdrArgs = args.map((arg)=>scValFromJs(arg));\n        // Create a contract instance\n        const contract = createSorobanContract(CONTRACT_ID);\n        // Create a throwaway account for simulation purposes\n        // This is a special account that doesn't need to exist on the network\n        const simulationAccount = new _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.Account('GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF', '0');\n        // Create an operation to invoke the contract function - using our helper function\n        let operation;\n        try {\n            // Use the helper function to create an operation compatible with the current SDK version\n            operation = (0,_createContractOperation__WEBPACK_IMPORTED_MODULE_3__.createContractOperation)(contract, method, xdrArgs, _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__);\n        } catch (error) {\n            console.error(\"Error creating query operation with helper function:\", error);\n            throw new Error(\"Failed to create a compatible operation with this SDK version\");\n        }\n        // Build a transaction for simulation\n        const simulationTx = new _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.TransactionBuilder(simulationAccount, {\n            fee: _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.BASE_FEE,\n            networkPassphrase: NETWORK_PASSPHRASE\n        }).addOperation(operation).setTimeout(_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.TimeoutInfinite).build();\n        // Simulate the transaction\n        console.log(\"Simulating read-only transaction...\");\n        const simulationResult = await sorobanServer.simulateTransaction(simulationTx);\n        // Check if the simulation had an error\n        if (isSimulationError(simulationResult)) {\n            console.error(\"Query simulation failed:\", simulationResult);\n            // Use safe error extraction with type any to avoid TypeScript errors\n            const errorMessage = simulationResult.error ? simulationResult.error : JSON.stringify(simulationResult);\n            throw new Error(\"Query Error: \".concat(errorMessage));\n        }\n        // Extract the return value from the simulation result - handle different API formats\n        // Use type safety with 'as any'\n        const simulationResultAny = simulationResult;\n        // Check for direct returnValue property\n        if (simulationResultAny.returnValue) {\n            // Direct returnValue (common in newer SDK versions)\n            try {\n                const result = scValToJs(simulationResultAny.returnValue);\n                console.log(\"Query result for \".concat(method, \":\"), result);\n                return result;\n            } catch (error) {\n                console.warn(\"Error parsing direct returnValue:\", error);\n            }\n        }\n        // Check for results array format (common in some SDK versions)\n        if (simulationResultAny.results && Array.isArray(simulationResultAny.results) && simulationResultAny.results.length > 0) {\n            const firstResult = simulationResultAny.results[0];\n            // Check for returnValue inside first result\n            if (firstResult && firstResult.returnValue) {\n                try {\n                    const result = scValToJs(firstResult.returnValue);\n                    console.log(\"Query result for \".concat(method, \" (from results array):\"), result);\n                    return result;\n                } catch (error) {\n                    console.warn(\"Error parsing returnValue from results array:\", error);\n                }\n            }\n            // Some SDK versions return results[0].xdr which needs to be parsed\n            if (firstResult && firstResult.xdr && typeof firstResult.xdr === 'string') {\n                try {\n                    const scVal = _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_1__.xdr.ScVal.fromXDR(firstResult.xdr, 'base64');\n                    const result = scValToJs(scVal);\n                    console.log(\"Query result for \".concat(method, \" (from XDR):\"), result);\n                    return result;\n                } catch (error) {\n                    console.warn(\"Error parsing XDR from results array:\", error);\n                }\n            }\n        }\n        console.log(\"Query returned no value\");\n        return null;\n    } catch (error) {\n        console.error('Contract query error:', error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/utils/soroban.ts\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/utils/stellar-utils.ts":
/*!************************************!*\
  !*** ./src/utils/stellar-utils.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatContractId: () => (/* binding */ formatContractId),\n/* harmony export */   isValidContractId: () => (/* binding */ isValidContractId)\n/* harmony export */ });\n/**\n * Utility functions for working with Stellar\n */ /**\n * Checks if a string is a valid Stellar contract ID (strkey format starting with C)\n */ function isValidContractId(contractId) {\n    if (!contractId) return false;\n    try {\n        // Simple format check for Stellar contract IDs (C...)\n        if (contractId.startsWith('C') && contractId.length === 56) {\n            return true;\n        }\n        // Hex format check (64 characters)\n        if (/^[0-9a-fA-F]{64}$/.test(contractId)) {\n            return true;\n        }\n        return false;\n    } catch (err) {\n        console.error('Error validating contract ID:', err);\n        return false;\n    }\n}\n/**\n * Gets a human-readable contract ID format\n */ function formatContractId(contractId) {\n    let maxLength = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 12;\n    if (!contractId) return '';\n    // If it's already short enough, return as is\n    if (contractId.length <= maxLength) {\n        return contractId;\n    }\n    // Otherwise, show beginning and end with ellipsis\n    const start = contractId.slice(0, maxLength / 2);\n    const end = contractId.slice(-maxLength / 2);\n    return \"\".concat(start, \"...\").concat(end);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy91dGlscy9zdGVsbGFyLXV0aWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBR0E7O0NBRUMsR0FFRDs7Q0FFQyxHQUNNLFNBQVNBLGtCQUFrQkMsVUFBa0I7SUFDbEQsSUFBSSxDQUFDQSxZQUFZLE9BQU87SUFFeEIsSUFBSTtRQUNGLHNEQUFzRDtRQUN0RCxJQUFJQSxXQUFXQyxVQUFVLENBQUMsUUFBUUQsV0FBV0UsTUFBTSxLQUFLLElBQUk7WUFDMUQsT0FBTztRQUNUO1FBRUEsbUNBQW1DO1FBQ25DLElBQUksb0JBQW9CQyxJQUFJLENBQUNILGFBQWE7WUFDeEMsT0FBTztRQUNUO1FBRUEsT0FBTztJQUNULEVBQUUsT0FBT0ksS0FBSztRQUNaQyxRQUFRQyxLQUFLLENBQUMsaUNBQWlDRjtRQUMvQyxPQUFPO0lBQ1Q7QUFDRjtBQUVBOztDQUVDLEdBQ00sU0FBU0csaUJBQWlCUCxVQUFrQjtRQUFFUSxZQUFBQSxpRUFBb0I7SUFDdkUsSUFBSSxDQUFDUixZQUFZLE9BQU87SUFFeEIsNkNBQTZDO0lBQzdDLElBQUlBLFdBQVdFLE1BQU0sSUFBSU0sV0FBVztRQUNsQyxPQUFPUjtJQUNUO0lBRUEsa0RBQWtEO0lBQ2xELE1BQU1TLFFBQVFULFdBQVdVLEtBQUssQ0FBQyxHQUFHRixZQUFZO0lBQzlDLE1BQU1HLE1BQU1YLFdBQVdVLEtBQUssQ0FBQyxDQUFDRixZQUFZO0lBQzFDLE9BQU8sR0FBY0csT0FBWEYsT0FBTSxPQUFTLE9BQUpFO0FBQ3ZCIiwic291cmNlcyI6WyIvaG9tZS9iaXNob3BiZXRoZWwvZGV2YXNpZ24tYnVpbGQtdjEvZGV2YXNpZ24tcG0tZnJvbnRlbmQvc3JjL3V0aWxzL3N0ZWxsYXItdXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgU3RlbGxhclNkayBmcm9tICdAc3RlbGxhci9zdGVsbGFyLXNkayc7XG5pbXBvcnQgeyBLZXlwYWlyIH0gZnJvbSAnc3RlbGxhci1zZGsnO1xuXG4vKipcbiAqIFV0aWxpdHkgZnVuY3Rpb25zIGZvciB3b3JraW5nIHdpdGggU3RlbGxhclxuICovXG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgc3RyaW5nIGlzIGEgdmFsaWQgU3RlbGxhciBjb250cmFjdCBJRCAoc3Rya2V5IGZvcm1hdCBzdGFydGluZyB3aXRoIEMpXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkQ29udHJhY3RJZChjb250cmFjdElkOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgaWYgKCFjb250cmFjdElkKSByZXR1cm4gZmFsc2U7XG4gIFxuICB0cnkge1xuICAgIC8vIFNpbXBsZSBmb3JtYXQgY2hlY2sgZm9yIFN0ZWxsYXIgY29udHJhY3QgSURzIChDLi4uKVxuICAgIGlmIChjb250cmFjdElkLnN0YXJ0c1dpdGgoJ0MnKSAmJiBjb250cmFjdElkLmxlbmd0aCA9PT0gNTYpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBcbiAgICAvLyBIZXggZm9ybWF0IGNoZWNrICg2NCBjaGFyYWN0ZXJzKVxuICAgIGlmICgvXlswLTlhLWZBLUZdezY0fSQvLnRlc3QoY29udHJhY3RJZCkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHZhbGlkYXRpbmcgY29udHJhY3QgSUQ6JywgZXJyKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuLyoqXG4gKiBHZXRzIGEgaHVtYW4tcmVhZGFibGUgY29udHJhY3QgSUQgZm9ybWF0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRDb250cmFjdElkKGNvbnRyYWN0SWQ6IHN0cmluZywgbWF4TGVuZ3RoOiBudW1iZXIgPSAxMik6IHN0cmluZyB7XG4gIGlmICghY29udHJhY3RJZCkgcmV0dXJuICcnO1xuICBcbiAgLy8gSWYgaXQncyBhbHJlYWR5IHNob3J0IGVub3VnaCwgcmV0dXJuIGFzIGlzXG4gIGlmIChjb250cmFjdElkLmxlbmd0aCA8PSBtYXhMZW5ndGgpIHtcbiAgICByZXR1cm4gY29udHJhY3RJZDtcbiAgfVxuICBcbiAgLy8gT3RoZXJ3aXNlLCBzaG93IGJlZ2lubmluZyBhbmQgZW5kIHdpdGggZWxsaXBzaXNcbiAgY29uc3Qgc3RhcnQgPSBjb250cmFjdElkLnNsaWNlKDAsIG1heExlbmd0aCAvIDIpO1xuICBjb25zdCBlbmQgPSBjb250cmFjdElkLnNsaWNlKC1tYXhMZW5ndGggLyAyKTtcbiAgcmV0dXJuIGAke3N0YXJ0fS4uLiR7ZW5kfWA7XG59Il0sIm5hbWVzIjpbImlzVmFsaWRDb250cmFjdElkIiwiY29udHJhY3RJZCIsInN0YXJ0c1dpdGgiLCJsZW5ndGgiLCJ0ZXN0IiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwiZm9ybWF0Q29udHJhY3RJZCIsIm1heExlbmd0aCIsInN0YXJ0Iiwic2xpY2UiLCJlbmQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/utils/stellar-utils.ts\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main"], () => (__webpack_exec__("(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("(pages-dir-browser)/./node_modules/next/dist/client/router.js")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);